export interface LoadFilesOptions {
    ignoredExtensions?: string[];
    extensions?: string[];
    useRequire?: boolean;
    requireMethod?: any;
    globOptions?: import('globby').GlobbyOptions;
    exportNames?: string[];
    recursive?: boolean;
    ignoreIndex?: boolean;
}
export declare function loadFiles<T = any>(pattern: string | string[], options?: LoadFilesOptions): T[];
export declare function loadFilesAsync(pattern: string | string[], options?: LoadFilesOptions): Promise<any[]>;
export { loadFilesAsync as loadSchemaFilesAsync, loadFiles as loadSchemaFiles };
export { loadFilesAsync as loadResolversFilesAsync, loadFiles as loadResolversFiles };
