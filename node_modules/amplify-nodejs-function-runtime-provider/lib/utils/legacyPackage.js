"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.packageResource = void 0;
const archiver_1 = __importDefault(require("archiver"));
const fs_extra_1 = __importDefault(require("fs-extra"));
const path_1 = __importDefault(require("path"));
async function packageResource(request, context) {
    if (!request.lastPackageTimestamp || request.lastBuildTimestamp > request.lastPackageTimestamp) {
        const packageHash = (await context.amplify.hashDir(path_1.default.join(request.srcRoot, 'src'), ['node_modules']));
        const output = fs_extra_1.default.createWriteStream(request.dstFilename);
        return new Promise((resolve, reject) => {
            output.on('close', () => {
                resolve({ packageHash });
            });
            output.on('error', err => {
                reject(new Error(`Failed to zip with error: [${err}]`));
            });
            const zip = archiver_1.default.create('zip', {});
            zip.pipe(output);
            zip.directory(path_1.default.join(request.srcRoot, 'src'), false);
            zip.finalize();
        });
    }
    return Promise.resolve({});
}
exports.packageResource = packageResource;
//# sourceMappingURL=legacyPackage.js.map