"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var auth_helpers_1 = require("../utils/auth-helpers");
var subscriptions_1 = require("../utils/graphql-runner/subscriptions");
var server_1 = require("./subscription/websocket-server/server");
var AppSyncSimulatorSubscriptionServer = /** @class */ (function () {
    function AppSyncSimulatorSubscriptionServer(simulatorContext, server, subscriptionPath) {
        var _this = this;
        if (subscriptionPath === void 0) { subscriptionPath = '/graphql'; }
        this.simulatorContext = simulatorContext;
        this.server = server;
        this.subscriptionPath = subscriptionPath;
        this.onSubscribe = function (doc, variable, headers, request, operationName) { return __awaiter(_this, void 0, void 0, function () {
            var ipAddress, authorization, jwt, requestAuthorizationMode, executionContext, subscriptionResult;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        ipAddress = request.socket.remoteAddress;
                        authorization = auth_helpers_1.extractHeader(headers, 'Authorization');
                        jwt = auth_helpers_1.extractJwtToken(authorization);
                        requestAuthorizationMode = auth_helpers_1.getAuthorizationMode(headers, this.simulatorContext.appSyncConfig);
                        executionContext = {
                            jwt: jwt,
                            sourceIp: ipAddress,
                            headers: headers,
                            requestAuthorizationMode: requestAuthorizationMode,
                            appsyncErrors: [],
                        };
                        return [4 /*yield*/, subscriptions_1.runSubscription(this.simulatorContext.schema, doc, variable, operationName, executionContext)];
                    case 1:
                        subscriptionResult = _a.sent();
                        if (subscriptionResult.asyncIterator) {
                            return [2 /*return*/, subscriptionResult.asyncIterator];
                        }
                        return [2 /*return*/, subscriptionResult];
                }
            });
        }); };
        this.onConnect = function (message, headers) {
            _this.authorizeRequest(headers);
        };
        this.authorizeRequest = function (headers) {
            return auth_helpers_1.getAuthorizationMode(headers, _this.simulatorContext.appSyncConfig);
        };
        this.onSubscribe = this.onSubscribe.bind(this);
        this.onConnect = this.onConnect.bind(this);
        this.realtimeServer = new server_1.WebsocketSubscriptionServer({
            onSubscribeHandler: this.onSubscribe,
            onConnectHandler: this.onConnect,
        }, {
            server: this.server,
            path: this.subscriptionPath,
        });
    }
    AppSyncSimulatorSubscriptionServer.prototype.start = function () {
        this.realtimeServer.start();
    };
    AppSyncSimulatorSubscriptionServer.prototype.stop = function () {
        this.realtimeServer.stop();
    };
    return AppSyncSimulatorSubscriptionServer;
}());
exports.AppSyncSimulatorSubscriptionServer = AppSyncSimulatorSubscriptionServer;
//# sourceMappingURL=websocket-subscription.js.map