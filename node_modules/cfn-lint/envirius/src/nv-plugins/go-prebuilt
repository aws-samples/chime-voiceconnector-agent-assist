#!/usr/bin/env bash

# Output lists of versions
plug_list_versions() {
    # < 1.2.2
    echo $(curl -s "https://code.google.com/p/go/downloads/list?can=1&q=Linux+386" | \
        egrep -o "\/go[0-9]+\.[0-9]+(\.[0-9]+|rc[0-9]{1})\.linux-386.tar.gz" | \
        sort | uniq | egrep -o "[0-9]+\.[0-9]+(\.[0-9]+|rc[0-9]{1})" | \
        sort)
    # >= 1.2.2
    echo $(curl -s "https://golang.org/dl/" | \
        egrep -o "\/go[0-9]+\.[0-9]+(\.[0-9]+|rc[0-9]+|beta[1-9]+)*\.linux-386.tar.gz" | \
        egrep -o "[0-9]+\.[0-9]+(\.[0-9]+|rc[0-9]+|beta[1-9]+)*" | \
        sort)
}

# Return full url for archive
plug_url_for_download() {
    local version=$1
    local v1=$(nv_semver_get_major $1)
    local v2=$(nv_semver_get_minor $1)
    local v3=$(nv_semver_get_patch $1)
    local arch=$(nv_get_system_arch "386" "amd64")
    local system=$(nv_get_system "linux-${arch}" "darwin-${arch}-osx10.8")
    if [ "$v1" -le "1" ] && [ "$v2" -le "2" ] && [ "$v3" -lt "2" ]; then
        echo "https://go.googlecode.com/files/go${version}.${system}.tar.gz"
    else 
        echo "https://storage.googleapis.com/golang/go${version}.${system}.tar.gz"
    fi
}

# Like we build
plug_build() {
    local src_path=$1
    local build_path=$2
    cp -r "$src_path"/* "$build_path"
}

# create activate/deactivate scripts
# and create symlinks for bins
plug_post_install_actions() {
    local env_name=$1
    local env_name_full=$2

    mkdir -p "$env_name_full/bin"

    # create symlinks on each executable file into main /bin
    (
        cd "$env_name_full/go/bin"
        ln -s `find . -executable -type f -printf '../go/bin/%f\n'` "$env_name_full/bin"
    )

    # add activate script
    local activate_path="$env_name_full/bin/activate-go"
    echo "NV_ENV=\$(nv current)" > "$activate_path"
    echo "NV_ENV_PATH=\$(nv_get_env_full_path \$NV_ENV)" >> "$activate_path"
    echo "export NV_OLD_GOROOT=\$GOROOT" >> "$activate_path"
    echo "export NV_OLD_GOPATH=\$GOPATH" >> "$activate_path"
    echo "export GOROOT=\$NV_ENV_PATH/go" >> "$activate_path"
    echo "export GOPATH=\$NV_ENV_PATH/gocode" >> "$activate_path"
    echo "export PATH=\$GOPATH/bin:\$PATH" >> "$activate_path"
    chmod a+x "$activate_path"

    local deactivate_path="$env_name_full/bin/deactivate-go"
    echo "export GOROOT=\$NV_OLD_GOROOT" > "$deactivate_path"
    echo "export GOPATH=\$NV_OLD_GOPATH" >> "$deactivate_path"
    chmod a+x "$deactivate_path"
}
