#!/usr/bin/env bash

nv_cmd_default() {
    declare delete_entries=""
    declare delete_all="no"
    declare -A delete_types=([arc]="no" [src]="no" [build]="no")

    # parse command line
    for opt in "$@"
    do
    case $opt in
        --all)
            delete_all="yes"
            ;;
        --arc | --src | --build)
            local cache_type=$(echo "$opt" | sed 's/--//')
            delete_types[$cache_type]="yes"
            ;;
        --*)
            ;;
        *)
            delete_entries="$delete_entries $opt"
    esac
    done

    if [ "$delete_entries" = "" ] && [ "$delete_all" = "no" ]; then
        echo "Please, enter entry's name to delete or use --all option."
        return
    fi

    for cache_type in arc src build
    do
        if [ "${delete_types[$cache_type]}" = "yes" ]; then
            if [ "$delete_all" = "yes" ]; then
                echo "* Removing all entries in cache /$(nv_bold ${cache_type}) ..."
                local cache_full_path=$(nv_get_${cache_type}_path)
                rm -rf $cache_full_path/*
                continue
            fi

            for entry in $delete_entries
            do
                echo "* Removing $(nv_bold ${entry}) in cache /$(nv_bold ${cache_type}) ..."
                local cache_full=$(nv_get_${cache_type}_path $entry)
                rm -rf $cache_full
            done
        fi
    done
}

nv_cmd_desc() {
    echo "Delete cache entry"
}

nv_cmd_help() {
    nv_show_usage "[options] <entry> [entry, ...]"
    nv_show_desc "$(nv_cmd_desc)"
    echo ""
    echo "Options:"
    echo "  --all   Delete all entries"
    echo "  --arc   Show archives in cache"
    echo "  --src   Show unpacked archives in cache"
    echo "  --build Show builds in cache"
}

# /* vim: set filetype=sh : */
