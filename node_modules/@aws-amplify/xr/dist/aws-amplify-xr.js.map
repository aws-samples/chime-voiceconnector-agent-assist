{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///../src/Errors.ts","webpack:///../../src/Providers/SumerianProvider.ts","webpack:///../../src/Providers/XRProvider.ts","webpack:///../src/XR.ts","webpack:///../src/index.ts","webpack:///external \"@aws-amplify/core\""],"names":[],"mappings":"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","file":"aws-amplify-xr.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@aws-amplify/core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"aws_amplify_xr\", [\"@aws-amplify/core\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"aws_amplify_xr\"] = factory(require(\"@aws-amplify/core\"));\n\telse\n\t\troot[\"aws_amplify_xr\"] = factory(root[\"@aws-amplify/core\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__aws_amplify_core__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib-esm/index.js\");\n","/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar XRError = /** @class */ (function (_super) {\n    __extends(XRError, _super);\n    function XRError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return XRError;\n}(Error));\nexport { XRError };\nvar XRNoSceneConfiguredError = /** @class */ (function (_super) {\n    __extends(XRNoSceneConfiguredError, _super);\n    function XRNoSceneConfiguredError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return XRNoSceneConfiguredError;\n}(XRError));\nexport { XRNoSceneConfiguredError };\nvar XRSceneNotFoundError = /** @class */ (function (_super) {\n    __extends(XRSceneNotFoundError, _super);\n    function XRSceneNotFoundError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return XRSceneNotFoundError;\n}(XRError));\nexport { XRSceneNotFoundError };\nvar XRSceneNotLoadedError = /** @class */ (function (_super) {\n    __extends(XRSceneNotLoadedError, _super);\n    function XRSceneNotLoadedError() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return XRSceneNotLoadedError;\n}(XRError));\nexport { XRSceneNotLoadedError };\nvar XRNoDomElement = /** @class */ (function (_super) {\n    __extends(XRNoDomElement, _super);\n    function XRNoDomElement() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return XRNoDomElement;\n}(XRError));\nexport { XRNoDomElement };\nvar XRSceneLoadFailure = /** @class */ (function (_super) {\n    __extends(XRSceneLoadFailure, _super);\n    function XRSceneLoadFailure() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return XRSceneLoadFailure;\n}(XRError));\nexport { XRSceneLoadFailure };\nvar XRProviderNotConfigured = /** @class */ (function (_super) {\n    __extends(XRProviderNotConfigured, _super);\n    function XRProviderNotConfigured() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return XRProviderNotConfigured;\n}(XRError));\nexport { XRProviderNotConfigured };\n//# sourceMappingURL=Errors.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n/*\n * Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger, Signer, Credentials, Constants, } from '@aws-amplify/core';\nimport { AbstractXRProvider } from './XRProvider';\nimport { XRNoSceneConfiguredError, XRSceneNotFoundError, XRSceneNotLoadedError, XRNoDomElement, XRSceneLoadFailure, } from '../Errors';\nvar SUMERIAN_SERVICE_NAME = 'sumerian';\nvar logger = new Logger('SumerianProvider');\nvar SumerianProvider = /** @class */ (function (_super) {\n    __extends(SumerianProvider, _super);\n    function SumerianProvider(options) {\n        if (options === void 0) { options = {}; }\n        return _super.call(this, options) || this;\n    }\n    SumerianProvider.prototype.getProviderName = function () {\n        return 'SumerianProvider';\n    };\n    SumerianProvider.prototype.loadScript = function (url) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        var scriptElement = document.createElement('script');\n                        scriptElement.src = url;\n                        scriptElement.addEventListener('load', function (event) {\n                            resolve();\n                        });\n                        scriptElement.addEventListener('error', function (event) {\n                            reject(new Error(\"Failed to load script: \" + url));\n                        });\n                        document.head.appendChild(scriptElement);\n                    })];\n            });\n        });\n    };\n    SumerianProvider.prototype.loadScene = function (sceneName, domElementId, sceneOptions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var errorMsg, errorMsg, element, errorMsg, scene, errorMsg, sceneUrl, sceneId, sceneRegion, errorMsg, awsSDKConfigOverride, fetchOptions, url, credentials, accessInfo, serviceInfo, request, e_1, apiResponse, apiResponseJson, sceneBundleData, sceneBundle, sceneBundleJson, error_1, progressCallback, publishParamOverrides, sceneLoadParams, sceneController, _i, _a, warning;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!sceneName) {\n                            errorMsg = 'No scene name passed into loadScene';\n                            logger.error(errorMsg);\n                            throw new XRSceneLoadFailure(errorMsg);\n                        }\n                        if (!domElementId) {\n                            errorMsg = 'No dom element id passed into loadScene';\n                            logger.error(errorMsg);\n                            throw new XRNoDomElement(errorMsg);\n                        }\n                        element = document.getElementById(domElementId);\n                        if (!element) {\n                            errorMsg = \"DOM element id, \" + domElementId + \" not found\";\n                            logger.error(errorMsg);\n                            throw new XRNoDomElement(errorMsg);\n                        }\n                        scene = this.getScene(sceneName);\n                        if (!scene.sceneConfig) {\n                            errorMsg = \"No scene config configured for scene: \" + sceneName;\n                            logger.error(errorMsg);\n                            throw new XRSceneLoadFailure(errorMsg);\n                        }\n                        sceneUrl = scene.sceneConfig.url;\n                        sceneId = scene.sceneConfig.sceneId;\n                        if (scene.sceneConfig.hasOwnProperty('region')) {\n                            // Use the scene region on the Sumerian scene configuration\n                            sceneRegion = scene.sceneConfig.region;\n                        }\n                        else if (this.options.hasOwnProperty('region')) {\n                            // Use the scene region on the XR category configuration\n                            sceneRegion = this.options.region;\n                        }\n                        else {\n                            errorMsg = \"No region configured for scene: \" + sceneName;\n                            logger.error(errorMsg);\n                            throw new XRSceneLoadFailure(errorMsg);\n                        }\n                        awsSDKConfigOverride = {\n                            region: sceneRegion,\n                            // This is passed to the AWS clients created in\n                            // Sumerian's AwsSystem\n                            // This helps other services(like Lex and Polly) to track\n                            // traffic coming from Sumerian scenes embedded with Amplify\n                            customUserAgent: Constants.userAgent + \"-SumerianScene\",\n                        };\n                        fetchOptions = {\n                            headers: {\n                                // This sets the AWS user agent string\n                                // So the Sumerian service knows this request is\n                                // from Amplify\n                                'X-Amz-User-Agent': Constants.userAgent,\n                            },\n                        };\n                        url = sceneUrl;\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, Credentials.get()];\n                    case 2:\n                        credentials = _b.sent();\n                        awsSDKConfigOverride['credentials'] = credentials;\n                        accessInfo = {\n                            secret_key: credentials.secretAccessKey,\n                            access_key: credentials.accessKeyId,\n                            session_token: credentials.sessionToken,\n                        };\n                        serviceInfo = {\n                            region: sceneRegion,\n                            service: SUMERIAN_SERVICE_NAME,\n                        };\n                        request = Signer.sign({ method: 'GET', url: sceneUrl }, accessInfo, serviceInfo);\n                        fetchOptions.headers = __assign(__assign({}, fetchOptions.headers), request.headers);\n                        url = request.url;\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_1 = _b.sent();\n                        logger.debug('No credentials available, the request will be unsigned');\n                        return [3 /*break*/, 4];\n                    case 4: return [4 /*yield*/, fetch(url, fetchOptions)];\n                    case 5:\n                        apiResponse = _b.sent();\n                        return [4 /*yield*/, apiResponse.json()];\n                    case 6:\n                        apiResponseJson = _b.sent();\n                        if (apiResponse.status === 403) {\n                            if (apiResponseJson.message) {\n                                logger.error(\"Failure to authenticate user: \" + apiResponseJson.message);\n                                throw new XRSceneLoadFailure(\"Failure to authenticate user: \" + apiResponseJson.message);\n                            }\n                            else {\n                                logger.error(\"Failure to authenticate user\");\n                                throw new XRSceneLoadFailure(\"Failure to authenticate user\");\n                            }\n                        }\n                        sceneBundleData = apiResponseJson.bundleData[sceneId];\n                        return [4 /*yield*/, fetch(sceneBundleData.url, {\n                                headers: sceneBundleData.headers,\n                            })];\n                    case 7:\n                        sceneBundle = _b.sent();\n                        return [4 /*yield*/, sceneBundle.json()];\n                    case 8:\n                        sceneBundleJson = _b.sent();\n                        _b.label = 9;\n                    case 9:\n                        _b.trys.push([9, 11, , 12]);\n                        // Load the Sumerian bootstrapper script into the DOM\n                        return [4 /*yield*/, this.loadScript(sceneBundleJson[sceneId].bootstrapperUrl)];\n                    case 10:\n                        // Load the Sumerian bootstrapper script into the DOM\n                        _b.sent();\n                        return [3 /*break*/, 12];\n                    case 11:\n                        error_1 = _b.sent();\n                        logger.error(error_1);\n                        throw new XRSceneLoadFailure(error_1);\n                    case 12:\n                        progressCallback = sceneOptions.progressCallback\n                            ? sceneOptions.progressCallback\n                            : undefined;\n                        publishParamOverrides = scene.publishParamOverrides\n                            ? scene.publishParamOverrides\n                            : undefined;\n                        sceneLoadParams = {\n                            element: element,\n                            sceneId: sceneId,\n                            sceneBundle: sceneBundleJson,\n                            apiResponse: apiResponseJson,\n                            progressCallback: progressCallback,\n                            publishParamOverrides: publishParamOverrides,\n                            awsSDKConfigOverride: awsSDKConfigOverride,\n                        };\n                        return [4 /*yield*/, window.SumerianBootstrapper.loadScene(sceneLoadParams)];\n                    case 13:\n                        sceneController = _b.sent();\n                        scene.sceneController = sceneController;\n                        scene.isLoaded = true;\n                        // Log scene warnings\n                        for (_i = 0, _a = sceneController.sceneLoadWarnings; _i < _a.length; _i++) {\n                            warning = _a[_i];\n                            logger.warn(\"loadScene warning: \" + warning);\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    SumerianProvider.prototype.isSceneLoaded = function (sceneName) {\n        var scene = this.getScene(sceneName);\n        return scene.isLoaded || false;\n    };\n    SumerianProvider.prototype.getScene = function (sceneName) {\n        if (!this.options.scenes) {\n            var errorMsg = 'No scenes were defined in the configuration';\n            logger.error(errorMsg);\n            throw new XRNoSceneConfiguredError(errorMsg);\n        }\n        if (!sceneName) {\n            var errorMsg = 'No scene name was passed';\n            logger.error(errorMsg);\n            throw new XRSceneNotFoundError(errorMsg);\n        }\n        if (!this.options.scenes[sceneName]) {\n            var errorMsg = \"Scene '\" + sceneName + \"' is not configured\";\n            logger.error(errorMsg);\n            throw new XRSceneNotFoundError(errorMsg);\n        }\n        return this.options.scenes[sceneName];\n    };\n    SumerianProvider.prototype.getSceneController = function (sceneName) {\n        if (!this.options.scenes) {\n            var errorMsg = 'No scenes were defined in the configuration';\n            logger.error(errorMsg);\n            throw new XRNoSceneConfiguredError(errorMsg);\n        }\n        var scene = this.options.scenes[sceneName];\n        if (!scene) {\n            var errorMsg = \"Scene '\" + sceneName + \"' is not configured\";\n            logger.error(errorMsg);\n            throw new XRSceneNotFoundError(errorMsg);\n        }\n        var sceneController = scene.sceneController;\n        if (!sceneController) {\n            var errorMsg = \"Scene controller for '\" + sceneName + \"' has not been loaded\";\n            logger.error(errorMsg);\n            throw new XRSceneNotLoadedError(errorMsg);\n        }\n        return sceneController;\n    };\n    SumerianProvider.prototype.isVRCapable = function (sceneName) {\n        var sceneController = this.getSceneController(sceneName);\n        return sceneController.vrCapable;\n    };\n    SumerianProvider.prototype.isVRPresentationActive = function (sceneName) {\n        var sceneController = this.getSceneController(sceneName);\n        return sceneController.vrPresentationActive;\n    };\n    SumerianProvider.prototype.start = function (sceneName) {\n        var sceneController = this.getSceneController(sceneName);\n        sceneController.start();\n    };\n    SumerianProvider.prototype.enterVR = function (sceneName) {\n        var sceneController = this.getSceneController(sceneName);\n        sceneController.enterVR();\n    };\n    SumerianProvider.prototype.exitVR = function (sceneName) {\n        var sceneController = this.getSceneController(sceneName);\n        sceneController.exitVR();\n    };\n    SumerianProvider.prototype.isMuted = function (sceneName) {\n        var sceneController = this.getSceneController(sceneName);\n        return sceneController.muted;\n    };\n    SumerianProvider.prototype.setMuted = function (sceneName, muted) {\n        var sceneController = this.getSceneController(sceneName);\n        sceneController.muted = muted;\n    };\n    SumerianProvider.prototype.onSceneEvent = function (sceneName, eventName, eventHandler) {\n        var sceneController = this.getSceneController(sceneName);\n        sceneController.on(eventName, eventHandler);\n    };\n    SumerianProvider.prototype.enableAudio = function (sceneName) {\n        var sceneController = this.getSceneController(sceneName);\n        sceneController.enableAudio();\n    };\n    return SumerianProvider;\n}(AbstractXRProvider));\nexport { SumerianProvider };\n//# sourceMappingURL=SumerianProvider.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('AbstractXRProvider');\nvar AbstractXRProvider = /** @class */ (function () {\n    function AbstractXRProvider(options) {\n        if (options === void 0) { options = {}; }\n        this._config = options;\n    }\n    AbstractXRProvider.prototype.configure = function (config) {\n        if (config === void 0) { config = {}; }\n        this._config = __assign(__assign({}, config), this._config);\n        logger.debug(\"configure \" + this.getProviderName(), this._config);\n        return this.options;\n    };\n    AbstractXRProvider.prototype.getCategory = function () {\n        return 'XR';\n    };\n    Object.defineProperty(AbstractXRProvider.prototype, \"options\", {\n        get: function () {\n            return __assign({}, this._config);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return AbstractXRProvider;\n}());\nexport { AbstractXRProvider };\n//# sourceMappingURL=XRProvider.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n/*\n * Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { SumerianProvider } from './Providers/SumerianProvider';\nimport { XRProviderNotConfigured } from './Errors';\nvar logger = new Logger('XR');\nvar DEFAULT_PROVIDER_NAME = 'SumerianProvider';\nvar XR = /** @class */ (function () {\n    /**\n     * Initialize XR with AWS configurations\n     *\n     * @param {XROptions} options - Configuration object for XR\n     */\n    function XR(options) {\n        this._options = options;\n        logger.debug('XR Options', this._options);\n        this._defaultProvider = DEFAULT_PROVIDER_NAME;\n        this._pluggables = {};\n        // Add default provider\n        this.addPluggable(new SumerianProvider());\n    }\n    /**\n     * Configure XR part with configurations\n     *\n     * @param {XROptions} config - Configuration for XR\n     * @return {Object} - The current configuration\n     */\n    XR.prototype.configure = function (options) {\n        var _this = this;\n        var opt = options ? options.XR || options : {};\n        logger.debug('configure XR', { opt: opt });\n        this._options = Object.assign({}, this._options, opt);\n        Object.entries(this._pluggables).map(function (_a) {\n            var name = _a[0], provider = _a[1];\n            if (name === _this._defaultProvider && !opt[_this._defaultProvider]) {\n                provider.configure(_this._options);\n            }\n            else {\n                provider.configure(_this._options[name]);\n            }\n        });\n        return this._options;\n    };\n    /**\n     * add plugin into XR category\n     * @param {Object} pluggable - an instance of the plugin\n     */\n    XR.prototype.addPluggable = function (pluggable) {\n        return __awaiter(this, void 0, void 0, function () {\n            var config;\n            return __generator(this, function (_a) {\n                if (pluggable && pluggable.getCategory() === 'XR') {\n                    this._pluggables[pluggable.getProviderName()] = pluggable;\n                    config = pluggable.configure(this._options);\n                    return [2 /*return*/, config];\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    XR.prototype.loadScene = function (sceneName, domElementId, sceneOptions, provider) {\n        if (sceneOptions === void 0) { sceneOptions = {}; }\n        if (provider === void 0) { provider = this._defaultProvider; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this._pluggables[provider])\n                            throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\n                        return [4 /*yield*/, this._pluggables[provider].loadScene(sceneName, domElementId, sceneOptions)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    XR.prototype.isSceneLoaded = function (sceneName, provider) {\n        if (provider === void 0) { provider = this._defaultProvider; }\n        if (!this._pluggables[provider])\n            throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\n        return this._pluggables[provider].isSceneLoaded(sceneName);\n    };\n    XR.prototype.getSceneController = function (sceneName, provider) {\n        if (provider === void 0) { provider = this._defaultProvider; }\n        if (!this._pluggables[provider])\n            throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\n        return this._pluggables[provider].getSceneController(sceneName);\n    };\n    XR.prototype.isVRCapable = function (sceneName, provider) {\n        if (provider === void 0) { provider = this._defaultProvider; }\n        if (!this._pluggables[provider])\n            throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\n        return this._pluggables[provider].isVRCapable(sceneName);\n    };\n    XR.prototype.isVRPresentationActive = function (sceneName, provider) {\n        if (provider === void 0) { provider = this._defaultProvider; }\n        if (!this._pluggables[provider])\n            throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\n        return this._pluggables[provider].isVRPresentationActive(sceneName);\n    };\n    XR.prototype.start = function (sceneName, provider) {\n        if (provider === void 0) { provider = this._defaultProvider; }\n        if (!this._pluggables[provider])\n            throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\n        return this._pluggables[provider].start(sceneName);\n    };\n    XR.prototype.enterVR = function (sceneName, provider) {\n        if (provider === void 0) { provider = this._defaultProvider; }\n        if (!this._pluggables[provider])\n            throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\n        return this._pluggables[provider].enterVR(sceneName);\n    };\n    XR.prototype.exitVR = function (sceneName, provider) {\n        if (provider === void 0) { provider = this._defaultProvider; }\n        if (!this._pluggables[provider])\n            throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\n        return this._pluggables[provider].exitVR(sceneName);\n    };\n    XR.prototype.isMuted = function (sceneName, provider) {\n        if (provider === void 0) { provider = this._defaultProvider; }\n        if (!this._pluggables[provider])\n            throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\n        return this._pluggables[provider].isMuted(sceneName);\n    };\n    XR.prototype.setMuted = function (sceneName, muted, provider) {\n        if (provider === void 0) { provider = this._defaultProvider; }\n        if (!this._pluggables[provider])\n            throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\n        return this._pluggables[provider].setMuted(sceneName, muted);\n    };\n    XR.prototype.onSceneEvent = function (sceneName, eventName, eventHandler, provider) {\n        if (provider === void 0) { provider = this._defaultProvider; }\n        if (!this._pluggables[provider])\n            throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\n        return this._pluggables[provider].onSceneEvent(sceneName, eventName, eventHandler);\n    };\n    XR.prototype.enableAudio = function (sceneName, provider) {\n        if (provider === void 0) { provider = this._defaultProvider; }\n        if (!this._pluggables[provider])\n            throw new XRProviderNotConfigured(\"Provider '\" + provider + \"' not configured\");\n        return this._pluggables[provider].enableAudio(sceneName);\n    };\n    return XR;\n}());\nexport default XR;\n//# sourceMappingURL=XR.js.map","/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport XRClass from './XR';\nimport Amplify, { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('XR');\nvar _instance = null;\nif (!_instance) {\n    logger.debug('Create XR Instance');\n    _instance = new XRClass(null);\n}\nvar XR = _instance;\nAmplify.register(XR);\nexport default XR;\nexport * from './Providers/SumerianProvider';\nexport { XRClass };\nexport * from './Errors';\n//# sourceMappingURL=index.js.map","module.exports = __WEBPACK_EXTERNAL_MODULE__aws_amplify_core__;"],"sourceRoot":""}