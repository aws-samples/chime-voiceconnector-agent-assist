"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_extra_1 = __importDefault(require("fs-extra"));
const pyUtils_1 = require("./pyUtils");
const glob_1 = __importDefault(require("glob"));
async function pythonBuild(params) {
    if (!params.lastBuildTimestamp || isBuildStale(params.srcRoot, params.lastBuildTimestamp)) {
        const pipenvLogs = await pyUtils_1.execAsStringPromise('pipenv install', { cwd: params.srcRoot }, undefined, true);
        console.log(pipenvLogs);
        return Promise.resolve({ rebuilt: true });
    }
    return Promise.resolve({ rebuilt: false });
}
exports.pythonBuild = pythonBuild;
function isBuildStale(resourceDir, lastBuildTimestamp) {
    const dirTime = new Date(fs_extra_1.default.statSync(resourceDir).mtime);
    if (dirTime > lastBuildTimestamp) {
        return true;
    }
    const fileUpdatedAfterLastBuild = glob_1.default
        .sync(`${resourceDir}/**`, { ignore: ['**/dist/**', '**/__pycache__/**'] })
        .find(file => new Date(fs_extra_1.default.statSync(file).mtime) > lastBuildTimestamp);
    return !!fileUpdatedAfterLastBuild;
}
//# sourceMappingURL=buildUtils.js.map