<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="28" failures="0" time="4.22">
  <testsuite name="getFieldsWithDirectives" errors="0" failures="0" skipped="0" timestamp="2019-11-01T06:39:36" time="2.618" tests="11">
    <testcase classname="getFieldsWithDirectives" name="Should detect single basic directive" time="0.005" file="tests/get-fields-with-directives.spec.ts">
    </testcase>
    <testcase classname="getFieldsWithDirectives" name="Should detect single basic directive in a type extension" time="0.001" file="tests/get-fields-with-directives.spec.ts">
    </testcase>
    <testcase classname="getFieldsWithDirectives" name="Should parse string argument correctly" time="0.001" file="tests/get-fields-with-directives.spec.ts">
    </testcase>
    <testcase classname="getFieldsWithDirectives" name="Should parse multiple arguments correctly" time="0" file="tests/get-fields-with-directives.spec.ts">
    </testcase>
    <testcase classname="getFieldsWithDirectives" name="Should parse object arg correctly" time="0.001" file="tests/get-fields-with-directives.spec.ts">
    </testcase>
    <testcase classname="getFieldsWithDirectives" name="Should parse array arg correctly" time="0" file="tests/get-fields-with-directives.spec.ts">
    </testcase>
    <testcase classname="getFieldsWithDirectives" name="Should parse complex array arg correctly" time="0.001" file="tests/get-fields-with-directives.spec.ts">
    </testcase>
    <testcase classname="getFieldsWithDirectives" name="Should detect multiple directives" time="0" file="tests/get-fields-with-directives.spec.ts">
    </testcase>
    <testcase classname="getFieldsWithDirectives" name="Should detect multiple directives and multiple fields" time="0.001" file="tests/get-fields-with-directives.spec.ts">
    </testcase>
    <testcase classname="getFieldsWithDirectives" name="Should detect multiple types" time="0.001" file="tests/get-fields-with-directives.spec.ts">
    </testcase>
    <testcase classname="getFieldsWithDirectives" name="Should include only fields with directives" time="0" file="tests/get-fields-with-directives.spec.ts">
    </testcase>
  </testsuite>
  <testsuite name="extractFieldResolversFromObjectType" errors="0" failures="0" skipped="0" timestamp="2019-11-01T06:39:36" time="2.655" tests="1">
    <testcase classname="extractFieldResolversFromObjectType" name="should extract correct resolvers from an object type" time="0.005" file="tests/extract-field-resolvers-from-object-type.spec.ts">
    </testcase>
  </testsuite>
  <testsuite name="extractResolversFromSchema" errors="0" failures="0" skipped="0" timestamp="2019-11-01T06:39:36" time="2.648" tests="2">
    <testcase classname="extractResolversFromSchema" name="should extract correct resolvers from a schema with correct type mapping" time="0.013" file="tests/extract-resolvers-from-schema.spec.ts">
    </testcase>
    <testcase classname="extractResolversFromSchema" name="should extract correct resolvers from a schema with selectedTypeDefs" time="0.006" file="tests/extract-resolvers-from-schema.spec.ts">
    </testcase>
  </testsuite>
  <testsuite name="getDirectives" errors="0" failures="0" skipped="0" timestamp="2019-11-01T06:39:36" time="2.695" tests="5">
    <testcase classname="getDirectives" name="should return the correct directives map when no directives specified" time="0.014" file="tests/get-directives.spec.ts">
    </testcase>
    <testcase classname="getDirectives" name="should return the correct directives map when built-in directive specified over FIELD_DEFINITION" time="0.003" file="tests/get-directives.spec.ts">
    </testcase>
    <testcase classname="getDirectives" name="should return the correct directives map when using custom directive without arguments" time="0.001" file="tests/get-directives.spec.ts">
    </testcase>
    <testcase classname="getDirectives" name="should return the correct directives map when using custom directive with optional argument" time="0.003" file="tests/get-directives.spec.ts">
    </testcase>
    <testcase classname="getDirectives" name="should return the correct directives map when using custom directive with optional argument an no value" time="0.01" file="tests/get-directives.spec.ts">
    </testcase>
  </testsuite>
  <testsuite name="printSchemaWithDirectives" errors="0" failures="0" skipped="0" timestamp="2019-11-01T06:39:36" time="2.711" tests="2">
    <testcase classname="printSchemaWithDirectives" name="Should print with directives, while printSchema doesnt" time="0.019" file="tests/print-schema-with-directives.spec.ts">
    </testcase>
    <testcase classname="printSchemaWithDirectives" name="Should print types correctly if they dont have astNode" time="0.013" file="tests/print-schema-with-directives.spec.ts">
    </testcase>
  </testsuite>
  <testsuite name="validateGraphQlDocuments" errors="0" failures="0" skipped="0" timestamp="2019-11-01T06:39:36" time="2.716" tests="2">
    <testcase classname="validateGraphQlDocuments" name="Should throw an informative error when validation errors happens, also check for fragments validation even why they are duplicated" time="0.027" file="tests/validate-documents.spec.ts">
    </testcase>
    <testcase classname="checkValidationErrors" name="Should throw errors source files and locations" time="0.01" file="tests/validate-documents.spec.ts">
    </testcase>
  </testsuite>
  <testsuite name="Resolvers composition" errors="0" failures="0" skipped="0" timestamp="2019-11-01T06:39:36" time="2.73" tests="5">
    <testcase classname="Resolvers composition" name="should compose regular resolvers" time="0.025" file="tests/resolvers-composition.spec.ts">
    </testcase>
    <testcase classname="Resolvers composition" name="should compose resolvers with resolve field" time="0.002" file="tests/resolvers-composition.spec.ts">
    </testcase>
    <testcase classname="Resolvers composition" name="should compose subscription resolvers" time="0.001" file="tests/resolvers-composition.spec.ts">
    </testcase>
    <testcase classname="Resolvers composition" name="should be able to take nested composition objects" time="0.002" file="tests/resolvers-composition.spec.ts">
    </testcase>
    <testcase classname="Resolvers composition" name="should be able to take nested composition objects for subscription resolvers" time="0.001" file="tests/resolvers-composition.spec.ts">
    </testcase>
  </testsuite>
</testsuites>