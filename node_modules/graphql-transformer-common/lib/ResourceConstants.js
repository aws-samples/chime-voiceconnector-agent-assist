"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResourceConstants = void 0;
let ResourceConstants = (() => {
    class ResourceConstants {
    }
    ResourceConstants.NONE = 'NONE';
    ResourceConstants.DEFAULT_PAGE_LIMIT = 100;
    ResourceConstants.DEFAULT_SYNC_QUERY_PAGE_LIMIT = 100;
    ResourceConstants.DEFAULT_SEARCHABLE_PAGE_LIMIT = 100;
    ResourceConstants.RESOURCES = {
        GraphQLAPILogicalID: 'GraphQLAPI',
        GraphQLSchemaLogicalID: 'GraphQLSchema',
        APIKeyLogicalID: 'GraphQLAPIKey',
        AuthRolePolicy: 'AuthRolePolicy',
        UnauthRolePolicy: 'UnauthRolePolicy',
        ElasticsearchAccessIAMRoleLogicalID: 'ElasticSearchAccessIAMRole',
        ElasticsearchDomainLogicalID: 'ElasticSearchDomain',
        ElasticsearchStreamingLambdaIAMRoleLogicalID: 'ElasticSearchStreamingLambdaIAMRole',
        ElasticsearchStreamingLambdaFunctionLogicalID: 'ElasticSearchStreamingLambdaFunction',
        ElasticsearchDataSourceLogicalID: 'ElasticSearchDataSource',
        NoneDataSource: 'NoneDataSource',
        AuthCognitoUserPoolLogicalID: 'AuthCognitoUserPool',
        AuthCognitoUserPoolNativeClientLogicalID: 'AuthCognitoUserPoolNativeClient',
        AuthCognitoUserPoolJSClientLogicalID: 'AuthCognitoUserPoolJSClient',
    };
    ResourceConstants.PARAMETERS = {
        Env: 'env',
        S3DeploymentBucket: 'S3DeploymentBucket',
        S3DeploymentRootKey: 'S3DeploymentRootKey',
        AppSyncApiName: 'AppSyncApiName',
        AppSyncApiId: 'AppSyncApiId',
        CreateAPIKey: 'CreateAPIKey',
        AuthRoleName: 'authRoleName',
        UnauthRoleName: 'unauthRoleName',
        APIKeyExpirationEpoch: 'APIKeyExpirationEpoch',
        DynamoDBBillingMode: 'DynamoDBBillingMode',
        DynamoDBModelTableReadIOPS: 'DynamoDBModelTableReadIOPS',
        DynamoDBModelTableWriteIOPS: 'DynamoDBModelTableWriteIOPS',
        DynamoDBEnablePointInTimeRecovery: 'DynamoDBEnablePointInTimeRecovery',
        DynamoDBEnableServerSideEncryption: 'DynamoDBEnableServerSideEncryption',
        ElasticsearchAccessIAMRoleName: 'ElasticSearchAccessIAMRoleName',
        ElasticsearchDebugStreamingLambda: 'ElasticSearchDebugStreamingLambda',
        ElasticsearchStreamingIAMRoleName: 'ElasticSearchStreamingIAMRoleName',
        ElasticsearchStreamingFunctionName: 'ElasticSearchStreamingFunctionName',
        ElasticsearchInstanceCount: 'ElasticSearchInstanceCount',
        ElasticsearchInstanceType: 'ElasticSearchInstanceType',
        ElasticsearchEBSVolumeGB: 'ElasticSearchEBSVolumeGB',
        ElasticsearchStreamingLambdaHandlerName: 'ElasticSearchStreamingLambdaHandlerName',
        ElasticsearchStreamingLambdaRuntime: 'ElasticSearchStreamingLambdaRuntime',
        AuthCognitoUserPoolId: 'AuthCognitoUserPoolId',
    };
    ResourceConstants.MAPPINGS = {};
    ResourceConstants.CONDITIONS = {
        HasEnvironmentParameter: 'HasEnvironmentParameter',
        ShouldUsePayPerRequestBilling: 'ShouldUsePayPerRequestBilling',
        ShouldUsePointInTimeRecovery: 'ShouldUsePointInTimeRecovery',
        ShouldUseServerSideEncryption: 'ShouldUseServerSideEncryption',
        ShouldCreateAPIKey: 'ShouldCreateAPIKey',
        APIKeyExpirationEpochIsPositive: 'APIKeyExpirationEpochIsPositive',
    };
    ResourceConstants.OUTPUTS = {
        GraphQLAPIEndpointOutput: 'GraphQLAPIEndpointOutput',
        GraphQLAPIApiKeyOutput: 'GraphQLAPIKeyOutput',
        GraphQLAPIIdOutput: 'GraphQLAPIIdOutput',
        ElasticsearchStreamingLambdaIAMRoleArn: 'ElasticsearchStreamingLambdaIAMRoleArn',
        ElasticsearchAccessIAMRoleArn: 'ElasticsearchAccessIAMRoleArn',
        ElasticsearchDomainArn: 'ElasticsearchDomainArn',
        ElasticsearchDomainEndpoint: 'ElasticsearchDomainEndpoint',
        AuthCognitoUserPoolIdOutput: 'AuthCognitoUserPoolIdOutput',
        AuthCognitoUserPoolNativeClientOutput: 'AuthCognitoUserPoolNativeClientId',
        AuthCognitoUserPoolJSClientOutput: 'AuthCognitoUserPoolJSClientId',
    };
    ResourceConstants.METADATA = {};
    ResourceConstants.SNIPPETS = {
        AuthCondition: 'authCondition',
        AuthMode: 'authMode',
        VersionedCondition: 'versionedCondition',
        ModelObjectKey: 'modelObjectKey',
        DynamoDBNameOverrideMap: 'dynamodbNameOverrideMap',
        ModelQueryExpression: 'modelQueryExpression',
        ModelQueryIndex: 'modelQueryIndex',
        IsDynamicGroupAuthorizedVariable: 'isDynamicGroupAuthorized',
        IsLocalDynamicGroupAuthorizedVariable: 'isLocalDynamicGroupAuthorized',
        IsStaticGroupAuthorizedVariable: 'isStaticGroupAuthorized',
        IsOwnerAuthorizedVariable: 'isOwnerAuthorized',
        IsLocalOwnerAuthorizedVariable: 'isLocalOwnerAuthorized',
    };
    return ResourceConstants;
})();
exports.ResourceConstants = ResourceConstants;
//# sourceMappingURL=ResourceConstants.js.map