{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar dataMemory = {};\n/** @class */\n\nvar MemoryStorage =\n/** @class */\nfunction () {\n  function MemoryStorage() {}\n  /**\n   * This is used to set a specific item in storage\n   * @param {string} key - the key for the item\n   * @param {object} value - the value\n   * @returns {string} value that was set\n   */\n\n\n  MemoryStorage.setItem = function (key, value) {\n    dataMemory[key] = value;\n    return dataMemory[key];\n  };\n  /**\n   * This is used to get a specific key from storage\n   * @param {string} key - the key for the item\n   * This is used to clear the storage\n   * @returns {string} the data item\n   */\n\n\n  MemoryStorage.getItem = function (key) {\n    return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\n  };\n  /**\n   * This is used to remove an item from storage\n   * @param {string} key - the key being set\n   * @returns {string} value - value that was deleted\n   */\n\n\n  MemoryStorage.removeItem = function (key) {\n    return delete dataMemory[key];\n  };\n  /**\n   * This is used to clear the storage\n   * @returns {string} nothing\n   */\n\n\n  MemoryStorage.clear = function () {\n    dataMemory = {};\n    return dataMemory;\n  };\n\n  return MemoryStorage;\n}();\n\nexport { MemoryStorage };\n\nvar StorageHelper =\n/** @class */\nfunction () {\n  /**\n   * This is used to get a storage object\n   * @returns {object} the storage\n   */\n  function StorageHelper() {\n    try {\n      this.storageWindow = window.localStorage;\n      this.storageWindow.setItem('aws.amplify.test-ls', 1);\n      this.storageWindow.removeItem('aws.amplify.test-ls');\n    } catch (exception) {\n      this.storageWindow = MemoryStorage;\n    }\n  }\n  /**\n   * This is used to return the storage\n   * @returns {object} the storage\n   */\n\n\n  StorageHelper.prototype.getStorage = function () {\n    return this.storageWindow;\n  };\n\n  return StorageHelper;\n}();\n\nexport default StorageHelper;","map":{"version":3,"sources":["../../src/StorageHelper/index.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;AAaA,IAAI,UAAU,GAAG,EAAjB;AAEA;;AACA,IAAA,aAAA;AAAA;AAAA,YAAA;AAAA,WAAA,aAAA,GAAA,CAyCC;AAxCA;;;;;;;;AAMO,EAAA,aAAA,CAAA,OAAA,GAAP,UAAe,GAAf,EAAoB,KAApB,EAAyB;AACxB,IAAA,UAAU,CAAC,GAAD,CAAV,GAAkB,KAAlB;AACA,WAAO,UAAU,CAAC,GAAD,CAAjB;AACA,GAHM;AAKP;;;;;;;;AAMO,EAAA,aAAA,CAAA,OAAA,GAAP,UAAe,GAAf,EAAkB;AACjB,WAAO,MAAM,CAAC,SAAP,CAAiB,cAAjB,CAAgC,IAAhC,CAAqC,UAArC,EAAiD,GAAjD,IACJ,UAAU,CAAC,GAAD,CADN,GAEJ,SAFH;AAGA,GAJM;AAMP;;;;;;;AAKO,EAAA,aAAA,CAAA,UAAA,GAAP,UAAkB,GAAlB,EAAqB;AACpB,WAAO,OAAO,UAAU,CAAC,GAAD,CAAxB;AACA,GAFM;AAIP;;;;;;AAIO,EAAA,aAAA,CAAA,KAAA,GAAP,YAAA;AACC,IAAA,UAAU,GAAG,EAAb;AACA,WAAO,UAAP;AACA,GAHM;;AAIR,SAAA,aAAA;AAAC,CAzCD,EAAA;;;;AA2CA,IAAA,aAAA;AAAA;AAAA,YAAA;AAEC;;;;AAIA,WAAA,aAAA,GAAA;AACC,QAAI;AACH,WAAK,aAAL,GAAqB,MAAM,CAAC,YAA5B;AACA,WAAK,aAAL,CAAmB,OAAnB,CAA2B,qBAA3B,EAAkD,CAAlD;AACA,WAAK,aAAL,CAAmB,UAAnB,CAA8B,qBAA9B;AACA,KAJD,CAIE,OAAO,SAAP,EAAkB;AACnB,WAAK,aAAL,GAAqB,aAArB;AACA;AACD;AAED;;;;;;AAIA,EAAA,aAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACC,WAAO,KAAK,aAAZ;AACA,GAFD;;AAGD,SAAA,aAAA;AAAC,CAvBD,EAAA","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar dataMemory = {};\n/** @class */\nvar MemoryStorage = /** @class */ (function () {\n    function MemoryStorage() {\n    }\n    /**\n     * This is used to set a specific item in storage\n     * @param {string} key - the key for the item\n     * @param {object} value - the value\n     * @returns {string} value that was set\n     */\n    MemoryStorage.setItem = function (key, value) {\n        dataMemory[key] = value;\n        return dataMemory[key];\n    };\n    /**\n     * This is used to get a specific key from storage\n     * @param {string} key - the key for the item\n     * This is used to clear the storage\n     * @returns {string} the data item\n     */\n    MemoryStorage.getItem = function (key) {\n        return Object.prototype.hasOwnProperty.call(dataMemory, key)\n            ? dataMemory[key]\n            : undefined;\n    };\n    /**\n     * This is used to remove an item from storage\n     * @param {string} key - the key being set\n     * @returns {string} value - value that was deleted\n     */\n    MemoryStorage.removeItem = function (key) {\n        return delete dataMemory[key];\n    };\n    /**\n     * This is used to clear the storage\n     * @returns {string} nothing\n     */\n    MemoryStorage.clear = function () {\n        dataMemory = {};\n        return dataMemory;\n    };\n    return MemoryStorage;\n}());\nexport { MemoryStorage };\nvar StorageHelper = /** @class */ (function () {\n    /**\n     * This is used to get a storage object\n     * @returns {object} the storage\n     */\n    function StorageHelper() {\n        try {\n            this.storageWindow = window.localStorage;\n            this.storageWindow.setItem('aws.amplify.test-ls', 1);\n            this.storageWindow.removeItem('aws.amplify.test-ls');\n        }\n        catch (exception) {\n            this.storageWindow = MemoryStorage;\n        }\n    }\n    /**\n     * This is used to return the storage\n     * @returns {object} the storage\n     */\n    StorageHelper.prototype.getStorage = function () {\n        return this.storageWindow;\n    };\n    return StorageHelper;\n}());\nexport default StorageHelper;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}