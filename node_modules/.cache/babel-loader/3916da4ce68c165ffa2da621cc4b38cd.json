{"ast":null,"code":"import _objectSpread from\"/home/ec2-user/chime-voiceconnector-agent-assist/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT-0\nimport AWS from'aws-sdk';import{Auth}from'aws-amplify';import awsExports from'../aws-exports';const defaultRegion=awsExports.aws_project_region;AWS.config.update({region:defaultRegion});function showKeyphrases(error,segment,index,keyphraseResponse){if(error){console.error(error);}else{if(Array.isArray(keyphraseResponse.KeyPhrases)){keyphraseResponse.KeyPhrases.forEach(keyPhrase=>{if(keyPhrase.Score>0.75){const row=document.getElementById('ttlist').tBodies[0].rows[index];if(row){row.cells[4].innerHTML=row.cells[4].innerHTML.replace(keyPhrase.Text,\"<span class=\\\"hl\\\">\".concat(keyPhrase.Text,\"</span>\"));}}});}}}function showSentiment(error,segment,index,sentimentResponse){if(error){console.error(error);}else{if(sentimentResponse.SentimentScore.Negative>0.4){segment.Sentiment=\"-  \".concat(sentimentResponse.SentimentScore.Negative.toFixed(2));segment.SentimentClass='s-minus';}else if(sentimentResponse.SentimentScore.Positive>0.65){segment.Sentiment=\"+  \".concat(sentimentResponse.SentimentScore.Positive.toFixed(2));segment.SentimentClass='s-plus';}}if(segment.SentimentClass){const daRow=document.getElementById('ttlist').tBodies[0].rows[index];if(daRow){daRow.cells[2].className=segment.SentimentClass;daRow.cells[2].innerText=segment.Sentiment;}}}export function mergeAndComprehendTranscript(segments){const mergedSegments=mergeTranscript(segments);Auth.currentCredentials().then(credentials=>{const Comprehend=new AWS.Comprehend({region:defaultRegion,credentials:Auth.essentialCredentials(credentials)});mergedSegments.forEach((segment,i)=>{if(segment.Speaker!=='spk_0'){const params={LanguageCode:'en',Text:segment.Transcript};Comprehend.detectSentiment(params,(error,sentimentResponse)=>{showSentiment(error,segment,i,sentimentResponse);});Comprehend.detectKeyPhrases(params,(error,keyphraseResponse)=>{showKeyphrases(error,segment,i,keyphraseResponse);});}});});return mergedSegments;}export function mergeTranscript(segments){segments.sort(function(a,b){if(a.TransactionId<b.TransactionId){return-1;}else if(a.TransactionId>b.TransactionId){return 1;}else{return a.LoggedOn-b.LoggedOn;}});const mergedSegments=[];segments.forEach(segment=>{if(mergedSegments.length>0&&mergedSegments[mergedSegments.length-1].Speaker===segment.Speaker){mergedSegments[mergedSegments.length-1].Transcript+=\" \".concat(segment.Transcript);}else{mergedSegments.push(_objectSpread({},segment));}});mergedSegments.forEach(e=>{if(e.Transcript){if(e.Transcript.search(/\\baccount[a-z]* \\b(num)[a-z]* \\b[a-z]*/i)!==-1){e.Action='ClientSnapshot';}if(e.Transcript.search(/\\bmiss[a-z]* \\b[a-z]*\\b \\b(connect|flight)[a-z]*/i)!==-1){e.Action='ConnectionDoctor';}}});return mergedSegments;}","map":{"version":3,"sources":["/home/ec2-user/chime-voiceconnector-agent-assist/src/utils/transcript.js"],"names":["AWS","Auth","awsExports","defaultRegion","aws_project_region","config","update","region","showKeyphrases","error","segment","index","keyphraseResponse","console","Array","isArray","KeyPhrases","forEach","keyPhrase","Score","row","document","getElementById","tBodies","rows","cells","innerHTML","replace","Text","showSentiment","sentimentResponse","SentimentScore","Negative","Sentiment","toFixed","SentimentClass","Positive","daRow","className","innerText","mergeAndComprehendTranscript","segments","mergedSegments","mergeTranscript","currentCredentials","then","credentials","Comprehend","essentialCredentials","i","Speaker","params","LanguageCode","Transcript","detectSentiment","detectKeyPhrases","sort","a","b","TransactionId","LoggedOn","length","push","e","search","Action"],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT-0\n\nimport AWS from 'aws-sdk';\nimport { Auth } from 'aws-amplify';\n\nimport awsExports from '../aws-exports';\n\nconst defaultRegion = awsExports.aws_project_region;\nAWS.config.update({ region: defaultRegion });\n\nfunction showKeyphrases(error, segment, index, keyphraseResponse) {\n  if (error) {\n    console.error(error);\n  } else {\n    if (Array.isArray(keyphraseResponse.KeyPhrases)) {\n      keyphraseResponse.KeyPhrases.forEach(keyPhrase => {\n        if (keyPhrase.Score > 0.75) {\n          const row = document.getElementById('ttlist').tBodies[0].rows[index];\n          if (row) {\n            row.cells[4].innerHTML = row.cells[4].innerHTML.replace(\n              keyPhrase.Text,\n              `<span class=\"hl\">${keyPhrase.Text}</span>`\n            );\n          }\n        }\n      });\n    }\n  }\n}\n\nfunction showSentiment(error, segment, index, sentimentResponse) {\n  if (error) {\n    console.error(error);\n  } else {\n    if (sentimentResponse.SentimentScore.Negative > 0.4) {\n      segment.Sentiment = `-  ${sentimentResponse.SentimentScore.Negative.toFixed(2)}`;\n      segment.SentimentClass = 's-minus';\n    } else if (sentimentResponse.SentimentScore.Positive > 0.65) {\n      segment.Sentiment = `+  ${sentimentResponse.SentimentScore.Positive.toFixed(2)}`;\n      segment.SentimentClass = 's-plus';\n    }\n  }\n\n  if (segment.SentimentClass) {\n    const daRow = document.getElementById('ttlist').tBodies[0].rows[index];\n    if (daRow) {\n      daRow.cells[2].className = segment.SentimentClass;\n      daRow.cells[2].innerText = segment.Sentiment;\n    }\n  }\n}\n\nexport function mergeAndComprehendTranscript(segments) {\n  const mergedSegments = mergeTranscript(segments);\n  Auth.currentCredentials().then(credentials => {\n    const Comprehend = new AWS.Comprehend({\n      region: defaultRegion,\n      credentials: Auth.essentialCredentials(credentials),\n    });\n    mergedSegments.forEach((segment, i) => {\n      if (segment.Speaker !== 'spk_0') {\n        const params = {\n          LanguageCode: 'en',\n          Text: segment.Transcript,\n        };\n        Comprehend.detectSentiment(params, (error, sentimentResponse) => {\n          showSentiment(error, segment, i, sentimentResponse);\n        });\n        Comprehend.detectKeyPhrases(params, (error, keyphraseResponse) => {\n          showKeyphrases(error, segment, i, keyphraseResponse);\n        });\n      }\n    });\n  });\n  return mergedSegments;\n}\n\nexport function mergeTranscript(segments) {\n  segments.sort(function(a, b) {\n    if (a.TransactionId < b.TransactionId) {\n      return -1;\n    } else if (a.TransactionId > b.TransactionId) {\n      return 1;\n    } else {\n      return a.LoggedOn - b.LoggedOn;\n    }\n  });\n  const mergedSegments = [];\n  segments.forEach(segment => {\n    if (\n      mergedSegments.length > 0 &&\n      mergedSegments[mergedSegments.length - 1].Speaker === segment.Speaker\n    ) {\n      mergedSegments[mergedSegments.length - 1].Transcript += ` ${segment.Transcript}`;\n    } else {\n      mergedSegments.push({ ...segment });\n    }\n  });\n  mergedSegments.forEach(e => {\n    if (e.Transcript) {\n      if (e.Transcript.search(/\\baccount[a-z]* \\b(num)[a-z]* \\b[a-z]*/i) !== -1) {\n        e.Action = 'ClientSnapshot';\n      }\n      if (e.Transcript.search(/\\bmiss[a-z]* \\b[a-z]*\\b \\b(connect|flight)[a-z]*/i) !== -1) {\n        e.Action = 'ConnectionDoctor';\n      }\n    }\n  });\n  return mergedSegments;\n}\n"]},"metadata":{},"sourceType":"module"}