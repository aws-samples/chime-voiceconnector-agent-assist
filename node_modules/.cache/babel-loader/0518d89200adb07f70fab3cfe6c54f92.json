{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n\nimport { ConsoleLogger as Logger, Hub, Credentials, Parser } from '@aws-amplify/core';\nimport * as S3 from 'aws-sdk/clients/s3';\nvar logger = new Logger('AWSS3Provider');\nvar AMPLIFY_SYMBOL = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function' ? Symbol.for('amplify_default') : '@@amplify_default';\n\nvar dispatchStorageEvent = function dispatchStorageEvent(track, event, attrs, metrics, message) {\n  if (track) {\n    Hub.dispatch('storage', {\n      event: event,\n      data: {\n        attrs: attrs,\n        metrics: metrics\n      },\n      message: message\n    }, 'Storage', AMPLIFY_SYMBOL);\n  }\n};\n\nvar localTestingStorageEndpoint = 'http://localhost:20005';\n/**\n * Provide storage methods to use AWS S3\n */\n\nvar AWSS3Provider =\n/** @class */\nfunction () {\n  /**\n   * Initialize Storage with AWS configurations\n   * @param {Object} config - Configuration object for storage\n   */\n  function AWSS3Provider(config) {\n    this._config = config ? config : {};\n    logger.debug('Storage Options', this._config);\n  }\n  /**\n   * get the category of the plugin\n   */\n\n\n  AWSS3Provider.prototype.getCategory = function () {\n    return AWSS3Provider.CATEGORY;\n  };\n  /**\n   * get provider name of the plugin\n   */\n\n\n  AWSS3Provider.prototype.getProviderName = function () {\n    return AWSS3Provider.PROVIDER_NAME;\n  };\n  /**\n   * Configure Storage part with aws configuration\n   * @param {Object} config - Configuration of the Storage\n   * @return {Object} - Current configuration\n   */\n\n\n  AWSS3Provider.prototype.configure = function (config) {\n    logger.debug('configure Storage', config);\n    if (!config) return this._config;\n    var amplifyConfig = Parser.parseMobilehubConfig(config);\n    this._config = Object.assign({}, this._config, amplifyConfig.Storage);\n\n    if (!this._config.bucket) {\n      logger.debug('Do not have bucket yet');\n    }\n\n    return this._config;\n  };\n  /**\n   * Get a presigned URL of the file or the object data when download:true\n   *\n   * @param {String} key - key of the object\n   * @param {Object} [config] - { level : private|protected|public, download: true|false }\n   * @return - A promise resolves to Amazon S3 presigned URL on success\n   */\n\n\n  AWSS3Provider.prototype.get = function (key, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, download, cacheControl, contentDisposition, contentEncoding, contentLanguage, contentType, expires, track, prefix, final_key, s3, params;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK) {\n              return [2\n              /*return*/\n              , Promise.reject('No credentials')];\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, download = opt.download, cacheControl = opt.cacheControl, contentDisposition = opt.contentDisposition, contentEncoding = opt.contentEncoding, contentLanguage = opt.contentLanguage, contentType = opt.contentType, expires = opt.expires, track = opt.track;\n            prefix = this._prefix(opt);\n            final_key = prefix + key;\n            s3 = this._createS3(opt);\n            logger.debug('get ' + key + ' from ' + final_key);\n            params = {\n              Bucket: bucket,\n              Key: final_key\n            }; // See: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#getObject-property\n\n            if (cacheControl) params.ResponseCacheControl = cacheControl;\n            if (contentDisposition) params.ResponseContentDisposition = contentDisposition;\n            if (contentEncoding) params.ResponseContentEncoding = contentEncoding;\n            if (contentLanguage) params.ResponseContentLanguage = contentLanguage;\n            if (contentType) params.ResponseContentType = contentType;\n\n            if (download === true) {\n              return [2\n              /*return*/\n              , new Promise(function (res, rej) {\n                s3.getObject(params, function (err, data) {\n                  if (err) {\n                    dispatchStorageEvent(track, 'download', {\n                      method: 'get',\n                      result: 'failed'\n                    }, null, \"Download failed with \" + err.message);\n                    rej(err);\n                  } else {\n                    dispatchStorageEvent(track, 'download', {\n                      method: 'get',\n                      result: 'success'\n                    }, {\n                      fileSize: Number(data.Body['length'])\n                    }, \"Download success for \" + key);\n                    res(data);\n                  }\n                });\n              })];\n            }\n\n            if (expires) {\n              params.Expires = expires;\n            }\n\n            return [2\n            /*return*/\n            , new Promise(function (res, rej) {\n              try {\n                var url = s3.getSignedUrl('getObject', params);\n                dispatchStorageEvent(track, 'getSignedUrl', {\n                  method: 'get',\n                  result: 'success'\n                }, null, \"Signed URL: \" + url);\n                res(url);\n              } catch (e) {\n                logger.warn('get signed url error', e);\n                dispatchStorageEvent(track, 'getSignedUrl', {\n                  method: 'get',\n                  result: 'failed'\n                }, null, \"Could not get a signed URL for \" + key);\n                rej(e);\n              }\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * Put a file in S3 bucket specified to configure method\n   * @param {String} key - key of the object\n   * @param {Object} object - File to be put in Amazon S3 bucket\n   * @param {Object} [config] - { level : private|protected|public, contentType: MIME Types,\n   *  progressCallback: function }\n   * @return - promise resolves to object on success\n   */\n\n\n  AWSS3Provider.prototype.put = function (key, object, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, track, progressCallback, contentType, contentDisposition, cacheControl, expires, metadata, tagging, serverSideEncryption, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, SSEKMSKeyId, type, prefix, final_key, s3, params, upload, data, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK) {\n              return [2\n              /*return*/\n              , Promise.reject('No credentials')];\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, track = opt.track, progressCallback = opt.progressCallback;\n            contentType = opt.contentType, contentDisposition = opt.contentDisposition, cacheControl = opt.cacheControl, expires = opt.expires, metadata = opt.metadata, tagging = opt.tagging;\n            serverSideEncryption = opt.serverSideEncryption, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, SSEKMSKeyId = opt.SSEKMSKeyId;\n            type = contentType ? contentType : 'binary/octet-stream';\n            prefix = this._prefix(opt);\n            final_key = prefix + key;\n            s3 = this._createS3(opt);\n            logger.debug('put ' + key + ' to ' + final_key);\n            params = {\n              Bucket: bucket,\n              Key: final_key,\n              Body: object,\n              ContentType: type\n            };\n\n            if (cacheControl) {\n              params.CacheControl = cacheControl;\n            }\n\n            if (contentDisposition) {\n              params.ContentDisposition = contentDisposition;\n            }\n\n            if (expires) {\n              params.Expires = expires;\n            }\n\n            if (metadata) {\n              params.Metadata = metadata;\n            }\n\n            if (tagging) {\n              params.Tagging = tagging;\n            }\n\n            if (serverSideEncryption) {\n              params.ServerSideEncryption = serverSideEncryption;\n\n              if (SSECustomerAlgorithm) {\n                params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n              }\n\n              if (SSECustomerKey) {\n                params.SSECustomerKey = SSECustomerKey;\n              }\n\n              if (SSECustomerKeyMD5) {\n                params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n              }\n\n              if (SSEKMSKeyId) {\n                params.SSEKMSKeyId = SSEKMSKeyId;\n              }\n            }\n\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n\n            upload = s3.upload(params).on('httpUploadProgress', function (progress) {\n              if (progressCallback) {\n                if (typeof progressCallback === 'function') {\n                  progressCallback(progress);\n                } else {\n                  logger.warn('progressCallback should be a function, not a ' + typeof progressCallback);\n                }\n              }\n            });\n            return [4\n            /*yield*/\n            , upload.promise()];\n\n          case 3:\n            data = _a.sent();\n            logger.debug('upload result', data);\n            dispatchStorageEvent(track, 'upload', {\n              method: 'put',\n              result: 'success'\n            }, null, \"Upload success for \" + key);\n            return [2\n            /*return*/\n            , {\n              key: data.Key.substr(prefix.length)\n            }];\n\n          case 4:\n            e_1 = _a.sent();\n            logger.warn('error uploading', e_1);\n            dispatchStorageEvent(track, 'upload', {\n              method: 'put',\n              result: 'failed'\n            }, null, \"Error uploading \" + key);\n            throw e_1;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Remove the object for specified key\n   * @param {String} key - key of the object\n   * @param {Object} [config] - { level : private|protected|public }\n   * @return - Promise resolves upon successful removal of the object\n   */\n\n\n  AWSS3Provider.prototype.remove = function (key, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, track, prefix, final_key, s3, params;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK) {\n              return [2\n              /*return*/\n              , Promise.reject('No credentials')];\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, track = opt.track;\n            prefix = this._prefix(opt);\n            final_key = prefix + key;\n            s3 = this._createS3(opt);\n            logger.debug('remove ' + key + ' from ' + final_key);\n            params = {\n              Bucket: bucket,\n              Key: final_key\n            };\n            return [2\n            /*return*/\n            , new Promise(function (res, rej) {\n              s3.deleteObject(params, function (err, data) {\n                if (err) {\n                  dispatchStorageEvent(track, 'delete', {\n                    method: 'remove',\n                    result: 'failed'\n                  }, null, \"Deletion of \" + key + \" failed with \" + err);\n                  rej(err);\n                } else {\n                  dispatchStorageEvent(track, 'delete', {\n                    method: 'remove',\n                    result: 'success'\n                  }, null, \"Deleted \" + key + \" successfully\");\n                  res(data);\n                }\n              });\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * List bucket objects relative to the level and prefix specified\n   * @param {String} path - the path that contains objects\n   * @param {Object} [config] - { level : private|protected|public }\n   * @return - Promise resolves to list of keys for all objects in path\n   */\n\n\n  AWSS3Provider.prototype.list = function (path, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, track, maxKeys, prefix, final_path, s3, params;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK) {\n              return [2\n              /*return*/\n              , Promise.reject('No credentials')];\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, track = opt.track, maxKeys = opt.maxKeys;\n            prefix = this._prefix(opt);\n            final_path = prefix + path;\n            s3 = this._createS3(opt);\n            logger.debug('list ' + path + ' from ' + final_path);\n            params = {\n              Bucket: bucket,\n              Prefix: final_path,\n              MaxKeys: maxKeys\n            };\n            return [2\n            /*return*/\n            , new Promise(function (res, rej) {\n              s3.listObjects(params, function (err, data) {\n                if (err) {\n                  logger.warn('list error', err);\n                  dispatchStorageEvent(track, 'list', {\n                    method: 'list',\n                    result: 'failed'\n                  }, null, \"Listing items failed: \" + err.message);\n                  rej(err);\n                } else {\n                  var list = data.Contents.map(function (item) {\n                    return {\n                      key: item.Key.substr(prefix.length),\n                      eTag: item.ETag,\n                      lastModified: item.LastModified,\n                      size: item.Size\n                    };\n                  });\n                  dispatchStorageEvent(track, 'list', {\n                    method: 'list',\n                    result: 'success'\n                  }, null, list.length + \" items returned from list operation\");\n                  logger.debug('list', list);\n                  res(list);\n                }\n              });\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * @private\n   */\n\n\n  AWSS3Provider.prototype._ensureCredentials = function () {\n    var _this = this;\n\n    return Credentials.get().then(function (credentials) {\n      if (!credentials) return false;\n      var cred = Credentials.shear(credentials);\n      logger.debug('set credentials for storage', cred);\n      _this._config.credentials = cred;\n      return true;\n    }).catch(function (err) {\n      logger.warn('ensure credentials error', err);\n      return false;\n    });\n  };\n  /**\n   * @private\n   */\n\n\n  AWSS3Provider.prototype._prefix = function (config) {\n    var credentials = config.credentials,\n        level = config.level;\n    var customPrefix = config.customPrefix || {};\n    var identityId = config.identityId || credentials.identityId;\n    var privatePath = (customPrefix.private !== undefined ? customPrefix.private : 'private/') + identityId + '/';\n    var protectedPath = (customPrefix.protected !== undefined ? customPrefix.protected : 'protected/') + identityId + '/';\n    var publicPath = customPrefix.public !== undefined ? customPrefix.public : 'public/';\n\n    switch (level) {\n      case 'private':\n        return privatePath;\n\n      case 'protected':\n        return protectedPath;\n\n      default:\n        return publicPath;\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  AWSS3Provider.prototype._createS3 = function (config) {\n    var bucket = config.bucket,\n        region = config.region,\n        credentials = config.credentials,\n        dangerouslyConnectToHttpEndpointForTesting = config.dangerouslyConnectToHttpEndpointForTesting;\n    var localTestingConfig = {};\n\n    if (dangerouslyConnectToHttpEndpointForTesting) {\n      localTestingConfig = {\n        endpoint: localTestingStorageEndpoint,\n        s3BucketEndpoint: true,\n        s3ForcePathStyle: true\n      };\n    }\n\n    return new S3(__assign({\n      apiVersion: '2006-03-01',\n      params: {\n        Bucket: bucket\n      },\n      signatureVersion: 'v4',\n      region: region,\n      credentials: credentials\n    }, localTestingConfig));\n  };\n\n  AWSS3Provider.CATEGORY = 'Storage';\n  AWSS3Provider.PROVIDER_NAME = 'AWSS3';\n  return AWSS3Provider;\n}();\n\nexport default AWSS3Provider;","map":{"version":3,"sources":["../../src/Providers/AWSS3Provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger, Hub, Credentials, Parser, } from '@aws-amplify/core';\nimport * as S3 from 'aws-sdk/clients/s3';\nvar logger = new Logger('AWSS3Provider');\nvar AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined' &&\n    typeof Symbol.for === 'function'\n    ? Symbol.for('amplify_default')\n    : '@@amplify_default');\nvar dispatchStorageEvent = function (track, event, attrs, metrics, message) {\n    if (track) {\n        Hub.dispatch('storage', {\n            event: event,\n            data: { attrs: attrs, metrics: metrics },\n            message: message,\n        }, 'Storage', AMPLIFY_SYMBOL);\n    }\n};\nvar localTestingStorageEndpoint = 'http://localhost:20005';\n/**\n * Provide storage methods to use AWS S3\n */\nvar AWSS3Provider = /** @class */ (function () {\n    /**\n     * Initialize Storage with AWS configurations\n     * @param {Object} config - Configuration object for storage\n     */\n    function AWSS3Provider(config) {\n        this._config = config ? config : {};\n        logger.debug('Storage Options', this._config);\n    }\n    /**\n     * get the category of the plugin\n     */\n    AWSS3Provider.prototype.getCategory = function () {\n        return AWSS3Provider.CATEGORY;\n    };\n    /**\n     * get provider name of the plugin\n     */\n    AWSS3Provider.prototype.getProviderName = function () {\n        return AWSS3Provider.PROVIDER_NAME;\n    };\n    /**\n     * Configure Storage part with aws configuration\n     * @param {Object} config - Configuration of the Storage\n     * @return {Object} - Current configuration\n     */\n    AWSS3Provider.prototype.configure = function (config) {\n        logger.debug('configure Storage', config);\n        if (!config)\n            return this._config;\n        var amplifyConfig = Parser.parseMobilehubConfig(config);\n        this._config = Object.assign({}, this._config, amplifyConfig.Storage);\n        if (!this._config.bucket) {\n            logger.debug('Do not have bucket yet');\n        }\n        return this._config;\n    };\n    /**\n     * Get a presigned URL of the file or the object data when download:true\n     *\n     * @param {String} key - key of the object\n     * @param {Object} [config] - { level : private|protected|public, download: true|false }\n     * @return - A promise resolves to Amazon S3 presigned URL on success\n     */\n    AWSS3Provider.prototype.get = function (key, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, bucket, download, cacheControl, contentDisposition, contentEncoding, contentLanguage, contentType, expires, track, prefix, final_key, s3, params;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK) {\n                            return [2 /*return*/, Promise.reject('No credentials')];\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        bucket = opt.bucket, download = opt.download, cacheControl = opt.cacheControl, contentDisposition = opt.contentDisposition, contentEncoding = opt.contentEncoding, contentLanguage = opt.contentLanguage, contentType = opt.contentType, expires = opt.expires, track = opt.track;\n                        prefix = this._prefix(opt);\n                        final_key = prefix + key;\n                        s3 = this._createS3(opt);\n                        logger.debug('get ' + key + ' from ' + final_key);\n                        params = {\n                            Bucket: bucket,\n                            Key: final_key,\n                        };\n                        // See: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#getObject-property\n                        if (cacheControl)\n                            params.ResponseCacheControl = cacheControl;\n                        if (contentDisposition)\n                            params.ResponseContentDisposition = contentDisposition;\n                        if (contentEncoding)\n                            params.ResponseContentEncoding = contentEncoding;\n                        if (contentLanguage)\n                            params.ResponseContentLanguage = contentLanguage;\n                        if (contentType)\n                            params.ResponseContentType = contentType;\n                        if (download === true) {\n                            return [2 /*return*/, new Promise(function (res, rej) {\n                                    s3.getObject(params, function (err, data) {\n                                        if (err) {\n                                            dispatchStorageEvent(track, 'download', {\n                                                method: 'get',\n                                                result: 'failed',\n                                            }, null, \"Download failed with \" + err.message);\n                                            rej(err);\n                                        }\n                                        else {\n                                            dispatchStorageEvent(track, 'download', { method: 'get', result: 'success' }, { fileSize: Number(data.Body['length']) }, \"Download success for \" + key);\n                                            res(data);\n                                        }\n                                    });\n                                })];\n                        }\n                        if (expires) {\n                            params.Expires = expires;\n                        }\n                        return [2 /*return*/, new Promise(function (res, rej) {\n                                try {\n                                    var url = s3.getSignedUrl('getObject', params);\n                                    dispatchStorageEvent(track, 'getSignedUrl', { method: 'get', result: 'success' }, null, \"Signed URL: \" + url);\n                                    res(url);\n                                }\n                                catch (e) {\n                                    logger.warn('get signed url error', e);\n                                    dispatchStorageEvent(track, 'getSignedUrl', { method: 'get', result: 'failed' }, null, \"Could not get a signed URL for \" + key);\n                                    rej(e);\n                                }\n                            })];\n                }\n            });\n        });\n    };\n    /**\n     * Put a file in S3 bucket specified to configure method\n     * @param {String} key - key of the object\n     * @param {Object} object - File to be put in Amazon S3 bucket\n     * @param {Object} [config] - { level : private|protected|public, contentType: MIME Types,\n     *  progressCallback: function }\n     * @return - promise resolves to object on success\n     */\n    AWSS3Provider.prototype.put = function (key, object, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, bucket, track, progressCallback, contentType, contentDisposition, cacheControl, expires, metadata, tagging, serverSideEncryption, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, SSEKMSKeyId, type, prefix, final_key, s3, params, upload, data, e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK) {\n                            return [2 /*return*/, Promise.reject('No credentials')];\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        bucket = opt.bucket, track = opt.track, progressCallback = opt.progressCallback;\n                        contentType = opt.contentType, contentDisposition = opt.contentDisposition, cacheControl = opt.cacheControl, expires = opt.expires, metadata = opt.metadata, tagging = opt.tagging;\n                        serverSideEncryption = opt.serverSideEncryption, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, SSEKMSKeyId = opt.SSEKMSKeyId;\n                        type = contentType ? contentType : 'binary/octet-stream';\n                        prefix = this._prefix(opt);\n                        final_key = prefix + key;\n                        s3 = this._createS3(opt);\n                        logger.debug('put ' + key + ' to ' + final_key);\n                        params = {\n                            Bucket: bucket,\n                            Key: final_key,\n                            Body: object,\n                            ContentType: type,\n                        };\n                        if (cacheControl) {\n                            params.CacheControl = cacheControl;\n                        }\n                        if (contentDisposition) {\n                            params.ContentDisposition = contentDisposition;\n                        }\n                        if (expires) {\n                            params.Expires = expires;\n                        }\n                        if (metadata) {\n                            params.Metadata = metadata;\n                        }\n                        if (tagging) {\n                            params.Tagging = tagging;\n                        }\n                        if (serverSideEncryption) {\n                            params.ServerSideEncryption = serverSideEncryption;\n                            if (SSECustomerAlgorithm) {\n                                params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n                            }\n                            if (SSECustomerKey) {\n                                params.SSECustomerKey = SSECustomerKey;\n                            }\n                            if (SSECustomerKeyMD5) {\n                                params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n                            }\n                            if (SSEKMSKeyId) {\n                                params.SSEKMSKeyId = SSEKMSKeyId;\n                            }\n                        }\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        upload = s3.upload(params).on('httpUploadProgress', function (progress) {\n                            if (progressCallback) {\n                                if (typeof progressCallback === 'function') {\n                                    progressCallback(progress);\n                                }\n                                else {\n                                    logger.warn('progressCallback should be a function, not a ' +\n                                        typeof progressCallback);\n                                }\n                            }\n                        });\n                        return [4 /*yield*/, upload.promise()];\n                    case 3:\n                        data = _a.sent();\n                        logger.debug('upload result', data);\n                        dispatchStorageEvent(track, 'upload', { method: 'put', result: 'success' }, null, \"Upload success for \" + key);\n                        return [2 /*return*/, {\n                                key: data.Key.substr(prefix.length),\n                            }];\n                    case 4:\n                        e_1 = _a.sent();\n                        logger.warn('error uploading', e_1);\n                        dispatchStorageEvent(track, 'upload', { method: 'put', result: 'failed' }, null, \"Error uploading \" + key);\n                        throw e_1;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Remove the object for specified key\n     * @param {String} key - key of the object\n     * @param {Object} [config] - { level : private|protected|public }\n     * @return - Promise resolves upon successful removal of the object\n     */\n    AWSS3Provider.prototype.remove = function (key, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, bucket, track, prefix, final_key, s3, params;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK) {\n                            return [2 /*return*/, Promise.reject('No credentials')];\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        bucket = opt.bucket, track = opt.track;\n                        prefix = this._prefix(opt);\n                        final_key = prefix + key;\n                        s3 = this._createS3(opt);\n                        logger.debug('remove ' + key + ' from ' + final_key);\n                        params = {\n                            Bucket: bucket,\n                            Key: final_key,\n                        };\n                        return [2 /*return*/, new Promise(function (res, rej) {\n                                s3.deleteObject(params, function (err, data) {\n                                    if (err) {\n                                        dispatchStorageEvent(track, 'delete', { method: 'remove', result: 'failed' }, null, \"Deletion of \" + key + \" failed with \" + err);\n                                        rej(err);\n                                    }\n                                    else {\n                                        dispatchStorageEvent(track, 'delete', { method: 'remove', result: 'success' }, null, \"Deleted \" + key + \" successfully\");\n                                        res(data);\n                                    }\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    /**\n     * List bucket objects relative to the level and prefix specified\n     * @param {String} path - the path that contains objects\n     * @param {Object} [config] - { level : private|protected|public }\n     * @return - Promise resolves to list of keys for all objects in path\n     */\n    AWSS3Provider.prototype.list = function (path, config) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentialsOK, opt, bucket, track, maxKeys, prefix, final_path, s3, params;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._ensureCredentials()];\n                    case 1:\n                        credentialsOK = _a.sent();\n                        if (!credentialsOK) {\n                            return [2 /*return*/, Promise.reject('No credentials')];\n                        }\n                        opt = Object.assign({}, this._config, config);\n                        bucket = opt.bucket, track = opt.track, maxKeys = opt.maxKeys;\n                        prefix = this._prefix(opt);\n                        final_path = prefix + path;\n                        s3 = this._createS3(opt);\n                        logger.debug('list ' + path + ' from ' + final_path);\n                        params = {\n                            Bucket: bucket,\n                            Prefix: final_path,\n                            MaxKeys: maxKeys,\n                        };\n                        return [2 /*return*/, new Promise(function (res, rej) {\n                                s3.listObjects(params, function (err, data) {\n                                    if (err) {\n                                        logger.warn('list error', err);\n                                        dispatchStorageEvent(track, 'list', { method: 'list', result: 'failed' }, null, \"Listing items failed: \" + err.message);\n                                        rej(err);\n                                    }\n                                    else {\n                                        var list = data.Contents.map(function (item) {\n                                            return {\n                                                key: item.Key.substr(prefix.length),\n                                                eTag: item.ETag,\n                                                lastModified: item.LastModified,\n                                                size: item.Size,\n                                            };\n                                        });\n                                        dispatchStorageEvent(track, 'list', { method: 'list', result: 'success' }, null, list.length + \" items returned from list operation\");\n                                        logger.debug('list', list);\n                                        res(list);\n                                    }\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    /**\n     * @private\n     */\n    AWSS3Provider.prototype._ensureCredentials = function () {\n        var _this = this;\n        return Credentials.get()\n            .then(function (credentials) {\n            if (!credentials)\n                return false;\n            var cred = Credentials.shear(credentials);\n            logger.debug('set credentials for storage', cred);\n            _this._config.credentials = cred;\n            return true;\n        })\n            .catch(function (err) {\n            logger.warn('ensure credentials error', err);\n            return false;\n        });\n    };\n    /**\n     * @private\n     */\n    AWSS3Provider.prototype._prefix = function (config) {\n        var credentials = config.credentials, level = config.level;\n        var customPrefix = config.customPrefix || {};\n        var identityId = config.identityId || credentials.identityId;\n        var privatePath = (customPrefix.private !== undefined ? customPrefix.private : 'private/') +\n            identityId +\n            '/';\n        var protectedPath = (customPrefix.protected !== undefined\n            ? customPrefix.protected\n            : 'protected/') +\n            identityId +\n            '/';\n        var publicPath = customPrefix.public !== undefined ? customPrefix.public : 'public/';\n        switch (level) {\n            case 'private':\n                return privatePath;\n            case 'protected':\n                return protectedPath;\n            default:\n                return publicPath;\n        }\n    };\n    /**\n     * @private\n     */\n    AWSS3Provider.prototype._createS3 = function (config) {\n        var bucket = config.bucket, region = config.region, credentials = config.credentials, dangerouslyConnectToHttpEndpointForTesting = config.dangerouslyConnectToHttpEndpointForTesting;\n        var localTestingConfig = {};\n        if (dangerouslyConnectToHttpEndpointForTesting) {\n            localTestingConfig = {\n                endpoint: localTestingStorageEndpoint,\n                s3BucketEndpoint: true,\n                s3ForcePathStyle: true,\n            };\n        }\n        return new S3(__assign({ apiVersion: '2006-03-01', params: { Bucket: bucket }, signatureVersion: 'v4', region: region,\n            credentials: credentials }, localTestingConfig));\n    };\n    AWSS3Provider.CATEGORY = 'Storage';\n    AWSS3Provider.PROVIDER_NAME = 'AWSS3';\n    return AWSS3Provider;\n}());\nexport default AWSS3Provider;\n//# sourceMappingURL=AWSS3Provider.js.map"]},"metadata":{},"sourceType":"module"}