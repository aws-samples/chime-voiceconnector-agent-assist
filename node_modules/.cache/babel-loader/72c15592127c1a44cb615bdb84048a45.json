{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport { Component } from 'react';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport Storage from '@aws-amplify/storage';\nimport AmplifyTheme from '../AmplifyTheme';\nimport TextPicker from '../Widget/TextPicker';\nimport { calcKey } from './Common';\nvar logger = new Logger('Storage.S3Text');\n\nvar S3Text =\n/** @class */\nfunction (_super) {\n  __extends(S3Text, _super);\n\n  function S3Text(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._isMounted = false;\n    _this.handleOnLoad = _this.handleOnLoad.bind(_this);\n    _this.handleOnError = _this.handleOnError.bind(_this);\n    _this.handlePick = _this.handlePick.bind(_this);\n    _this.handleClick = _this.handleClick.bind(_this);\n    var text = props.text,\n        textKey = props.textKey;\n    _this.state = {\n      text: text || '',\n      textKey: textKey || ''\n    };\n    return _this;\n  }\n\n  S3Text.prototype.getText = function (key, level, track, identityId) {\n    var _this = this;\n\n    if (!Storage || typeof Storage.get !== 'function') {\n      throw new Error('No Storage module found, please ensure @aws-amplify/storage is imported');\n    }\n\n    Storage.get(key, {\n      download: true,\n      level: level ? level : 'public',\n      track: track,\n      identityId: identityId\n    }).then(function (data) {\n      logger.debug(data); // @ts-ignore\n\n      var text = data.Body.toString('utf8');\n\n      if (_this._isMounted) {\n        _this.setState({\n          text: text\n        });\n      }\n\n      _this.handleOnLoad(text);\n    }).catch(function (err) {\n      logger.debug(err);\n\n      _this.handleOnError(err);\n    });\n  };\n\n  S3Text.prototype.load = function () {\n    var _a = this.props,\n        path = _a.path,\n        textKey = _a.textKey,\n        body = _a.body,\n        contentType = _a.contentType,\n        level = _a.level,\n        track = _a.track,\n        identityId = _a.identityId;\n\n    if (!textKey && !path) {\n      logger.debug('empty textKey and path');\n      return;\n    }\n\n    var that = this;\n    var key = textKey || path;\n    logger.debug('loading ' + key + '...');\n\n    if (body) {\n      var type = contentType || 'text/*';\n\n      if (!Storage || typeof Storage.put !== 'function') {\n        throw new Error('No Storage module found, please ensure @aws-amplify/storage is imported');\n      }\n\n      var ret = Storage.put(key, body, {\n        contentType: type,\n        level: level ? level : 'public',\n        track: track\n      });\n      ret.then(function (data) {\n        logger.debug(data);\n        that.getText(key, level, track, identityId);\n      }).catch(function (err) {\n        return logger.debug(err);\n      });\n    } else {\n      that.getText(key, level, track, identityId);\n    }\n  };\n\n  S3Text.prototype.handleOnLoad = function (text) {\n    var onLoad = this.props.onLoad;\n\n    if (onLoad) {\n      onLoad(text);\n    }\n  };\n\n  S3Text.prototype.handleOnError = function (err) {\n    var onError = this.props.onError;\n\n    if (onError) {\n      onError(err);\n    }\n  };\n\n  S3Text.prototype.handlePick = function (data) {\n    var that = this;\n    var path = this.props.path || '';\n    var _a = this.props,\n        textKey = _a.textKey,\n        level = _a.level,\n        fileToKey = _a.fileToKey,\n        track = _a.track,\n        identityId = _a.identityId;\n    var file = data.file,\n        name = data.name,\n        size = data.size,\n        type = data.type;\n    var key = textKey || path + calcKey(data, fileToKey);\n\n    if (!Storage || typeof Storage.put !== 'function') {\n      throw new Error('No Storage module found, please ensure @aws-amplify/storage is imported');\n    }\n\n    Storage.put(key, file, {\n      level: level ? level : 'public',\n      contentType: type,\n      track: track\n    }).then(function (data) {\n      logger.debug('handle pick data', data);\n      that.getText(key, level, track, identityId);\n    }).catch(function (err) {\n      return logger.debug('handle pick error', err);\n    });\n  };\n\n  S3Text.prototype.handleClick = function (evt) {\n    var onClick = this.props.onClick;\n\n    if (onClick) {\n      onClick(evt);\n    }\n  };\n\n  S3Text.prototype.componentDidMount = function () {\n    this._isMounted = true;\n    this.load();\n  };\n\n  S3Text.prototype.componentWillUnmount = function () {\n    this._isMounted = false;\n  };\n\n  S3Text.prototype.componentDidUpdate = function (prevProps) {\n    var update = prevProps.path !== this.props.path || prevProps.textKey !== this.props.textKey || prevProps.body !== this.props.body;\n\n    if (update) {\n      this.load();\n    }\n  };\n\n  S3Text.prototype.textEl = function (text, theme) {\n    if (!text) {\n      return null;\n    }\n\n    var selected = this.props.selected;\n    var containerStyle = {\n      position: 'relative'\n    };\n    return React.createElement(\"div\", {\n      style: containerStyle,\n      onClick: this.handleClick\n    }, React.createElement(\"pre\", {\n      style: theme.pre\n    }, text), React.createElement(\"div\", {\n      style: selected ? theme.overlaySelected : theme.overlay\n    }));\n  };\n\n  S3Text.prototype.render = function () {\n    var _a = this.props,\n        hidden = _a.hidden,\n        style = _a.style,\n        picker = _a.picker,\n        translate = _a.translate,\n        textKey = _a.textKey;\n    var text = this.state.text;\n\n    if (translate) {\n      text = typeof translate === 'string' ? translate : translate({\n        type: 'text',\n        key: textKey,\n        content: text\n      });\n    }\n\n    if (!text && !picker) {\n      return null;\n    }\n\n    var theme = this.props.theme || AmplifyTheme;\n    var textStyle = hidden ? AmplifyTheme.hidden : Object.assign({}, theme.text, style);\n    return React.createElement(\"div\", {\n      style: textStyle\n    }, textStyle ? this.textEl(text, theme) : null, picker ? React.createElement(\"div\", null, React.createElement(TextPicker, {\n      key: \"picker\",\n      onPick: this.handlePick,\n      theme: theme\n    })) : null);\n  };\n\n  return S3Text;\n}(Component);\n\nexport default S3Text;","map":{"version":3,"sources":["../../src/Storage/S3Text.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as React from 'react';\nimport { Component } from 'react';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport Storage from '@aws-amplify/storage';\nimport AmplifyTheme from '../AmplifyTheme';\nimport TextPicker from '../Widget/TextPicker';\nimport { calcKey } from './Common';\nvar logger = new Logger('Storage.S3Text');\nvar S3Text = /** @class */ (function (_super) {\n    __extends(S3Text, _super);\n    function S3Text(props) {\n        var _this = _super.call(this, props) || this;\n        _this._isMounted = false;\n        _this.handleOnLoad = _this.handleOnLoad.bind(_this);\n        _this.handleOnError = _this.handleOnError.bind(_this);\n        _this.handlePick = _this.handlePick.bind(_this);\n        _this.handleClick = _this.handleClick.bind(_this);\n        var text = props.text, textKey = props.textKey;\n        _this.state = {\n            text: text || '',\n            textKey: textKey || '',\n        };\n        return _this;\n    }\n    S3Text.prototype.getText = function (key, level, track, identityId) {\n        var _this = this;\n        if (!Storage || typeof Storage.get !== 'function') {\n            throw new Error('No Storage module found, please ensure @aws-amplify/storage is imported');\n        }\n        Storage.get(key, {\n            download: true,\n            level: level ? level : 'public',\n            track: track,\n            identityId: identityId,\n        })\n            .then(function (data) {\n            logger.debug(data);\n            // @ts-ignore\n            var text = data.Body.toString('utf8');\n            if (_this._isMounted) {\n                _this.setState({ text: text });\n            }\n            _this.handleOnLoad(text);\n        })\n            .catch(function (err) {\n            logger.debug(err);\n            _this.handleOnError(err);\n        });\n    };\n    S3Text.prototype.load = function () {\n        var _a = this.props, path = _a.path, textKey = _a.textKey, body = _a.body, contentType = _a.contentType, level = _a.level, track = _a.track, identityId = _a.identityId;\n        if (!textKey && !path) {\n            logger.debug('empty textKey and path');\n            return;\n        }\n        var that = this;\n        var key = textKey || path;\n        logger.debug('loading ' + key + '...');\n        if (body) {\n            var type = contentType || 'text/*';\n            if (!Storage || typeof Storage.put !== 'function') {\n                throw new Error('No Storage module found, please ensure @aws-amplify/storage is imported');\n            }\n            var ret = Storage.put(key, body, {\n                contentType: type,\n                level: level ? level : 'public',\n                track: track,\n            });\n            ret\n                .then(function (data) {\n                logger.debug(data);\n                that.getText(key, level, track, identityId);\n            })\n                .catch(function (err) { return logger.debug(err); });\n        }\n        else {\n            that.getText(key, level, track, identityId);\n        }\n    };\n    S3Text.prototype.handleOnLoad = function (text) {\n        var onLoad = this.props.onLoad;\n        if (onLoad) {\n            onLoad(text);\n        }\n    };\n    S3Text.prototype.handleOnError = function (err) {\n        var onError = this.props.onError;\n        if (onError) {\n            onError(err);\n        }\n    };\n    S3Text.prototype.handlePick = function (data) {\n        var that = this;\n        var path = this.props.path || '';\n        var _a = this.props, textKey = _a.textKey, level = _a.level, fileToKey = _a.fileToKey, track = _a.track, identityId = _a.identityId;\n        var file = data.file, name = data.name, size = data.size, type = data.type;\n        var key = textKey || path + calcKey(data, fileToKey);\n        if (!Storage || typeof Storage.put !== 'function') {\n            throw new Error('No Storage module found, please ensure @aws-amplify/storage is imported');\n        }\n        Storage.put(key, file, {\n            level: level ? level : 'public',\n            contentType: type,\n            track: track,\n        })\n            .then(function (data) {\n            logger.debug('handle pick data', data);\n            that.getText(key, level, track, identityId);\n        })\n            .catch(function (err) { return logger.debug('handle pick error', err); });\n    };\n    S3Text.prototype.handleClick = function (evt) {\n        var onClick = this.props.onClick;\n        if (onClick) {\n            onClick(evt);\n        }\n    };\n    S3Text.prototype.componentDidMount = function () {\n        this._isMounted = true;\n        this.load();\n    };\n    S3Text.prototype.componentWillUnmount = function () {\n        this._isMounted = false;\n    };\n    S3Text.prototype.componentDidUpdate = function (prevProps) {\n        var update = prevProps.path !== this.props.path ||\n            prevProps.textKey !== this.props.textKey ||\n            prevProps.body !== this.props.body;\n        if (update) {\n            this.load();\n        }\n    };\n    S3Text.prototype.textEl = function (text, theme) {\n        if (!text) {\n            return null;\n        }\n        var selected = this.props.selected;\n        var containerStyle = { position: 'relative' };\n        return (React.createElement(\"div\", { style: containerStyle, onClick: this.handleClick },\n            React.createElement(\"pre\", { style: theme.pre }, text),\n            React.createElement(\"div\", { style: selected ? theme.overlaySelected : theme.overlay })));\n    };\n    S3Text.prototype.render = function () {\n        var _a = this.props, hidden = _a.hidden, style = _a.style, picker = _a.picker, translate = _a.translate, textKey = _a.textKey;\n        var text = this.state.text;\n        if (translate) {\n            text =\n                typeof translate === 'string'\n                    ? translate\n                    : translate({\n                        type: 'text',\n                        key: textKey,\n                        content: text,\n                    });\n        }\n        if (!text && !picker) {\n            return null;\n        }\n        var theme = this.props.theme || AmplifyTheme;\n        var textStyle = hidden\n            ? AmplifyTheme.hidden\n            : Object.assign({}, theme.text, style);\n        return (React.createElement(\"div\", { style: textStyle },\n            textStyle ? this.textEl(text, theme) : null,\n            picker ? (React.createElement(\"div\", null,\n                React.createElement(TextPicker, { key: \"picker\", onPick: this.handlePick, theme: theme }))) : null));\n    };\n    return S3Text;\n}(Component));\nexport default S3Text;\n//# sourceMappingURL=S3Text.js.map"]},"metadata":{},"sourceType":"module"}