{"ast":null,"code":"/**\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\n */\nimport matches from './matches';\nimport parents from './parents';\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean=} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {Element|undefined} The matching element or undefined.\n */\n\nexport default function closest(element, selector, shouldCheckSelf) {\n  if (shouldCheckSelf === void 0) {\n    shouldCheckSelf = false;\n  }\n\n  if (!(element && element.nodeType === 1 && selector)) return;\n  var parentElements = (shouldCheckSelf ? [element] : []).concat(parents(element));\n\n  for (var i = 0, parent_1; parent_1 = parentElements[i]; i++) {\n    if (matches(parent_1, selector)) return parent_1;\n  }\n}","map":{"version":3,"sources":["../../../src/vendor/dom-utils/closest.ts"],"names":[],"mappings":"AAAA;;;AAIA,OAAO,OAAP,MAAoB,WAApB;AACA,OAAO,OAAP,MAAoB,WAApB;AAEA;;;;;;;;;AAQA,eAAc,SAAU,OAAV,CAAkB,OAAlB,EAA2B,QAA3B,EAAqC,eAArC,EAA4D;AAAvB,MAAA,eAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,KAAA;AAAuB;;AACzE,MAAI,EAAE,OAAO,IAAI,OAAO,CAAC,QAAR,KAAqB,CAAhC,IAAqC,QAAvC,CAAJ,EAAsD;AACtD,MAAM,cAAc,GAAG,CAAC,eAAe,GAAG,CAAC,OAAD,CAAH,GAAe,EAA/B,EAAmC,MAAnC,CACtB,OAAO,CAAC,OAAD,CADe,CAAvB;;AAIA,OAAK,IAAI,CAAC,GAAG,CAAR,EAAW,QAAhB,EAAyB,QAAM,GAAG,cAAc,CAAC,CAAD,CAAhD,EAAsD,CAAC,EAAvD,EAA2D;AAC1D,QAAI,OAAO,CAAC,QAAD,EAAS,QAAT,CAAX,EAA+B,OAAO,QAAP;AAC/B;AACD","sourceRoot":"","sourcesContent":["/**\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\n */\nimport matches from './matches';\nimport parents from './parents';\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean=} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {Element|undefined} The matching element or undefined.\n */\nexport default function closest(element, selector, shouldCheckSelf) {\n    if (shouldCheckSelf === void 0) { shouldCheckSelf = false; }\n    if (!(element && element.nodeType === 1 && selector))\n        return;\n    var parentElements = (shouldCheckSelf ? [element] : []).concat(parents(element));\n    for (var i = 0, parent_1; (parent_1 = parentElements[i]); i++) {\n        if (matches(parent_1, selector))\n            return parent_1;\n    }\n}\n//# sourceMappingURL=closest.js.map"]},"metadata":{},"sourceType":"module"}