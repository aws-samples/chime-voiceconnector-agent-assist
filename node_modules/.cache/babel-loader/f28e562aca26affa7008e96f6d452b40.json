{"ast":null,"code":"/**\n * Copyright (c) 2018-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport { GraphQLError } from '../../error/GraphQLError';\nexport function schemaDefinitionNotAloneMessage() {\n  return 'Must provide only one schema definition.';\n}\nexport function canNotDefineSchemaWithinExtensionMessage() {\n  return 'Cannot define a new schema within a schema extension.';\n}\n/**\n * Lone Schema definition\n *\n * A GraphQL document is only valid if it contains only one schema definition.\n */\n\nexport function LoneSchemaDefinition(context) {\n  var oldSchema = context.getSchema();\n  var alreadyDefined = oldSchema && (oldSchema.astNode || oldSchema.getQueryType() || oldSchema.getMutationType() || oldSchema.getSubscriptionType());\n  var schemaDefinitionsCount = 0;\n  return {\n    SchemaDefinition: function SchemaDefinition(node) {\n      if (alreadyDefined) {\n        context.reportError(new GraphQLError(canNotDefineSchemaWithinExtensionMessage(), node));\n        return;\n      }\n\n      if (schemaDefinitionsCount > 0) {\n        context.reportError(new GraphQLError(schemaDefinitionNotAloneMessage(), node));\n      }\n\n      ++schemaDefinitionsCount;\n    }\n  };\n}","map":{"version":3,"sources":["/home/ec2-user/chime-voiceconnector-agent-assist/node_modules/graphql/validation/rules/LoneSchemaDefinition.mjs"],"names":["GraphQLError","schemaDefinitionNotAloneMessage","canNotDefineSchemaWithinExtensionMessage","LoneSchemaDefinition","context","oldSchema","getSchema","alreadyDefined","astNode","getQueryType","getMutationType","getSubscriptionType","schemaDefinitionsCount","SchemaDefinition","node","reportError"],"mappings":"AAAA;;;;;;;;AAQA,SAASA,YAAT,QAA6B,0BAA7B;AACA,OAAO,SAASC,+BAAT,GAA2C;AAChD,SAAO,0CAAP;AACD;AACD,OAAO,SAASC,wCAAT,GAAoD;AACzD,SAAO,uDAAP;AACD;AACD;;;;;;AAMA,OAAO,SAASC,oBAAT,CAA8BC,OAA9B,EAAuC;AAC5C,MAAIC,SAAS,GAAGD,OAAO,CAACE,SAAR,EAAhB;AACA,MAAIC,cAAc,GAAGF,SAAS,KAAKA,SAAS,CAACG,OAAV,IAAqBH,SAAS,CAACI,YAAV,EAArB,IAAiDJ,SAAS,CAACK,eAAV,EAAjD,IAAgFL,SAAS,CAACM,mBAAV,EAArF,CAA9B;AACA,MAAIC,sBAAsB,GAAG,CAA7B;AACA,SAAO;AACLC,IAAAA,gBAAgB,EAAE,SAASA,gBAAT,CAA0BC,IAA1B,EAAgC;AAChD,UAAIP,cAAJ,EAAoB;AAClBH,QAAAA,OAAO,CAACW,WAAR,CAAoB,IAAIf,YAAJ,CAAiBE,wCAAwC,EAAzD,EAA6DY,IAA7D,CAApB;AACA;AACD;;AAED,UAAIF,sBAAsB,GAAG,CAA7B,EAAgC;AAC9BR,QAAAA,OAAO,CAACW,WAAR,CAAoB,IAAIf,YAAJ,CAAiBC,+BAA+B,EAAhD,EAAoDa,IAApD,CAApB;AACD;;AAED,QAAEF,sBAAF;AACD;AAZI,GAAP;AAcD","sourcesContent":["/**\n * Copyright (c) 2018-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport { GraphQLError } from '../../error/GraphQLError';\nexport function schemaDefinitionNotAloneMessage() {\n  return 'Must provide only one schema definition.';\n}\nexport function canNotDefineSchemaWithinExtensionMessage() {\n  return 'Cannot define a new schema within a schema extension.';\n}\n/**\n * Lone Schema definition\n *\n * A GraphQL document is only valid if it contains only one schema definition.\n */\n\nexport function LoneSchemaDefinition(context) {\n  var oldSchema = context.getSchema();\n  var alreadyDefined = oldSchema && (oldSchema.astNode || oldSchema.getQueryType() || oldSchema.getMutationType() || oldSchema.getSubscriptionType());\n  var schemaDefinitionsCount = 0;\n  return {\n    SchemaDefinition: function SchemaDefinition(node) {\n      if (alreadyDefined) {\n        context.reportError(new GraphQLError(canNotDefineSchemaWithinExtensionMessage(), node));\n        return;\n      }\n\n      if (schemaDefinitionsCount > 0) {\n        context.reportError(new GraphQLError(schemaDefinitionNotAloneMessage(), node));\n      }\n\n      ++schemaDefinitionsCount;\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}