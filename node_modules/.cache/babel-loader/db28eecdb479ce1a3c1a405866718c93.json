{"ast":null,"code":"/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { ConsoleLogger as Logger, Credentials } from '@aws-amplify/core';\nimport * as Kinesis from 'aws-sdk/clients/kinesis';\nvar logger = new Logger('AWSKineisProvider'); // events buffer\n\nvar BUFFER_SIZE = 1000;\nvar FLUSH_SIZE = 100;\nvar FLUSH_INTERVAL = 5 * 1000; // 5s\n\nvar RESEND_LIMIT = 5;\n\nvar AWSKinesisProvider =\n/** @class */\nfunction () {\n  function AWSKinesisProvider(config) {\n    this._buffer = [];\n    this._config = config || {};\n    this._config.bufferSize = this._config.bufferSize || BUFFER_SIZE;\n    this._config.flushSize = this._config.flushSize || FLUSH_SIZE;\n    this._config.flushInterval = this._config.flushInterval || FLUSH_INTERVAL;\n    this._config.resendLimit = this._config.resendLimit || RESEND_LIMIT;\n\n    this._setupTimer();\n  }\n\n  AWSKinesisProvider.prototype._setupTimer = function () {\n    var _this = this;\n\n    if (this._timer) {\n      clearInterval(this._timer);\n    }\n\n    var _a = this._config,\n        flushSize = _a.flushSize,\n        flushInterval = _a.flushInterval;\n    this._timer = setInterval(function () {\n      var size = _this._buffer.length < flushSize ? _this._buffer.length : flushSize;\n      var events = [];\n\n      for (var i = 0; i < size; i += 1) {\n        var params = _this._buffer.shift();\n\n        events.push(params);\n      }\n\n      _this._sendFromBuffer(events);\n    }, flushInterval);\n  };\n  /**\n   * get the category of the plugin\n   */\n\n\n  AWSKinesisProvider.prototype.getCategory = function () {\n    return 'Analytics';\n  };\n  /**\n   * get provider name of the plugin\n   */\n\n\n  AWSKinesisProvider.prototype.getProviderName = function () {\n    return 'AWSKinesis';\n  };\n  /**\n   * configure the plugin\n   * @param {Object} config - configuration\n   */\n\n\n  AWSKinesisProvider.prototype.configure = function (config) {\n    logger.debug('configure Analytics', config);\n    var conf = config || {};\n    this._config = Object.assign({}, this._config, conf);\n\n    this._setupTimer();\n\n    return this._config;\n  };\n  /**\n   * record an event\n   * @param {Object} params - the params of an event\n   */\n\n\n  AWSKinesisProvider.prototype.record = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentials;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._getCredentials()];\n\n          case 1:\n            credentials = _a.sent();\n            if (!credentials) return [2\n            /*return*/\n            , Promise.resolve(false)];\n            Object.assign(params, {\n              config: this._config,\n              credentials: credentials\n            });\n            return [2\n            /*return*/\n            , this._putToBuffer(params)];\n        }\n      });\n    });\n  };\n\n  AWSKinesisProvider.prototype.updateEndpoint = function (params) {\n    logger.debug('updateEndpoint is not implemented in Kinesis provider');\n    return Promise.resolve(true);\n  };\n  /**\n   * @private\n   * @param params - params for the event recording\n   * Put events into buffer\n   */\n\n\n  AWSKinesisProvider.prototype._putToBuffer = function (params) {\n    if (this._buffer.length < BUFFER_SIZE) {\n      this._buffer.push(params);\n\n      return Promise.resolve(true);\n    } else {\n      logger.debug('exceed analytics events buffer size');\n      return Promise.reject(false);\n    }\n  };\n\n  AWSKinesisProvider.prototype._sendFromBuffer = function (events) {\n    var _this = this; // collapse events by credentials\n    // events = [ {params} ]\n\n\n    var eventsGroups = [];\n    var preCred = null;\n    var group = [];\n\n    for (var i = 0; i < events.length; i += 1) {\n      var cred = events[i].credentials;\n\n      if (i === 0) {\n        group.push(events[i]);\n        preCred = cred;\n      } else {\n        if (cred.sessionToken === preCred.sessionToken && cred.identityId === preCred.identityId) {\n          logger.debug('no change for cred, put event in the same group');\n          group.push(events[i]);\n        } else {\n          eventsGroups.push(group);\n          group = [];\n          group.push(events[i]);\n          preCred = cred;\n        }\n      }\n    }\n\n    eventsGroups.push(group);\n    eventsGroups.map(function (evts) {\n      _this._sendEvents(evts);\n    });\n  };\n\n  AWSKinesisProvider.prototype._sendEvents = function (group) {\n    var _this = this;\n\n    if (group.length === 0) {\n      return;\n    }\n\n    var _a = group[0],\n        config = _a.config,\n        credentials = _a.credentials;\n\n    var initClients = this._init(config, credentials);\n\n    if (!initClients) return false;\n    var records = {};\n    group.map(function (params) {\n      // spit by streamName\n      var evt = params.event;\n      var streamName = evt.streamName;\n\n      if (records[streamName] === undefined) {\n        records[streamName] = [];\n      }\n\n      var Data = JSON.stringify(evt.data);\n      var PartitionKey = evt.partitionKey || 'partition-' + credentials.identityId;\n      var record = {\n        Data: Data,\n        PartitionKey: PartitionKey\n      };\n      records[streamName].push(record);\n    });\n    Object.keys(records).map(function (streamName) {\n      logger.debug('putting records to kinesis with records', records[streamName]);\n\n      _this._kinesis.putRecords({\n        Records: records[streamName],\n        StreamName: streamName\n      }, function (err, data) {\n        if (err) logger.debug('Failed to upload records to Kinesis', err);else logger.debug('Upload records to stream', streamName);\n      });\n    });\n  };\n\n  AWSKinesisProvider.prototype._init = function (config, credentials) {\n    logger.debug('init clients');\n\n    if (this._kinesis && this._config.credentials && this._config.credentials.sessionToken === credentials.sessionToken && this._config.credentials.identityId === credentials.identityId) {\n      logger.debug('no change for analytics config, directly return from init');\n      return true;\n    }\n\n    this._config.credentials = credentials;\n    var region = config.region;\n    return this._initKinesis(region, credentials);\n  };\n\n  AWSKinesisProvider.prototype._initKinesis = function (region, credentials) {\n    logger.debug('initialize kinesis with credentials', credentials);\n    this._kinesis = new Kinesis({\n      apiVersion: '2013-12-02',\n      region: region,\n      credentials: credentials\n    });\n    return true;\n  };\n  /**\n   * @private\n   * check if current credentials exists\n   */\n\n\n  AWSKinesisProvider.prototype._getCredentials = function () {\n    var _this = this;\n\n    return Credentials.get().then(function (credentials) {\n      if (!credentials) return null;\n      logger.debug('set credentials for analytics', _this._config.credentials);\n      return Credentials.shear(credentials);\n    }).catch(function (err) {\n      logger.debug('ensure credentials error', err);\n      return null;\n    });\n  };\n\n  return AWSKinesisProvider;\n}();\n\nexport default AWSKinesisProvider;","map":{"version":3,"sources":["../../src/Providers/AWSKinesisProvider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { ConsoleLogger as Logger, Credentials } from '@aws-amplify/core';\nimport * as Kinesis from 'aws-sdk/clients/kinesis';\nvar logger = new Logger('AWSKineisProvider');\n// events buffer\nvar BUFFER_SIZE = 1000;\nvar FLUSH_SIZE = 100;\nvar FLUSH_INTERVAL = 5 * 1000; // 5s\nvar RESEND_LIMIT = 5;\nvar AWSKinesisProvider = /** @class */ (function () {\n    function AWSKinesisProvider(config) {\n        this._buffer = [];\n        this._config = config || {};\n        this._config.bufferSize = this._config.bufferSize || BUFFER_SIZE;\n        this._config.flushSize = this._config.flushSize || FLUSH_SIZE;\n        this._config.flushInterval = this._config.flushInterval || FLUSH_INTERVAL;\n        this._config.resendLimit = this._config.resendLimit || RESEND_LIMIT;\n        this._setupTimer();\n    }\n    AWSKinesisProvider.prototype._setupTimer = function () {\n        var _this = this;\n        if (this._timer) {\n            clearInterval(this._timer);\n        }\n        var _a = this._config, flushSize = _a.flushSize, flushInterval = _a.flushInterval;\n        this._timer = setInterval(function () {\n            var size = _this._buffer.length < flushSize ? _this._buffer.length : flushSize;\n            var events = [];\n            for (var i = 0; i < size; i += 1) {\n                var params = _this._buffer.shift();\n                events.push(params);\n            }\n            _this._sendFromBuffer(events);\n        }, flushInterval);\n    };\n    /**\n     * get the category of the plugin\n     */\n    AWSKinesisProvider.prototype.getCategory = function () {\n        return 'Analytics';\n    };\n    /**\n     * get provider name of the plugin\n     */\n    AWSKinesisProvider.prototype.getProviderName = function () {\n        return 'AWSKinesis';\n    };\n    /**\n     * configure the plugin\n     * @param {Object} config - configuration\n     */\n    AWSKinesisProvider.prototype.configure = function (config) {\n        logger.debug('configure Analytics', config);\n        var conf = config || {};\n        this._config = Object.assign({}, this._config, conf);\n        this._setupTimer();\n        return this._config;\n    };\n    /**\n     * record an event\n     * @param {Object} params - the params of an event\n     */\n    AWSKinesisProvider.prototype.record = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentials;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getCredentials()];\n                    case 1:\n                        credentials = _a.sent();\n                        if (!credentials)\n                            return [2 /*return*/, Promise.resolve(false)];\n                        Object.assign(params, { config: this._config, credentials: credentials });\n                        return [2 /*return*/, this._putToBuffer(params)];\n                }\n            });\n        });\n    };\n    AWSKinesisProvider.prototype.updateEndpoint = function (params) {\n        logger.debug('updateEndpoint is not implemented in Kinesis provider');\n        return Promise.resolve(true);\n    };\n    /**\n     * @private\n     * @param params - params for the event recording\n     * Put events into buffer\n     */\n    AWSKinesisProvider.prototype._putToBuffer = function (params) {\n        if (this._buffer.length < BUFFER_SIZE) {\n            this._buffer.push(params);\n            return Promise.resolve(true);\n        }\n        else {\n            logger.debug('exceed analytics events buffer size');\n            return Promise.reject(false);\n        }\n    };\n    AWSKinesisProvider.prototype._sendFromBuffer = function (events) {\n        var _this = this;\n        // collapse events by credentials\n        // events = [ {params} ]\n        var eventsGroups = [];\n        var preCred = null;\n        var group = [];\n        for (var i = 0; i < events.length; i += 1) {\n            var cred = events[i].credentials;\n            if (i === 0) {\n                group.push(events[i]);\n                preCred = cred;\n            }\n            else {\n                if (cred.sessionToken === preCred.sessionToken &&\n                    cred.identityId === preCred.identityId) {\n                    logger.debug('no change for cred, put event in the same group');\n                    group.push(events[i]);\n                }\n                else {\n                    eventsGroups.push(group);\n                    group = [];\n                    group.push(events[i]);\n                    preCred = cred;\n                }\n            }\n        }\n        eventsGroups.push(group);\n        eventsGroups.map(function (evts) {\n            _this._sendEvents(evts);\n        });\n    };\n    AWSKinesisProvider.prototype._sendEvents = function (group) {\n        var _this = this;\n        if (group.length === 0) {\n            return;\n        }\n        var _a = group[0], config = _a.config, credentials = _a.credentials;\n        var initClients = this._init(config, credentials);\n        if (!initClients)\n            return false;\n        var records = {};\n        group.map(function (params) {\n            // spit by streamName\n            var evt = params.event;\n            var streamName = evt.streamName;\n            if (records[streamName] === undefined) {\n                records[streamName] = [];\n            }\n            var Data = JSON.stringify(evt.data);\n            var PartitionKey = evt.partitionKey || 'partition-' + credentials.identityId;\n            var record = { Data: Data, PartitionKey: PartitionKey };\n            records[streamName].push(record);\n        });\n        Object.keys(records).map(function (streamName) {\n            logger.debug('putting records to kinesis with records', records[streamName]);\n            _this._kinesis.putRecords({\n                Records: records[streamName],\n                StreamName: streamName,\n            }, function (err, data) {\n                if (err)\n                    logger.debug('Failed to upload records to Kinesis', err);\n                else\n                    logger.debug('Upload records to stream', streamName);\n            });\n        });\n    };\n    AWSKinesisProvider.prototype._init = function (config, credentials) {\n        logger.debug('init clients');\n        if (this._kinesis &&\n            this._config.credentials &&\n            this._config.credentials.sessionToken === credentials.sessionToken &&\n            this._config.credentials.identityId === credentials.identityId) {\n            logger.debug('no change for analytics config, directly return from init');\n            return true;\n        }\n        this._config.credentials = credentials;\n        var region = config.region;\n        return this._initKinesis(region, credentials);\n    };\n    AWSKinesisProvider.prototype._initKinesis = function (region, credentials) {\n        logger.debug('initialize kinesis with credentials', credentials);\n        this._kinesis = new Kinesis({\n            apiVersion: '2013-12-02',\n            region: region,\n            credentials: credentials,\n        });\n        return true;\n    };\n    /**\n     * @private\n     * check if current credentials exists\n     */\n    AWSKinesisProvider.prototype._getCredentials = function () {\n        var _this = this;\n        return Credentials.get()\n            .then(function (credentials) {\n            if (!credentials)\n                return null;\n            logger.debug('set credentials for analytics', _this._config.credentials);\n            return Credentials.shear(credentials);\n        })\n            .catch(function (err) {\n            logger.debug('ensure credentials error', err);\n            return null;\n        });\n    };\n    return AWSKinesisProvider;\n}());\nexport default AWSKinesisProvider;\n//# sourceMappingURL=AWSKinesisProvider.js.map"]},"metadata":{},"sourceType":"module"}