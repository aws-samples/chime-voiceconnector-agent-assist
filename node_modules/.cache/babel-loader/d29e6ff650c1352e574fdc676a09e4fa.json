{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n\nimport { $$asyncIterator, getAsyncIterator } from 'iterall';\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\n\nexport default function mapAsyncIterator(iterable, callback, rejectCallback) {\n  var iterator = getAsyncIterator(iterable);\n  var $return;\n  var abruptClose; // $FlowFixMe(>=0.68.0)\n\n  if (typeof iterator.return === 'function') {\n    $return = iterator.return;\n\n    abruptClose = function abruptClose(error) {\n      var rethrow = function rethrow() {\n        return Promise.reject(error);\n      };\n\n      return $return.call(iterator).then(rethrow, rethrow);\n    };\n  }\n\n  function mapResult(result) {\n    return result.done ? result : asyncMapValue(result.value, callback).then(iteratorResult, abruptClose);\n  }\n\n  var mapReject;\n\n  if (rejectCallback) {\n    // Capture rejectCallback to ensure it cannot be null.\n    var reject = rejectCallback;\n\n    mapReject = function mapReject(error) {\n      return asyncMapValue(error, reject).then(iteratorResult, abruptClose);\n    };\n  }\n  /* TODO: Flow doesn't support symbols as keys:\n     https://github.com/facebook/flow/issues/3258 */\n\n\n  return _defineProperty({\n    next: function next() {\n      return iterator.next().then(mapResult, mapReject);\n    },\n    return: function _return() {\n      return $return ? $return.call(iterator).then(mapResult, mapReject) : Promise.resolve({\n        value: undefined,\n        done: true\n      });\n    },\n    throw: function _throw(error) {\n      // $FlowFixMe(>=0.68.0)\n      if (typeof iterator.throw === 'function') {\n        return iterator.throw(error).then(mapResult, mapReject);\n      }\n\n      return Promise.reject(error).catch(abruptClose);\n    }\n  }, $$asyncIterator, function () {\n    return this;\n  });\n}\n\nfunction asyncMapValue(value, callback) {\n  return new Promise(function (resolve) {\n    return resolve(callback(value));\n  });\n}\n\nfunction iteratorResult(value) {\n  return {\n    value: value,\n    done: false\n  };\n}","map":{"version":3,"sources":["/home/ec2-user/chime-voiceconnector-agent-assist/node_modules/graphql/subscription/mapAsyncIterator.mjs"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","$$asyncIterator","getAsyncIterator","mapAsyncIterator","iterable","callback","rejectCallback","iterator","$return","abruptClose","return","error","rethrow","Promise","reject","call","then","mapResult","result","done","asyncMapValue","iteratorResult","mapReject","next","_return","resolve","undefined","throw","_throw","catch"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;AAAE,MAAID,GAAG,IAAID,GAAX,EAAgB;AAAEG,IAAAA,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC;AAAEC,MAAAA,KAAK,EAAEA,KAAT;AAAgBG,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEP,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;AAAmB;;AAAC,SAAOF,GAAP;AAAa;AAEjN;;;;;;;;;;AAQA,SAASQ,eAAT,EAA0BC,gBAA1B,QAAkD,SAAlD;AAEA;;;;;AAIA,eAAe,SAASC,gBAAT,CAA0BC,QAA1B,EAAoCC,QAApC,EAA8CC,cAA9C,EAA8D;AAC3E,MAAIC,QAAQ,GAAGL,gBAAgB,CAACE,QAAD,CAA/B;AACA,MAAII,OAAJ;AACA,MAAIC,WAAJ,CAH2E,CAG1D;;AAEjB,MAAI,OAAOF,QAAQ,CAACG,MAAhB,KAA2B,UAA/B,EAA2C;AACzCF,IAAAA,OAAO,GAAGD,QAAQ,CAACG,MAAnB;;AAEAD,IAAAA,WAAW,GAAG,SAASA,WAAT,CAAqBE,KAArB,EAA4B;AACxC,UAAIC,OAAO,GAAG,SAASA,OAAT,GAAmB;AAC/B,eAAOC,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACD,OAFD;;AAIA,aAAOH,OAAO,CAACO,IAAR,CAAaR,QAAb,EAAuBS,IAAvB,CAA4BJ,OAA5B,EAAqCA,OAArC,CAAP;AACD,KAND;AAOD;;AAED,WAASK,SAAT,CAAmBC,MAAnB,EAA2B;AACzB,WAAOA,MAAM,CAACC,IAAP,GAAcD,MAAd,GAAuBE,aAAa,CAACF,MAAM,CAACvB,KAAR,EAAeU,QAAf,CAAb,CAAsCW,IAAtC,CAA2CK,cAA3C,EAA2DZ,WAA3D,CAA9B;AACD;;AAED,MAAIa,SAAJ;;AAEA,MAAIhB,cAAJ,EAAoB;AAClB;AACA,QAAIQ,MAAM,GAAGR,cAAb;;AAEAgB,IAAAA,SAAS,GAAG,SAASA,SAAT,CAAmBX,KAAnB,EAA0B;AACpC,aAAOS,aAAa,CAACT,KAAD,EAAQG,MAAR,CAAb,CAA6BE,IAA7B,CAAkCK,cAAlC,EAAkDZ,WAAlD,CAAP;AACD,KAFD;AAGD;AACD;;;;AAIA,SAAOjB,eAAe,CAAC;AACrB+B,IAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,aAAOhB,QAAQ,CAACgB,IAAT,GAAgBP,IAAhB,CAAqBC,SAArB,EAAgCK,SAAhC,CAAP;AACD,KAHoB;AAIrBZ,IAAAA,MAAM,EAAE,SAASc,OAAT,GAAmB;AACzB,aAAOhB,OAAO,GAAGA,OAAO,CAACO,IAAR,CAAaR,QAAb,EAAuBS,IAAvB,CAA4BC,SAA5B,EAAuCK,SAAvC,CAAH,GAAuDT,OAAO,CAACY,OAAR,CAAgB;AACnF9B,QAAAA,KAAK,EAAE+B,SAD4E;AAEnFP,QAAAA,IAAI,EAAE;AAF6E,OAAhB,CAArE;AAID,KAToB;AAUrBQ,IAAAA,KAAK,EAAE,SAASC,MAAT,CAAgBjB,KAAhB,EAAuB;AAC5B;AACA,UAAI,OAAOJ,QAAQ,CAACoB,KAAhB,KAA0B,UAA9B,EAA0C;AACxC,eAAOpB,QAAQ,CAACoB,KAAT,CAAehB,KAAf,EAAsBK,IAAtB,CAA2BC,SAA3B,EAAsCK,SAAtC,CAAP;AACD;;AAED,aAAOT,OAAO,CAACC,MAAR,CAAeH,KAAf,EAAsBkB,KAAtB,CAA4BpB,WAA5B,CAAP;AACD;AAjBoB,GAAD,EAkBnBR,eAlBmB,EAkBF,YAAY;AAC9B,WAAO,IAAP;AACD,GApBqB,CAAtB;AAqBD;;AAED,SAASmB,aAAT,CAAuBzB,KAAvB,EAA8BU,QAA9B,EAAwC;AACtC,SAAO,IAAIQ,OAAJ,CAAY,UAAUY,OAAV,EAAmB;AACpC,WAAOA,OAAO,CAACpB,QAAQ,CAACV,KAAD,CAAT,CAAd;AACD,GAFM,CAAP;AAGD;;AAED,SAAS0B,cAAT,CAAwB1B,KAAxB,EAA+B;AAC7B,SAAO;AACLA,IAAAA,KAAK,EAAEA,KADF;AAELwB,IAAAA,IAAI,EAAE;AAFD,GAAP;AAID","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) 2017-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport { $$asyncIterator, getAsyncIterator } from 'iterall';\n\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nexport default function mapAsyncIterator(iterable, callback, rejectCallback) {\n  var iterator = getAsyncIterator(iterable);\n  var $return;\n  var abruptClose; // $FlowFixMe(>=0.68.0)\n\n  if (typeof iterator.return === 'function') {\n    $return = iterator.return;\n\n    abruptClose = function abruptClose(error) {\n      var rethrow = function rethrow() {\n        return Promise.reject(error);\n      };\n\n      return $return.call(iterator).then(rethrow, rethrow);\n    };\n  }\n\n  function mapResult(result) {\n    return result.done ? result : asyncMapValue(result.value, callback).then(iteratorResult, abruptClose);\n  }\n\n  var mapReject;\n\n  if (rejectCallback) {\n    // Capture rejectCallback to ensure it cannot be null.\n    var reject = rejectCallback;\n\n    mapReject = function mapReject(error) {\n      return asyncMapValue(error, reject).then(iteratorResult, abruptClose);\n    };\n  }\n  /* TODO: Flow doesn't support symbols as keys:\n     https://github.com/facebook/flow/issues/3258 */\n\n\n  return _defineProperty({\n    next: function next() {\n      return iterator.next().then(mapResult, mapReject);\n    },\n    return: function _return() {\n      return $return ? $return.call(iterator).then(mapResult, mapReject) : Promise.resolve({\n        value: undefined,\n        done: true\n      });\n    },\n    throw: function _throw(error) {\n      // $FlowFixMe(>=0.68.0)\n      if (typeof iterator.throw === 'function') {\n        return iterator.throw(error).then(mapResult, mapReject);\n      }\n\n      return Promise.reject(error).catch(abruptClose);\n    }\n  }, $$asyncIterator, function () {\n    return this;\n  });\n}\n\nfunction asyncMapValue(value, callback) {\n  return new Promise(function (resolve) {\n    return resolve(callback(value));\n  });\n}\n\nfunction iteratorResult(value) {\n  return {\n    value: value,\n    done: false\n  };\n}"]},"metadata":{},"sourceType":"module"}