{"ast":null,"code":"/**\n * Takes in a buffer of event messages and splits them into individual messages.\n * @param {Buffer} buffer\n * @api private\n */\nfunction eventMessageChunker(buffer) {\n  /** @type Buffer[] */\n  var messages = [];\n  var offset = 0;\n\n  while (offset < buffer.length) {\n    var totalLength = buffer.readInt32BE(offset); // create new buffer for individual message (shares memory with original)\n\n    var message = buffer.slice(offset, totalLength + offset); // increment offset to it starts at the next message\n\n    offset += totalLength;\n    messages.push(message);\n  }\n\n  return messages;\n}\n/**\n * @api private\n */\n\n\nmodule.exports = {\n  eventMessageChunker: eventMessageChunker\n};","map":{"version":3,"sources":["/home/ec2-user/chime-voiceconnector-agent-assist/node_modules/@aws-amplify/core/node_modules/aws-sdk/lib/event-stream/event-message-chunker.js"],"names":["eventMessageChunker","buffer","messages","offset","length","totalLength","readInt32BE","message","slice","push","module","exports"],"mappings":"AAAA;;;;;AAKA,SAASA,mBAAT,CAA6BC,MAA7B,EAAqC;AACjC;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,MAAM,GAAG,CAAb;;AAEA,SAAOA,MAAM,GAAGF,MAAM,CAACG,MAAvB,EAA+B;AAC3B,QAAIC,WAAW,GAAGJ,MAAM,CAACK,WAAP,CAAmBH,MAAnB,CAAlB,CAD2B,CAG3B;;AACA,QAAII,OAAO,GAAGN,MAAM,CAACO,KAAP,CAAaL,MAAb,EAAqBE,WAAW,GAAGF,MAAnC,CAAd,CAJ2B,CAK3B;;AACAA,IAAAA,MAAM,IAAIE,WAAV;AAEAH,IAAAA,QAAQ,CAACO,IAAT,CAAcF,OAAd;AACH;;AAED,SAAOL,QAAP;AACH;AAED;;;;;AAGAQ,MAAM,CAACC,OAAP,GAAiB;AACbX,EAAAA,mBAAmB,EAAEA;AADR,CAAjB","sourcesContent":["/**\n * Takes in a buffer of event messages and splits them into individual messages.\n * @param {Buffer} buffer\n * @api private\n */\nfunction eventMessageChunker(buffer) {\n    /** @type Buffer[] */\n    var messages = [];\n    var offset = 0;\n\n    while (offset < buffer.length) {\n        var totalLength = buffer.readInt32BE(offset);\n\n        // create new buffer for individual message (shares memory with original)\n        var message = buffer.slice(offset, totalLength + offset);\n        // increment offset to it starts at the next message\n        offset += totalLength;\n\n        messages.push(message);\n    }\n\n    return messages;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n    eventMessageChunker: eventMessageChunker\n};\n"]},"metadata":{},"sourceType":"script"}