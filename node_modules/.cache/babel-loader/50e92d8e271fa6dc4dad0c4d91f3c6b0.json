{"ast":null,"code":"var util = require('../util');\n\nvar AWS = require('../core');\n/**\n * Prepend prefix defined by API model to endpoint that's already\n * constructed. This feature does not apply to operations using\n * endpoint discovery and can be disabled.\n * @api private\n */\n\n\nfunction populateHostPrefix(request) {\n  var enabled = request.service.config.hostPrefixEnabled;\n  if (!enabled) return request;\n  var operationModel = request.service.api.operations[request.operation]; //don't marshal host prefix when operation has endpoint discovery traits\n\n  if (hasEndpointDiscover(request)) return request;\n\n  if (operationModel.endpoint && operationModel.endpoint.hostPrefix) {\n    var hostPrefixNotation = operationModel.endpoint.hostPrefix;\n    var hostPrefix = expandHostPrefix(hostPrefixNotation, request.params, operationModel.input);\n    prependEndpointPrefix(request.httpRequest.endpoint, hostPrefix);\n    validateHostname(request.httpRequest.endpoint.hostname);\n  }\n\n  return request;\n}\n/**\n * @api private\n */\n\n\nfunction hasEndpointDiscover(request) {\n  var api = request.service.api;\n  var operationModel = api.operations[request.operation];\n  var isEndpointOperation = api.endpointOperation && api.endpointOperation === util.string.lowerFirst(operationModel.name);\n  return operationModel.endpointDiscoveryRequired !== 'NULL' || isEndpointOperation === true;\n}\n/**\n * @api private\n */\n\n\nfunction expandHostPrefix(hostPrefixNotation, params, shape) {\n  util.each(shape.members, function (name, member) {\n    if (member.hostLabel === true) {\n      if (typeof params[name] !== 'string' || params[name] === '') {\n        throw util.error(new Error(), {\n          message: 'Parameter ' + name + ' should be a non-empty string.',\n          code: 'InvalidParameter'\n        });\n      }\n\n      var regex = new RegExp('\\\\{' + name + '\\\\}', 'g');\n      hostPrefixNotation = hostPrefixNotation.replace(regex, params[name]);\n    }\n  });\n  return hostPrefixNotation;\n}\n/**\n * @api private\n */\n\n\nfunction prependEndpointPrefix(endpoint, prefix) {\n  if (endpoint.host) {\n    endpoint.host = prefix + endpoint.host;\n  }\n\n  if (endpoint.hostname) {\n    endpoint.hostname = prefix + endpoint.hostname;\n  }\n}\n/**\n * @api private\n */\n\n\nfunction validateHostname(hostname) {\n  var labels = hostname.split('.'); //Reference: https://tools.ietf.org/html/rfc1123#section-2\n\n  var hostPattern = /^[a-zA-Z0-9]{1}$|^[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9]$/;\n  util.arrayEach(labels, function (label) {\n    if (!label.length || label.length < 1 || label.length > 63) {\n      throw util.error(new Error(), {\n        code: 'ValidationError',\n        message: 'Hostname label length should be between 1 to 63 characters, inclusive.'\n      });\n    }\n\n    if (!hostPattern.test(label)) {\n      throw AWS.util.error(new Error(), {\n        code: 'ValidationError',\n        message: label + ' is not hostname compatible.'\n      });\n    }\n  });\n}\n\nmodule.exports = {\n  populateHostPrefix: populateHostPrefix\n};","map":{"version":3,"sources":["/home/ec2-user/chime-voiceconnector-agent-assist/node_modules/aws-sdk/lib/protocol/helpers.js"],"names":["util","require","AWS","populateHostPrefix","request","enabled","service","config","hostPrefixEnabled","operationModel","api","operations","operation","hasEndpointDiscover","endpoint","hostPrefix","hostPrefixNotation","expandHostPrefix","params","input","prependEndpointPrefix","httpRequest","validateHostname","hostname","isEndpointOperation","endpointOperation","string","lowerFirst","name","endpointDiscoveryRequired","shape","each","members","member","hostLabel","error","Error","message","code","regex","RegExp","replace","prefix","host","labels","split","hostPattern","arrayEach","label","length","test","module","exports"],"mappings":"AAAA,IAAIA,IAAI,GAAIC,OAAO,CAAC,SAAD,CAAnB;;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,SAAD,CAAjB;AAEA;;;;;;;;AAMA,SAASE,kBAAT,CAA4BC,OAA5B,EAAsC;AACpC,MAAIC,OAAO,GAAGD,OAAO,CAACE,OAAR,CAAgBC,MAAhB,CAAuBC,iBAArC;AACA,MAAI,CAACH,OAAL,EAAc,OAAOD,OAAP;AACd,MAAIK,cAAc,GAAGL,OAAO,CAACE,OAAR,CAAgBI,GAAhB,CAAoBC,UAApB,CAA+BP,OAAO,CAACQ,SAAvC,CAArB,CAHoC,CAIpC;;AACA,MAAIC,mBAAmB,CAACT,OAAD,CAAvB,EAAkC,OAAOA,OAAP;;AAClC,MAAIK,cAAc,CAACK,QAAf,IAA2BL,cAAc,CAACK,QAAf,CAAwBC,UAAvD,EAAmE;AACjE,QAAIC,kBAAkB,GAAGP,cAAc,CAACK,QAAf,CAAwBC,UAAjD;AACA,QAAIA,UAAU,GAAGE,gBAAgB,CAACD,kBAAD,EAAqBZ,OAAO,CAACc,MAA7B,EAAqCT,cAAc,CAACU,KAApD,CAAjC;AACAC,IAAAA,qBAAqB,CAAChB,OAAO,CAACiB,WAAR,CAAoBP,QAArB,EAA+BC,UAA/B,CAArB;AACAO,IAAAA,gBAAgB,CAAClB,OAAO,CAACiB,WAAR,CAAoBP,QAApB,CAA6BS,QAA9B,CAAhB;AACD;;AACD,SAAOnB,OAAP;AACD;AAED;;;;;AAGA,SAASS,mBAAT,CAA6BT,OAA7B,EAAsC;AACpC,MAAIM,GAAG,GAAGN,OAAO,CAACE,OAAR,CAAgBI,GAA1B;AACA,MAAID,cAAc,GAAGC,GAAG,CAACC,UAAJ,CAAeP,OAAO,CAACQ,SAAvB,CAArB;AACA,MAAIY,mBAAmB,GAAGd,GAAG,CAACe,iBAAJ,IAA0Bf,GAAG,CAACe,iBAAJ,KAA0BzB,IAAI,CAAC0B,MAAL,CAAYC,UAAZ,CAAuBlB,cAAc,CAACmB,IAAtC,CAA9E;AACA,SAAQnB,cAAc,CAACoB,yBAAf,KAA6C,MAA7C,IAAuDL,mBAAmB,KAAK,IAAvF;AACD;AAED;;;;;AAGA,SAASP,gBAAT,CAA0BD,kBAA1B,EAA8CE,MAA9C,EAAsDY,KAAtD,EAA6D;AAC3D9B,EAAAA,IAAI,CAAC+B,IAAL,CAAUD,KAAK,CAACE,OAAhB,EAAyB,UAASJ,IAAT,EAAeK,MAAf,EAAuB;AAC9C,QAAIA,MAAM,CAACC,SAAP,KAAqB,IAAzB,EAA+B;AAC7B,UAAI,OAAOhB,MAAM,CAACU,IAAD,CAAb,KAAwB,QAAxB,IAAoCV,MAAM,CAACU,IAAD,CAAN,KAAiB,EAAzD,EAA6D;AAC3D,cAAM5B,IAAI,CAACmC,KAAL,CAAW,IAAIC,KAAJ,EAAX,EAAwB;AAC5BC,UAAAA,OAAO,EAAE,eAAeT,IAAf,GAAsB,gCADH;AAE5BU,UAAAA,IAAI,EAAE;AAFsB,SAAxB,CAAN;AAID;;AACD,UAAIC,KAAK,GAAG,IAAIC,MAAJ,CAAW,QAAQZ,IAAR,GAAe,KAA1B,EAAiC,GAAjC,CAAZ;AACAZ,MAAAA,kBAAkB,GAAGA,kBAAkB,CAACyB,OAAnB,CAA2BF,KAA3B,EAAkCrB,MAAM,CAACU,IAAD,CAAxC,CAArB;AACD;AACF,GAXD;AAYA,SAAOZ,kBAAP;AACD;AAED;;;;;AAGA,SAASI,qBAAT,CAA+BN,QAA/B,EAAyC4B,MAAzC,EAAiD;AAC/C,MAAI5B,QAAQ,CAAC6B,IAAb,EAAmB;AACjB7B,IAAAA,QAAQ,CAAC6B,IAAT,GAAgBD,MAAM,GAAG5B,QAAQ,CAAC6B,IAAlC;AACD;;AACD,MAAI7B,QAAQ,CAACS,QAAb,EAAuB;AACrBT,IAAAA,QAAQ,CAACS,QAAT,GAAoBmB,MAAM,GAAG5B,QAAQ,CAACS,QAAtC;AACD;AACF;AAED;;;;;AAGA,SAASD,gBAAT,CAA0BC,QAA1B,EAAoC;AAClC,MAAIqB,MAAM,GAAGrB,QAAQ,CAACsB,KAAT,CAAe,GAAf,CAAb,CADkC,CAElC;;AACA,MAAIC,WAAW,GAAG,yDAAlB;AACA9C,EAAAA,IAAI,CAAC+C,SAAL,CAAeH,MAAf,EAAuB,UAASI,KAAT,EAAgB;AACrC,QAAI,CAACA,KAAK,CAACC,MAAP,IAAiBD,KAAK,CAACC,MAAN,GAAe,CAAhC,IAAqCD,KAAK,CAACC,MAAN,GAAe,EAAxD,EAA4D;AAC1D,YAAMjD,IAAI,CAACmC,KAAL,CAAW,IAAIC,KAAJ,EAAX,EAAwB;AAC5BE,QAAAA,IAAI,EAAE,iBADsB;AAE5BD,QAAAA,OAAO,EAAE;AAFmB,OAAxB,CAAN;AAID;;AACD,QAAI,CAACS,WAAW,CAACI,IAAZ,CAAiBF,KAAjB,CAAL,EAA8B;AAC5B,YAAM9C,GAAG,CAACF,IAAJ,CAASmC,KAAT,CAAe,IAAIC,KAAJ,EAAf,EACJ;AAACE,QAAAA,IAAI,EAAE,iBAAP;AAA0BD,QAAAA,OAAO,EAAEW,KAAK,GAAG;AAA3C,OADI,CAAN;AAED;AACF,GAXD;AAYD;;AAEDG,MAAM,CAACC,OAAP,GAAiB;AACfjD,EAAAA,kBAAkB,EAAEA;AADL,CAAjB","sourcesContent":["var util =  require('../util');\nvar AWS = require('../core');\n\n/**\n * Prepend prefix defined by API model to endpoint that's already\n * constructed. This feature does not apply to operations using\n * endpoint discovery and can be disabled.\n * @api private\n */\nfunction populateHostPrefix(request)  {\n  var enabled = request.service.config.hostPrefixEnabled;\n  if (!enabled) return request;\n  var operationModel = request.service.api.operations[request.operation];\n  //don't marshal host prefix when operation has endpoint discovery traits\n  if (hasEndpointDiscover(request)) return request;\n  if (operationModel.endpoint && operationModel.endpoint.hostPrefix) {\n    var hostPrefixNotation = operationModel.endpoint.hostPrefix;\n    var hostPrefix = expandHostPrefix(hostPrefixNotation, request.params, operationModel.input);\n    prependEndpointPrefix(request.httpRequest.endpoint, hostPrefix);\n    validateHostname(request.httpRequest.endpoint.hostname);\n  }\n  return request;\n}\n\n/**\n * @api private\n */\nfunction hasEndpointDiscover(request) {\n  var api = request.service.api;\n  var operationModel = api.operations[request.operation];\n  var isEndpointOperation = api.endpointOperation && (api.endpointOperation === util.string.lowerFirst(operationModel.name));\n  return (operationModel.endpointDiscoveryRequired !== 'NULL' || isEndpointOperation === true);\n}\n\n/**\n * @api private\n */\nfunction expandHostPrefix(hostPrefixNotation, params, shape) {\n  util.each(shape.members, function(name, member) {\n    if (member.hostLabel === true) {\n      if (typeof params[name] !== 'string' || params[name] === '') {\n        throw util.error(new Error(), {\n          message: 'Parameter ' + name + ' should be a non-empty string.',\n          code: 'InvalidParameter'\n        });\n      }\n      var regex = new RegExp('\\\\{' + name + '\\\\}', 'g');\n      hostPrefixNotation = hostPrefixNotation.replace(regex, params[name]);\n    }\n  });\n  return hostPrefixNotation;\n}\n\n/**\n * @api private\n */\nfunction prependEndpointPrefix(endpoint, prefix) {\n  if (endpoint.host) {\n    endpoint.host = prefix + endpoint.host;\n  }\n  if (endpoint.hostname) {\n    endpoint.hostname = prefix + endpoint.hostname;\n  }\n}\n\n/**\n * @api private\n */\nfunction validateHostname(hostname) {\n  var labels = hostname.split('.');\n  //Reference: https://tools.ietf.org/html/rfc1123#section-2\n  var hostPattern = /^[a-zA-Z0-9]{1}$|^[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9]$/;\n  util.arrayEach(labels, function(label) {\n    if (!label.length || label.length < 1 || label.length > 63) {\n      throw util.error(new Error(), {\n        code: 'ValidationError',\n        message: 'Hostname label length should be between 1 to 63 characters, inclusive.'\n      });\n    }\n    if (!hostPattern.test(label)) {\n      throw AWS.util.error(new Error(),\n        {code: 'ValidationError', message: label + ' is not hostname compatible.'});\n    }\n  });\n}\n\nmodule.exports = {\n  populateHostPrefix: populateHostPrefix\n};\n"]},"metadata":{},"sourceType":"script"}