{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nimport * as React from 'react';\nimport { Component } from 'react';\nimport { FormSection, SectionHeader, SectionBody, SectionFooter } from '../AmplifyUI';\nimport { Input, Button } from '../AmplifyTheme';\nimport { I18n } from '@aws-amplify/core';\nimport Interactions from '@aws-amplify/interactions';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('ChatBot'); // @ts-ignore\n\nvar styles = {\n  itemMe: {\n    padding: 10,\n    fontSize: 12,\n    color: 'gray',\n    marginTop: 4,\n    textAlign: 'right'\n  },\n  itemBot: {\n    fontSize: 12,\n    textAlign: 'left'\n  },\n  list: {\n    height: '300px',\n    overflow: 'auto'\n  },\n  textInput: Object.assign({}, Input, {\n    display: 'inline-block',\n    width: 'calc(100% - 90px - 15px)'\n  }),\n  // @ts-ignore\n  button: Object.assign({}, Button, {\n    width: '60px',\n    float: 'right'\n  }),\n  // @ts-ignore\n  mic: Object.assign({}, Button, {\n    width: '40px',\n    float: 'right'\n  })\n};\nvar STATES = {\n  INITIAL: {\n    MESSAGE: 'Type your message or click  ðŸŽ¤',\n    ICON: 'ðŸŽ¤'\n  },\n  LISTENING: {\n    MESSAGE: 'Listening... click ðŸ”´ again to cancel',\n    ICON: 'ðŸ”´'\n  },\n  SENDING: {\n    MESSAGE: 'Please wait...',\n    ICON: 'ðŸ”Š'\n  },\n  SPEAKING: {\n    MESSAGE: 'Speaking...',\n    ICON: '...'\n  }\n};\nvar defaultVoiceConfig = {\n  silenceDetectionConfig: {\n    time: 2000,\n    amplitude: 0.2\n  }\n};\nvar audioControl;\n\nvar ChatBot =\n/** @class */\nfunction (_super) {\n  __extends(ChatBot, _super);\n\n  function ChatBot(props) {\n    var _this = _super.call(this, props) || this;\n\n    if (_this.props.voiceEnabled) {\n      require('./aws-lex-audio'); // @ts-ignore\n\n\n      audioControl = new global.LexAudio.audioControl();\n    }\n\n    if (!_this.props.textEnabled && _this.props.voiceEnabled) {\n      STATES.INITIAL.MESSAGE = 'Click the mic button';\n      styles.textInput = Object.assign({}, Input, {\n        display: 'inline-block',\n        width: 'calc(100% - 40px - 15px)'\n      });\n    }\n\n    if (_this.props.textEnabled && !_this.props.voiceEnabled) {\n      STATES.INITIAL.MESSAGE = 'Type a message';\n      styles.textInput = Object.assign({}, Input, {\n        display: 'inline-block',\n        width: 'calc(100% - 60px - 15px)'\n      });\n    }\n\n    if (!_this.props.voiceConfig.silenceDetectionConfig) {\n      throw new Error('voiceConfig prop is missing silenceDetectionConfig');\n    }\n\n    _this.state = {\n      dialog: [{\n        message: _this.props.welcomeMessage || 'Welcome to Lex',\n        from: 'system'\n      }],\n      inputText: '',\n      currentVoiceState: STATES.INITIAL,\n      inputDisabled: false,\n      micText: STATES.INITIAL.ICON,\n      continueConversation: false,\n      micButtonDisabled: false\n    };\n    _this.micButtonHandler = _this.micButtonHandler.bind(_this);\n    _this.changeInputText = _this.changeInputText.bind(_this);\n    _this.listItems = _this.listItems.bind(_this);\n    _this.submit = _this.submit.bind(_this); // @ts-ignore\n\n    _this.listItemsRef = React.createRef();\n    _this.onSilenceHandler = _this.onSilenceHandler.bind(_this);\n    _this.doneSpeakingHandler = _this.doneSpeakingHandler.bind(_this);\n    _this.lexResponseHandler = _this.lexResponseHandler.bind(_this);\n    return _this;\n  }\n\n  ChatBot.prototype.micButtonHandler = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        if (this.state.continueConversation) {\n          this.reset();\n        } else {\n          this.setState({\n            inputDisabled: true,\n            continueConversation: true,\n            currentVoiceState: STATES.LISTENING,\n            micText: STATES.LISTENING.ICON,\n            micButtonDisabled: false\n          }, function () {\n            audioControl.startRecording(_this.onSilenceHandler, null, _this.props.voiceConfig.silenceDetectionConfig);\n          });\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n\n  ChatBot.prototype.onSilenceHandler = function () {\n    var _this = this;\n\n    audioControl.stopRecording();\n\n    if (!this.state.continueConversation) {\n      return;\n    }\n\n    audioControl.exportWAV(function (blob) {\n      _this.setState({\n        currentVoiceState: STATES.SENDING,\n        audioInput: blob,\n        micText: STATES.SENDING.ICON,\n        micButtonDisabled: true\n      }, function () {\n        _this.lexResponseHandler();\n      });\n    });\n  };\n\n  ChatBot.prototype.lexResponseHandler = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var interactionsMessage, response;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!Interactions || typeof Interactions.send !== 'function') {\n              throw new Error('No Interactions module found, please ensure @aws-amplify/interactions is imported');\n            }\n\n            if (!this.state.continueConversation) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            interactionsMessage = {\n              content: this.state.audioInput,\n              options: {\n                messageType: 'voice'\n              }\n            };\n            return [4\n            /*yield*/\n            , Interactions.send(this.props.botName, interactionsMessage)];\n\n          case 1:\n            response = _a.sent();\n            this.setState({\n              lexResponse: response,\n              currentVoiceState: STATES.SPEAKING,\n              micText: STATES.SPEAKING.ICON,\n              micButtonDisabled: true,\n              dialog: __spreadArrays(this.state.dialog, [// @ts-ignore\n              {\n                message: response.inputTranscript,\n                from: 'me'\n              }, // @ts-ignore\n              response && {\n                from: 'bot',\n                message: response.message\n              }]),\n              inputText: ''\n            }, function () {\n              _this.doneSpeakingHandler();\n            });\n            this.listItemsRef.current.scrollTop = this.listItemsRef.current.scrollHeight;\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  ChatBot.prototype.doneSpeakingHandler = function () {\n    var _this = this;\n\n    if (!this.state.continueConversation) {\n      return;\n    }\n\n    if (this.state.lexResponse.contentType === 'audio/mpeg') {\n      audioControl.play(this.state.lexResponse.audioStream, function () {\n        if (_this.state.lexResponse.dialogState === 'ReadyForFulfillment' || _this.state.lexResponse.dialogState === 'Fulfilled' || _this.state.lexResponse.dialogState === 'Failed' || !_this.props.conversationModeOn) {\n          _this.setState({\n            inputDisabled: false,\n            currentVoiceState: STATES.INITIAL,\n            micText: STATES.INITIAL.ICON,\n            micButtonDisabled: false,\n            continueConversation: false\n          });\n        } else {\n          _this.setState({\n            currentVoiceState: STATES.LISTENING,\n            micText: STATES.LISTENING.ICON,\n            micButtonDisabled: false\n          }, function () {\n            audioControl.startRecording(_this.onSilenceHandler, null, _this.props.voiceConfig.silenceDetectionConfig);\n          });\n        }\n      });\n    } else {\n      this.setState({\n        inputDisabled: false,\n        currentVoiceState: STATES.INITIAL,\n        micText: STATES.INITIAL.ICON,\n        micButtonDisabled: false,\n        continueConversation: false\n      });\n    }\n  };\n\n  ChatBot.prototype.reset = function () {\n    this.setState({\n      inputText: '',\n      currentVoiceState: STATES.INITIAL,\n      inputDisabled: false,\n      micText: STATES.INITIAL.ICON,\n      continueConversation: false,\n      micButtonDisabled: false\n    }, function () {\n      audioControl.clear();\n    });\n  };\n\n  ChatBot.prototype.listItems = function () {\n    return this.state.dialog.map(function (m, i) {\n      if (m.from === 'me') {\n        return React.createElement(\"div\", {\n          key: i,\n          style: styles.itemMe\n        }, m.message);\n      } else if (m.from === 'system') {\n        return React.createElement(\"div\", {\n          key: i,\n          style: styles.itemBot\n        }, m.message);\n      } else {\n        return React.createElement(\"div\", {\n          key: i,\n          style: styles.itemBot\n        }, m.message);\n      }\n    });\n  };\n\n  ChatBot.prototype.submit = function (e) {\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            e.preventDefault();\n\n            if (!this.state.inputText) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            return [4\n            /*yield*/\n            , new Promise(function (resolve) {\n              return _this.setState({\n                dialog: __spreadArrays(_this.state.dialog, [{\n                  message: _this.state.inputText,\n                  from: 'me'\n                }])\n              }, resolve);\n            })];\n\n          case 1:\n            _a.sent();\n\n            if (!Interactions || typeof Interactions.send !== 'function') {\n              throw new Error('No Interactions module found, please ensure @aws-amplify/interactions is imported');\n            }\n\n            return [4\n            /*yield*/\n            , Interactions.send(this.props.botName, this.state.inputText)];\n\n          case 2:\n            response = _a.sent();\n            this.setState({\n              // @ts-ignore\n              dialog: __spreadArrays(this.state.dialog, [// @ts-ignore\n              response && {\n                from: 'bot',\n                message: response.message\n              }]),\n              inputText: ''\n            });\n            this.listItemsRef.current.scrollTop = this.listItemsRef.current.scrollHeight;\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  ChatBot.prototype.changeInputText = function (event) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.setState({\n              inputText: event.target.value\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  ChatBot.prototype.getOnComplete = function (fn) {\n    var _this = this;\n\n    return function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var clearOnComplete = _this.props.clearOnComplete;\n      var message = fn.apply(void 0, args);\n\n      _this.setState({\n        dialog: __spreadArrays(clearOnComplete ? [] : _this.state.dialog, [message && {\n          from: 'bot',\n          message: message\n        }]).filter(Boolean)\n      }, function () {\n        _this.listItemsRef.current.scrollTop = _this.listItemsRef.current.scrollHeight;\n      });\n    };\n  };\n\n  ChatBot.prototype.componentDidMount = function () {\n    var _a = this.props,\n        onComplete = _a.onComplete,\n        botName = _a.botName;\n\n    if (onComplete && botName) {\n      if (!Interactions || typeof Interactions.onComplete !== 'function') {\n        throw new Error('No Interactions module found, please ensure @aws-amplify/interactions is imported');\n      } // @ts-ignore\n\n\n      Interactions.onComplete(botName, this.getOnComplete(onComplete, this));\n    }\n  };\n\n  ChatBot.prototype.componentDidUpdate = function (prevProps) {\n    var _a = this.props,\n        onComplete = _a.onComplete,\n        botName = _a.botName;\n\n    if (botName && this.props.onComplete !== prevProps.onComplete) {\n      if (!Interactions || typeof Interactions.onComplete !== 'function') {\n        throw new Error('No Interactions module found, please ensure @aws-amplify/interactions is imported');\n      } // @ts-ignore\n\n\n      Interactions.onComplete(botName, this.getOnComplete(onComplete, this));\n    }\n  };\n\n  ChatBot.prototype.render = function () {\n    var _a = this.props,\n        title = _a.title,\n        theme = _a.theme,\n        onComplete = _a.onComplete;\n    return React.createElement(FormSection, {\n      theme: theme\n    }, title && React.createElement(SectionHeader, {\n      theme: theme\n    }, I18n.get(title)), React.createElement(SectionBody, {\n      theme: theme\n    }, React.createElement(\"div\", {\n      ref: this.listItemsRef,\n      style: styles.list\n    }, this.listItems())), React.createElement(SectionFooter, {\n      theme: theme\n    }, React.createElement(ChatBotInputs, {\n      micText: this.state.micText,\n      voiceEnabled: this.props.voiceEnabled,\n      textEnabled: this.props.textEnabled,\n      styles: styles,\n      onChange: this.changeInputText,\n      inputText: this.state.inputText,\n      onSubmit: this.submit,\n      inputDisabled: this.state.inputDisabled,\n      micButtonDisabled: this.state.micButtonDisabled,\n      handleMicButton: this.micButtonHandler,\n      currentVoiceState: this.state.currentVoiceState\n    })));\n  };\n\n  return ChatBot;\n}(Component);\n\nexport { ChatBot };\n\nfunction ChatBotTextInput(props) {\n  var styles = props.styles;\n  var onChange = props.onChange;\n  var inputText = props.inputText;\n  var inputDisabled = props.inputDisabled;\n  var currentVoiceState = props.currentVoiceState;\n  return React.createElement(\"input\", {\n    style: styles.textInput,\n    type: \"text\",\n    placeholder: I18n.get(currentVoiceState.MESSAGE),\n    onChange: onChange,\n    value: inputText,\n    disabled: inputDisabled\n  });\n}\n\nfunction ChatBotMicButton(props) {\n  var voiceEnabled = props.voiceEnabled;\n  var styles = props.styles;\n  var micButtonDisabled = props.micButtonDisabled;\n  var handleMicButton = props.handleMicButton;\n  var micText = props.micText;\n\n  if (!voiceEnabled) {\n    return null;\n  }\n\n  return React.createElement(\"button\", {\n    style: styles.mic,\n    disabled: micButtonDisabled,\n    onClick: handleMicButton\n  }, micText);\n}\n\nfunction ChatBotTextButton(props) {\n  var textEnabled = props.textEnabled;\n  var styles = props.styles;\n  var inputDisabled = props.inputDisabled;\n\n  if (!textEnabled) {\n    return null;\n  }\n\n  return React.createElement(\"button\", {\n    type: \"submit\",\n    style: styles.button,\n    disabled: inputDisabled\n  }, I18n.get('Send'));\n}\n\nfunction ChatBotInputs(props) {\n  var voiceEnabled = props.voiceEnabled;\n  var textEnabled = props.textEnabled;\n  var styles = props.styles;\n  var onChange = props.onChange;\n  var inputDisabled = props.inputDisabled;\n  var micButtonDisabled = props.micButtonDisabled;\n  var inputText = props.inputText;\n  var onSubmit = props.onSubmit;\n  var handleMicButton = props.handleMicButton;\n  var micText = props.micText;\n  var currentVoiceState = props.currentVoiceState;\n\n  if (voiceEnabled && !textEnabled) {\n    inputDisabled = true;\n  }\n\n  if (!voiceEnabled && !textEnabled) {\n    return React.createElement(\"div\", null, \"No Chatbot inputs enabled. Set at least one of voiceEnabled or textEnabled in the props.\", ' ');\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: onSubmit\n  }, React.createElement(ChatBotTextInput, {\n    onSubmit: onSubmit,\n    styles: styles,\n    type: \"text\",\n    currentVoiceState: currentVoiceState,\n    onChange: onChange,\n    inputText: inputText,\n    inputDisabled: inputDisabled\n  }), React.createElement(ChatBotTextButton, {\n    onSubmit: onSubmit,\n    type: \"submit\",\n    styles: styles,\n    inputDisabled: inputDisabled,\n    textEnabled: textEnabled\n  }), React.createElement(ChatBotMicButton, {\n    styles: styles,\n    micButtonDisabled: micButtonDisabled,\n    handleMicButton: handleMicButton,\n    micText: micText,\n    voiceEnabled: voiceEnabled\n  }));\n} // @ts-ignore\n\n\nChatBot.defaultProps = {\n  title: '',\n  botName: '',\n  onComplete: undefined,\n  clearOnComplete: false,\n  voiceConfig: defaultVoiceConfig,\n  conversationModeOn: false,\n  voiceEnabled: false,\n  textEnabled: true\n};\nexport default ChatBot;","map":{"version":3,"sources":["../../src/Interactions/ChatBot.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,SAAT,QAA0B,OAA1B;AACA,SAEC,WAFD,EAGC,aAHD,EAIC,WAJD,EAKC,aALD,QAMO,cANP;AAOA,SAAS,KAAT,EAAgB,MAAhB,QAA8B,iBAA9B;AAEA,SAAS,IAAT,QAAqB,mBAArB;AACA,OAAO,YAAP,MAAyB,2BAAzB;AAEA,SAAS,aAAa,IAAI,MAA1B,QAAwC,mBAAxC;AAEA,IAAM,MAAM,GAAG,IAAI,MAAJ,CAAW,SAAX,CAAf,C,CAEA;;AACA,IAAM,MAAM,GAA6C;AACxD,EAAA,MAAM,EAAE;AACP,IAAA,OAAO,EAAE,EADF;AAEP,IAAA,QAAQ,EAAE,EAFH;AAGP,IAAA,KAAK,EAAE,MAHA;AAIP,IAAA,SAAS,EAAE,CAJJ;AAKP,IAAA,SAAS,EAAE;AALJ,GADgD;AAQxD,EAAA,OAAO,EAAE;AACR,IAAA,QAAQ,EAAE,EADF;AAER,IAAA,SAAS,EAAE;AAFH,GAR+C;AAYxD,EAAA,IAAI,EAAE;AACL,IAAA,MAAM,EAAE,OADH;AAEL,IAAA,QAAQ,EAAE;AAFL,GAZkD;AAgBxD,EAAA,SAAS,EAAE,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,KAAlB,EAAyB;AACnC,IAAA,OAAO,EAAE,cAD0B;AAEnC,IAAA,KAAK,EAAE;AAF4B,GAAzB,CAhB6C;AAoBxD;AACA,EAAA,MAAM,EAAE,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,MAAlB,EAA0B;AACjC,IAAA,KAAK,EAAE,MAD0B;AAEjC,IAAA,KAAK,EAAE;AAF0B,GAA1B,CArBgD;AAyBxD;AACA,EAAA,GAAG,EAAE,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,MAAlB,EAA0B;AAC9B,IAAA,KAAK,EAAE,MADuB;AAE9B,IAAA,KAAK,EAAE;AAFuB,GAA1B;AA1BmD,CAAzD;AAgCA,IAAM,MAAM,GAAG;AACd,EAAA,OAAO,EAAE;AAAE,IAAA,OAAO,EAAE,gCAAX;AAA6C,IAAA,IAAI,EAAE;AAAnD,GADK;AAEd,EAAA,SAAS,EAAE;AAAE,IAAA,OAAO,EAAE,uCAAX;AAAoD,IAAA,IAAI,EAAE;AAA1D,GAFG;AAGd,EAAA,OAAO,EAAE;AAAE,IAAA,OAAO,EAAE,gBAAX;AAA6B,IAAA,IAAI,EAAE;AAAnC,GAHK;AAId,EAAA,QAAQ,EAAE;AAAE,IAAA,OAAO,EAAE,aAAX;AAA0B,IAAA,IAAI,EAAE;AAAhC;AAJI,CAAf;AAOA,IAAM,kBAAkB,GAAG;AAC1B,EAAA,sBAAsB,EAAE;AACvB,IAAA,IAAI,EAAE,IADiB;AAEvB,IAAA,SAAS,EAAE;AAFY;AADE,CAA3B;AAOA,IAAI,YAAJ;;AAgCA,IAAA,OAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6B,EAAA,SAAA,CAAA,OAAA,EAAA,MAAA,CAAA;;AAG5B,WAAA,OAAA,CAAY,KAAZ,EAAiB;AAAjB,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,IADb;;AAGC,QAAI,KAAI,CAAC,KAAL,CAAW,YAAf,EAA6B;AAC5B,MAAA,OAAO,CAAC,iBAAD,CAAP,CAD4B,CAE5B;;;AACA,MAAA,YAAY,GAAG,IAAI,MAAM,CAAC,QAAP,CAAgB,YAApB,EAAf;AACA;;AACD,QAAI,CAAC,KAAI,CAAC,KAAL,CAAW,WAAZ,IAA2B,KAAI,CAAC,KAAL,CAAW,YAA1C,EAAwD;AACvD,MAAA,MAAM,CAAC,OAAP,CAAe,OAAf,GAAyB,sBAAzB;AACA,MAAA,MAAM,CAAC,SAAP,GAAmB,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,KAAlB,EAAyB;AAC3C,QAAA,OAAO,EAAE,cADkC;AAE3C,QAAA,KAAK,EAAE;AAFoC,OAAzB,CAAnB;AAIA;;AACD,QAAI,KAAI,CAAC,KAAL,CAAW,WAAX,IAA0B,CAAC,KAAI,CAAC,KAAL,CAAW,YAA1C,EAAwD;AACvD,MAAA,MAAM,CAAC,OAAP,CAAe,OAAf,GAAyB,gBAAzB;AACA,MAAA,MAAM,CAAC,SAAP,GAAmB,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,KAAlB,EAAyB;AAC3C,QAAA,OAAO,EAAE,cADkC;AAE3C,QAAA,KAAK,EAAE;AAFoC,OAAzB,CAAnB;AAIA;;AACD,QAAI,CAAC,KAAI,CAAC,KAAL,CAAW,WAAX,CAAuB,sBAA5B,EAAoD;AACnD,YAAM,IAAI,KAAJ,CAAU,oDAAV,CAAN;AACA;;AAED,IAAA,KAAI,CAAC,KAAL,GAAa;AACZ,MAAA,MAAM,EAAE,CACP;AACC,QAAA,OAAO,EAAE,KAAI,CAAC,KAAL,CAAW,cAAX,IAA6B,gBADvC;AAEC,QAAA,IAAI,EAAE;AAFP,OADO,CADI;AAOZ,MAAA,SAAS,EAAE,EAPC;AAQZ,MAAA,iBAAiB,EAAE,MAAM,CAAC,OARd;AASZ,MAAA,aAAa,EAAE,KATH;AAUZ,MAAA,OAAO,EAAE,MAAM,CAAC,OAAP,CAAe,IAVZ;AAWZ,MAAA,oBAAoB,EAAE,KAXV;AAYZ,MAAA,iBAAiB,EAAE;AAZP,KAAb;AAcA,IAAA,KAAI,CAAC,gBAAL,GAAwB,KAAI,CAAC,gBAAL,CAAsB,IAAtB,CAA2B,KAA3B,CAAxB;AACA,IAAA,KAAI,CAAC,eAAL,GAAuB,KAAI,CAAC,eAAL,CAAqB,IAArB,CAA0B,KAA1B,CAAvB;AACA,IAAA,KAAI,CAAC,SAAL,GAAiB,KAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,KAApB,CAAjB;AACA,IAAA,KAAI,CAAC,MAAL,GAAc,KAAI,CAAC,MAAL,CAAY,IAAZ,CAAiB,KAAjB,CAAd,CA3CgB,CA4ChB;;AACA,IAAA,KAAI,CAAC,YAAL,GAAoB,KAAK,CAAC,SAAN,EAApB;AACA,IAAA,KAAI,CAAC,gBAAL,GAAwB,KAAI,CAAC,gBAAL,CAAsB,IAAtB,CAA2B,KAA3B,CAAxB;AACA,IAAA,KAAI,CAAC,mBAAL,GAA2B,KAAI,CAAC,mBAAL,CAAyB,IAAzB,CAA8B,KAA9B,CAA3B;AACA,IAAA,KAAI,CAAC,kBAAL,GAA0B,KAAI,CAAC,kBAAL,CAAwB,IAAxB,CAA6B,KAA7B,CAA1B;;AACA;;AAEK,EAAA,OAAA,CAAA,SAAA,CAAA,gBAAA,GAAN,YAAA;;;;;AACC,YAAI,KAAK,KAAL,CAAW,oBAAf,EAAqC;AACpC,eAAK,KAAL;AACA,SAFD,MAEO;AACN,eAAK,QAAL,CACC;AACC,YAAA,aAAa,EAAE,IADhB;AAEC,YAAA,oBAAoB,EAAE,IAFvB;AAGC,YAAA,iBAAiB,EAAE,MAAM,CAAC,SAH3B;AAIC,YAAA,OAAO,EAAE,MAAM,CAAC,SAAP,CAAiB,IAJ3B;AAKC,YAAA,iBAAiB,EAAE;AALpB,WADD,EAQC,YAAA;AACC,YAAA,YAAY,CAAC,cAAb,CACC,KAAI,CAAC,gBADN,EAEC,IAFD,EAGC,KAAI,CAAC,KAAL,CAAW,WAAX,CAAuB,sBAHxB;AAKA,WAdF;AAgBA;;;;;;;AACD,GArBK;;AAuBN,EAAA,OAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACC,IAAA,YAAY,CAAC,aAAb;;AACA,QAAI,CAAC,KAAK,KAAL,CAAW,oBAAhB,EAAsC;AACrC;AACA;;AACD,IAAA,YAAY,CAAC,SAAb,CAAuB,UAAA,IAAA,EAAI;AAC1B,MAAA,KAAI,CAAC,QAAL,CACC;AACC,QAAA,iBAAiB,EAAE,MAAM,CAAC,OAD3B;AAEC,QAAA,UAAU,EAAE,IAFb;AAGC,QAAA,OAAO,EAAE,MAAM,CAAC,OAAP,CAAe,IAHzB;AAIC,QAAA,iBAAiB,EAAE;AAJpB,OADD,EAOC,YAAA;AACC,QAAA,KAAI,CAAC,kBAAL;AACA,OATF;AAWA,KAZD;AAaA,GAlBD;;AAoBM,EAAA,OAAA,CAAA,SAAA,CAAA,kBAAA,GAAN,YAAA;;;;;;;;;AACC,gBAAI,CAAC,YAAD,IAAiB,OAAO,YAAY,CAAC,IAApB,KAA6B,UAAlD,EAA8D;AAC7D,oBAAM,IAAI,KAAJ,CACL,mFADK,CAAN;AAGA;;AACD,gBAAI,CAAC,KAAK,KAAL,CAAW,oBAAhB,EAAsC;AACrC,qBAAA,CAAA;AAAA;AAAA,eAAA;AACA;;AAEK,YAAA,mBAAmB,GAAG;AAC3B,cAAA,OAAO,EAAE,KAAK,KAAL,CAAW,UADO;AAE3B,cAAA,OAAO,EAAE;AACR,gBAAA,WAAW,EAAE;AADL;AAFkB,aAAtB;AAOW,mBAAA,CAAA;AAAA;AAAA,cAAM,YAAY,CAAC,IAAb,CACtB,KAAK,KAAL,CAAW,OADW,EAEtB,mBAFsB,CAAN,CAAA;;;AAAX,YAAA,QAAQ,GAAG,EAAA,CAAA,IAAA,EAAX;AAIN,iBAAK,QAAL,CACC;AACC,cAAA,WAAW,EAAE,QADd;AAEC,cAAA,iBAAiB,EAAE,MAAM,CAAC,QAF3B;AAGC,cAAA,OAAO,EAAE,MAAM,CAAC,QAAP,CAAgB,IAH1B;AAIC,cAAA,iBAAiB,EAAE,IAJpB;AAKC,cAAA,MAAM,EAAA,cAAA,CACF,KAAK,KAAL,CAAW,MADT,EACe,CACpB;AACA;AAAE,gBAAA,OAAO,EAAE,QAAQ,CAAC,eAApB;AAAqC,gBAAA,IAAI,EAAE;AAA3C,eAFoB,EAGpB;AACA,cAAA,QAAQ,IAAI;AAAE,gBAAA,IAAI,EAAE,KAAR;AAAe,gBAAA,OAAO,EAAE,QAAQ,CAAC;AAAjC,eAJQ,CADf,CALP;AAYC,cAAA,SAAS,EAAE;AAZZ,aADD,EAeC,YAAA;AACC,cAAA,KAAI,CAAC,mBAAL;AACA,aAjBF;AAmBA,iBAAK,YAAL,CAAkB,OAAlB,CAA0B,SAA1B,GAAsC,KAAK,YAAL,CAAkB,OAAlB,CAA0B,YAAhE;;;;;;;AACA,GAzCK;;AA2CN,EAAA,OAAA,CAAA,SAAA,CAAA,mBAAA,GAAA,YAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACC,QAAI,CAAC,KAAK,KAAL,CAAW,oBAAhB,EAAsC;AACrC;AACA;;AACD,QAAI,KAAK,KAAL,CAAW,WAAX,CAAuB,WAAvB,KAAuC,YAA3C,EAAyD;AACxD,MAAA,YAAY,CAAC,IAAb,CAAkB,KAAK,KAAL,CAAW,WAAX,CAAuB,WAAzC,EAAsD,YAAA;AACrD,YACC,KAAI,CAAC,KAAL,CAAW,WAAX,CAAuB,WAAvB,KAAuC,qBAAvC,IACA,KAAI,CAAC,KAAL,CAAW,WAAX,CAAuB,WAAvB,KAAuC,WADvC,IAEA,KAAI,CAAC,KAAL,CAAW,WAAX,CAAuB,WAAvB,KAAuC,QAFvC,IAGA,CAAC,KAAI,CAAC,KAAL,CAAW,kBAJb,EAKE;AACD,UAAA,KAAI,CAAC,QAAL,CAAc;AACb,YAAA,aAAa,EAAE,KADF;AAEb,YAAA,iBAAiB,EAAE,MAAM,CAAC,OAFb;AAGb,YAAA,OAAO,EAAE,MAAM,CAAC,OAAP,CAAe,IAHX;AAIb,YAAA,iBAAiB,EAAE,KAJN;AAKb,YAAA,oBAAoB,EAAE;AALT,WAAd;AAOA,SAbD,MAaO;AACN,UAAA,KAAI,CAAC,QAAL,CACC;AACC,YAAA,iBAAiB,EAAE,MAAM,CAAC,SAD3B;AAEC,YAAA,OAAO,EAAE,MAAM,CAAC,SAAP,CAAiB,IAF3B;AAGC,YAAA,iBAAiB,EAAE;AAHpB,WADD,EAMC,YAAA;AACC,YAAA,YAAY,CAAC,cAAb,CACC,KAAI,CAAC,gBADN,EAEC,IAFD,EAGC,KAAI,CAAC,KAAL,CAAW,WAAX,CAAuB,sBAHxB;AAKA,WAZF;AAcA;AACD,OA9BD;AA+BA,KAhCD,MAgCO;AACN,WAAK,QAAL,CAAc;AACb,QAAA,aAAa,EAAE,KADF;AAEb,QAAA,iBAAiB,EAAE,MAAM,CAAC,OAFb;AAGb,QAAA,OAAO,EAAE,MAAM,CAAC,OAAP,CAAe,IAHX;AAIb,QAAA,iBAAiB,EAAE,KAJN;AAKb,QAAA,oBAAoB,EAAE;AALT,OAAd;AAOA;AACD,GA7CD;;AA+CA,EAAA,OAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AACC,SAAK,QAAL,CACC;AACC,MAAA,SAAS,EAAE,EADZ;AAEC,MAAA,iBAAiB,EAAE,MAAM,CAAC,OAF3B;AAGC,MAAA,aAAa,EAAE,KAHhB;AAIC,MAAA,OAAO,EAAE,MAAM,CAAC,OAAP,CAAe,IAJzB;AAKC,MAAA,oBAAoB,EAAE,KALvB;AAMC,MAAA,iBAAiB,EAAE;AANpB,KADD,EASC,YAAA;AACC,MAAA,YAAY,CAAC,KAAb;AACA,KAXF;AAaA,GAdD;;AAgBA,EAAA,OAAA,CAAA,SAAA,CAAA,SAAA,GAAA,YAAA;AACC,WAAO,KAAK,KAAL,CAAW,MAAX,CAAkB,GAAlB,CAAsB,UAAC,CAAD,EAAI,CAAJ,EAAK;AACjC,UAAI,CAAC,CAAC,IAAF,KAAW,IAAf,EAAqB;AACpB,eACC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,UAAA,GAAG,EAAE,CAAV;AAAa,UAAA,KAAK,EAAE,MAAM,CAAC;AAA3B,SAAA,EACE,CAAC,CAAC,OADJ,CADD;AAKA,OAND,MAMO,IAAI,CAAC,CAAC,IAAF,KAAW,QAAf,EAAyB;AAC/B,eACC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,UAAA,GAAG,EAAE,CAAV;AAAa,UAAA,KAAK,EAAE,MAAM,CAAC;AAA3B,SAAA,EACE,CAAC,CAAC,OADJ,CADD;AAKA,OANM,MAMA;AACN,eACC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,UAAA,GAAG,EAAE,CAAV;AAAa,UAAA,KAAK,EAAE,MAAM,CAAC;AAA3B,SAAA,EACE,CAAC,CAAC,OADJ,CADD;AAKA;AACD,KApBM,CAAP;AAqBA,GAtBD;;AAwBM,EAAA,OAAA,CAAA,SAAA,CAAA,MAAA,GAAN,UAAa,CAAb,EAAc;;;;;;;;;AACb,YAAA,CAAC,CAAC,cAAF;;AAEA,gBAAI,CAAC,KAAK,KAAL,CAAW,SAAhB,EAA2B;AAC1B,qBAAA,CAAA;AAAA;AAAA,eAAA;AACA;;AAED,mBAAA,CAAA;AAAA;AAAA,cAAM,IAAI,OAAJ,CAAY,UAAA,OAAA,EAAO;AACxB,qBAAA,KAAI,CAAC,QAAL,CACC;AACC,gBAAA,MAAM,EAAA,cAAA,CACF,KAAI,CAAC,KAAL,CAAW,MADT,EACe,CACpB;AAAE,kBAAA,OAAO,EAAE,KAAI,CAAC,KAAL,CAAW,SAAtB;AAAiC,kBAAA,IAAI,EAAE;AAAvC,iBADoB,CADf;AADP,eADD,EAOC,OAPD,CAAA;AAQC,aATI,CAAN,CAAA;;;AAAA,YAAA,EAAA,CAAA,IAAA;;AAYA,gBAAI,CAAC,YAAD,IAAiB,OAAO,YAAY,CAAC,IAApB,KAA6B,UAAlD,EAA8D;AAC7D,oBAAM,IAAI,KAAJ,CACL,mFADK,CAAN;AAGA;;AAEgB,mBAAA,CAAA;AAAA;AAAA,cAAM,YAAY,CAAC,IAAb,CACtB,KAAK,KAAL,CAAW,OADW,EAEtB,KAAK,KAAL,CAAW,SAFW,CAAN,CAAA;;;AAAX,YAAA,QAAQ,GAAG,EAAA,CAAA,IAAA,EAAX;AAKN,iBAAK,QAAL,CAAc;AACb;AACA,cAAA,MAAM,EAAA,cAAA,CACF,KAAK,KAAL,CAAW,MADT,EACe,CACpB;AACA,cAAA,QAAQ,IAAI;AAAE,gBAAA,IAAI,EAAE,KAAR;AAAe,gBAAA,OAAO,EAAE,QAAQ,CAAC;AAAjC,eAFQ,CADf,CAFO;AAOb,cAAA,SAAS,EAAE;AAPE,aAAd;AASA,iBAAK,YAAL,CAAkB,OAAlB,CAA0B,SAA1B,GAAsC,KAAK,YAAL,CAAkB,OAAlB,CAA0B,YAAhE;;;;;;;AACA,GAxCK;;AA0CA,EAAA,OAAA,CAAA,SAAA,CAAA,eAAA,GAAN,UAAsB,KAAtB,EAA2B;;;;;AAC1B,mBAAA,CAAA;AAAA;AAAA,cAAM,KAAK,QAAL,CAAc;AAAE,cAAA,SAAS,EAAE,KAAK,CAAC,MAAN,CAAa;AAA1B,aAAd,CAAN,CAAA;;;AAAA,YAAA,EAAA,CAAA,IAAA;;;;;;;;AACA,GAFK;;AAIN,EAAA,OAAA,CAAA,SAAA,CAAA,aAAA,GAAA,UAAc,EAAd,EAAgB;AAAhB,QAAA,KAAA,GAAA,IAAA;;AACC,WAAO,YAAA;AAAC,UAAA,IAAA,GAAA,EAAA;;WAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAO;AAAP,QAAA,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACC,UAAA,eAAA,GAAA,KAAA,CAAA,KAAA,CAAA,eAAA;AACR,UAAM,OAAO,GAAG,EAAE,CAAA,KAAF,CAAE,KAAA,CAAF,EAAM,IAAN,CAAhB;;AAEA,MAAA,KAAI,CAAC,QAAL,CACC;AACC,QAAA,MAAM,EAAE,cAAA,CACH,eAAe,GAAG,EAAH,GAAQ,KAAI,CAAC,KAAL,CAAW,MAD/B,EACsC,CAC7C,OAAO,IAAI;AAAE,UAAA,IAAI,EAAE,KAAR;AAAe,UAAA,OAAO,EAAA;AAAtB,SADkC,CADtC,CAAA,CAGN,MAHM,CAGC,OAHD;AADT,OADD,EAOC,YAAA;AACC,QAAA,KAAI,CAAC,YAAL,CAAkB,OAAlB,CAA0B,SAA1B,GAAsC,KAAI,CAAC,YAAL,CAAkB,OAAlB,CAA0B,YAAhE;AACA,OATF;AAWA,KAfD;AAgBA,GAjBD;;AAmBA,EAAA,OAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,YAAA;AACO,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QAAE,UAAA,GAAA,EAAA,CAAA,UAAF;AAAA,QAAc,OAAA,GAAA,EAAA,CAAA,OAAd;;AAEN,QAAI,UAAU,IAAI,OAAlB,EAA2B;AAC1B,UAAI,CAAC,YAAD,IAAiB,OAAO,YAAY,CAAC,UAApB,KAAmC,UAAxD,EAAoE;AACnE,cAAM,IAAI,KAAJ,CACL,mFADK,CAAN;AAGA,OALyB,CAM1B;;;AACA,MAAA,YAAY,CAAC,UAAb,CAAwB,OAAxB,EAAiC,KAAK,aAAL,CAAmB,UAAnB,EAA+B,IAA/B,CAAjC;AACA;AACD,GAZD;;AAcA,EAAA,OAAA,CAAA,SAAA,CAAA,kBAAA,GAAA,UAAmB,SAAnB,EAA4B;AACrB,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QAAE,UAAA,GAAA,EAAA,CAAA,UAAF;AAAA,QAAc,OAAA,GAAA,EAAA,CAAA,OAAd;;AAEN,QAAI,OAAO,IAAI,KAAK,KAAL,CAAW,UAAX,KAA0B,SAAS,CAAC,UAAnD,EAA+D;AAC9D,UAAI,CAAC,YAAD,IAAiB,OAAO,YAAY,CAAC,UAApB,KAAmC,UAAxD,EAAoE;AACnE,cAAM,IAAI,KAAJ,CACL,mFADK,CAAN;AAGA,OAL6D,CAM9D;;;AACA,MAAA,YAAY,CAAC,UAAb,CAAwB,OAAxB,EAAiC,KAAK,aAAL,CAAmB,UAAnB,EAA+B,IAA/B,CAAjC;AACA;AACD,GAZD;;AAcA,EAAA,OAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACO,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QAAE,KAAA,GAAA,EAAA,CAAA,KAAF;AAAA,QAAS,KAAA,GAAA,EAAA,CAAA,KAAT;AAAA,QAAgB,UAAA,GAAA,EAAA,CAAA,UAAhB;AAEN,WACC,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY;AAAC,MAAA,KAAK,EAAE;AAAR,KAAZ,EACE,KAAK,IACL,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc;AAAC,MAAA,KAAK,EAAE;AAAR,KAAd,EAA8B,IAAI,CAAC,GAAL,CAAS,KAAT,CAA9B,CAFF,EAIC,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY;AAAC,MAAA,KAAK,EAAE;AAAR,KAAZ,EACC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,GAAG,EAAE,KAAK,YAAf;AAA6B,MAAA,KAAK,EAAE,MAAM,CAAC;AAA3C,KAAA,EACE,KAAK,SAAL,EADF,CADD,CAJD,EASC,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc;AAAC,MAAA,KAAK,EAAE;AAAR,KAAd,EACC,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc;AACb,MAAA,OAAO,EAAE,KAAK,KAAL,CAAW,OADP;AAEb,MAAA,YAAY,EAAE,KAAK,KAAL,CAAW,YAFZ;AAGb,MAAA,WAAW,EAAE,KAAK,KAAL,CAAW,WAHX;AAIb,MAAA,MAAM,EAAE,MAJK;AAKb,MAAA,QAAQ,EAAE,KAAK,eALF;AAMb,MAAA,SAAS,EAAE,KAAK,KAAL,CAAW,SANT;AAOb,MAAA,QAAQ,EAAE,KAAK,MAPF;AAQb,MAAA,aAAa,EAAE,KAAK,KAAL,CAAW,aARb;AASb,MAAA,iBAAiB,EAAE,KAAK,KAAL,CAAW,iBATjB;AAUb,MAAA,eAAe,EAAE,KAAK,gBAVT;AAWb,MAAA,iBAAiB,EAAE,KAAK,KAAL,CAAW;AAXjB,KAAd,CADD,CATD,CADD;AA2BA,GA9BD;;AA+BD,SAAA,OAAA;AAAC,CA/VD,CAA6B,SAA7B,CAAA;;;;AAiWA,SAAS,gBAAT,CAA0B,KAA1B,EAA+B;AAC9B,MAAM,MAAM,GAAG,KAAK,CAAC,MAArB;AACA,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAvB;AACA,MAAM,SAAS,GAAG,KAAK,CAAC,SAAxB;AACA,MAAM,aAAa,GAAG,KAAK,CAAC,aAA5B;AACA,MAAM,iBAAiB,GAAG,KAAK,CAAC,iBAAhC;AAEA,SACC,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AACC,IAAA,KAAK,EAAE,MAAM,CAAC,SADf;AAEC,IAAA,IAAI,EAAC,MAFN;AAGC,IAAA,WAAW,EAAE,IAAI,CAAC,GAAL,CAAS,iBAAiB,CAAC,OAA3B,CAHd;AAIC,IAAA,QAAQ,EAAE,QAJX;AAKC,IAAA,KAAK,EAAE,SALR;AAMC,IAAA,QAAQ,EAAE;AANX,GAAA,CADD;AAUA;;AAED,SAAS,gBAAT,CAA0B,KAA1B,EAA+B;AAC9B,MAAM,YAAY,GAAG,KAAK,CAAC,YAA3B;AACA,MAAM,MAAM,GAAG,KAAK,CAAC,MAArB;AACA,MAAM,iBAAiB,GAAG,KAAK,CAAC,iBAAhC;AACA,MAAM,eAAe,GAAG,KAAK,CAAC,eAA9B;AACA,MAAM,OAAO,GAAG,KAAK,CAAC,OAAtB;;AAEA,MAAI,CAAC,YAAL,EAAmB;AAClB,WAAO,IAAP;AACA;;AAED,SACC,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACC,IAAA,KAAK,EAAE,MAAM,CAAC,GADf;AAEC,IAAA,QAAQ,EAAE,iBAFX;AAGC,IAAA,OAAO,EAAE;AAHV,GAAA,EAKE,OALF,CADD;AASA;;AAED,SAAS,iBAAT,CAA2B,KAA3B,EAAgC;AAC/B,MAAM,WAAW,GAAG,KAAK,CAAC,WAA1B;AACA,MAAM,MAAM,GAAG,KAAK,CAAC,MAArB;AACA,MAAM,aAAa,GAAG,KAAK,CAAC,aAA5B;;AAEA,MAAI,CAAC,WAAL,EAAkB;AACjB,WAAO,IAAP;AACA;;AAED,SACC,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAE,MAAM,CAAC,MAApC;AAA4C,IAAA,QAAQ,EAAE;AAAtD,GAAA,EACE,IAAI,CAAC,GAAL,CAAS,MAAT,CADF,CADD;AAKA;;AAED,SAAS,aAAT,CAAuB,KAAvB,EAA4B;AAC3B,MAAM,YAAY,GAAG,KAAK,CAAC,YAA3B;AACA,MAAM,WAAW,GAAG,KAAK,CAAC,WAA1B;AACA,MAAM,MAAM,GAAG,KAAK,CAAC,MAArB;AACA,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAvB;AACA,MAAI,aAAa,GAAG,KAAK,CAAC,aAA1B;AACA,MAAM,iBAAiB,GAAG,KAAK,CAAC,iBAAhC;AACA,MAAM,SAAS,GAAG,KAAK,CAAC,SAAxB;AACA,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAvB;AACA,MAAM,eAAe,GAAG,KAAK,CAAC,eAA9B;AACA,MAAM,OAAO,GAAG,KAAK,CAAC,OAAtB;AACA,MAAM,iBAAiB,GAAG,KAAK,CAAC,iBAAhC;;AAEA,MAAI,YAAY,IAAI,CAAC,WAArB,EAAkC;AACjC,IAAA,aAAa,GAAG,IAAhB;AACA;;AAED,MAAI,CAAC,YAAD,IAAiB,CAAC,WAAtB,EAAmC;AAClC,WACC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,E,0FAAA,EAE2B,GAF3B,CADD;AAMA;;AAED,SACC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,QAAQ,EAAE;AAAhB,GAAA,EACC,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAiB;AAChB,IAAA,QAAQ,EAAE,QADM;AAEhB,IAAA,MAAM,EAAE,MAFQ;AAGhB,IAAA,IAAI,EAAC,MAHW;AAIhB,IAAA,iBAAiB,EAAE,iBAJH;AAKhB,IAAA,QAAQ,EAAE,QALM;AAMhB,IAAA,SAAS,EAAE,SANK;AAOhB,IAAA,aAAa,EAAE;AAPC,GAAjB,CADD,EAUC,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAkB;AACjB,IAAA,QAAQ,EAAE,QADO;AAEjB,IAAA,IAAI,EAAC,QAFY;AAGjB,IAAA,MAAM,EAAE,MAHS;AAIjB,IAAA,aAAa,EAAE,aAJE;AAKjB,IAAA,WAAW,EAAE;AALI,GAAlB,CAVD,EAiBC,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAiB;AAChB,IAAA,MAAM,EAAE,MADQ;AAEhB,IAAA,iBAAiB,EAAE,iBAFH;AAGhB,IAAA,eAAe,EAAE,eAHD;AAIhB,IAAA,OAAO,EAAE,OAJO;AAKhB,IAAA,YAAY,EAAE;AALE,GAAjB,CAjBD,CADD;AA2BA,C,CAED;;;AACA,OAAO,CAAC,YAAR,GAAuB;AACtB,EAAA,KAAK,EAAE,EADe;AAEtB,EAAA,OAAO,EAAE,EAFa;AAGtB,EAAA,UAAU,EAAE,SAHU;AAItB,EAAA,eAAe,EAAE,KAJK;AAKtB,EAAA,WAAW,EAAE,kBALS;AAMtB,EAAA,kBAAkB,EAAE,KANE;AAOtB,EAAA,YAAY,EAAE,KAPQ;AAQtB,EAAA,WAAW,EAAE;AARS,CAAvB;AAWA,eAAe,OAAf","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport * as React from 'react';\nimport { Component } from 'react';\nimport { FormSection, SectionHeader, SectionBody, SectionFooter, } from '../AmplifyUI';\nimport { Input, Button } from '../AmplifyTheme';\nimport { I18n } from '@aws-amplify/core';\nimport Interactions from '@aws-amplify/interactions';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('ChatBot');\n// @ts-ignore\nvar styles = {\n    itemMe: {\n        padding: 10,\n        fontSize: 12,\n        color: 'gray',\n        marginTop: 4,\n        textAlign: 'right',\n    },\n    itemBot: {\n        fontSize: 12,\n        textAlign: 'left',\n    },\n    list: {\n        height: '300px',\n        overflow: 'auto',\n    },\n    textInput: Object.assign({}, Input, {\n        display: 'inline-block',\n        width: 'calc(100% - 90px - 15px)',\n    }),\n    // @ts-ignore\n    button: Object.assign({}, Button, {\n        width: '60px',\n        float: 'right',\n    }),\n    // @ts-ignore\n    mic: Object.assign({}, Button, {\n        width: '40px',\n        float: 'right',\n    }),\n};\nvar STATES = {\n    INITIAL: { MESSAGE: 'Type your message or click  ðŸŽ¤', ICON: 'ðŸŽ¤' },\n    LISTENING: { MESSAGE: 'Listening... click ðŸ”´ again to cancel', ICON: 'ðŸ”´' },\n    SENDING: { MESSAGE: 'Please wait...', ICON: 'ðŸ”Š' },\n    SPEAKING: { MESSAGE: 'Speaking...', ICON: '...' },\n};\nvar defaultVoiceConfig = {\n    silenceDetectionConfig: {\n        time: 2000,\n        amplitude: 0.2,\n    },\n};\nvar audioControl;\nvar ChatBot = /** @class */ (function (_super) {\n    __extends(ChatBot, _super);\n    function ChatBot(props) {\n        var _this = _super.call(this, props) || this;\n        if (_this.props.voiceEnabled) {\n            require('./aws-lex-audio');\n            // @ts-ignore\n            audioControl = new global.LexAudio.audioControl();\n        }\n        if (!_this.props.textEnabled && _this.props.voiceEnabled) {\n            STATES.INITIAL.MESSAGE = 'Click the mic button';\n            styles.textInput = Object.assign({}, Input, {\n                display: 'inline-block',\n                width: 'calc(100% - 40px - 15px)',\n            });\n        }\n        if (_this.props.textEnabled && !_this.props.voiceEnabled) {\n            STATES.INITIAL.MESSAGE = 'Type a message';\n            styles.textInput = Object.assign({}, Input, {\n                display: 'inline-block',\n                width: 'calc(100% - 60px - 15px)',\n            });\n        }\n        if (!_this.props.voiceConfig.silenceDetectionConfig) {\n            throw new Error('voiceConfig prop is missing silenceDetectionConfig');\n        }\n        _this.state = {\n            dialog: [\n                {\n                    message: _this.props.welcomeMessage || 'Welcome to Lex',\n                    from: 'system',\n                },\n            ],\n            inputText: '',\n            currentVoiceState: STATES.INITIAL,\n            inputDisabled: false,\n            micText: STATES.INITIAL.ICON,\n            continueConversation: false,\n            micButtonDisabled: false,\n        };\n        _this.micButtonHandler = _this.micButtonHandler.bind(_this);\n        _this.changeInputText = _this.changeInputText.bind(_this);\n        _this.listItems = _this.listItems.bind(_this);\n        _this.submit = _this.submit.bind(_this);\n        // @ts-ignore\n        _this.listItemsRef = React.createRef();\n        _this.onSilenceHandler = _this.onSilenceHandler.bind(_this);\n        _this.doneSpeakingHandler = _this.doneSpeakingHandler.bind(_this);\n        _this.lexResponseHandler = _this.lexResponseHandler.bind(_this);\n        return _this;\n    }\n    ChatBot.prototype.micButtonHandler = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (this.state.continueConversation) {\n                    this.reset();\n                }\n                else {\n                    this.setState({\n                        inputDisabled: true,\n                        continueConversation: true,\n                        currentVoiceState: STATES.LISTENING,\n                        micText: STATES.LISTENING.ICON,\n                        micButtonDisabled: false,\n                    }, function () {\n                        audioControl.startRecording(_this.onSilenceHandler, null, _this.props.voiceConfig.silenceDetectionConfig);\n                    });\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    ChatBot.prototype.onSilenceHandler = function () {\n        var _this = this;\n        audioControl.stopRecording();\n        if (!this.state.continueConversation) {\n            return;\n        }\n        audioControl.exportWAV(function (blob) {\n            _this.setState({\n                currentVoiceState: STATES.SENDING,\n                audioInput: blob,\n                micText: STATES.SENDING.ICON,\n                micButtonDisabled: true,\n            }, function () {\n                _this.lexResponseHandler();\n            });\n        });\n    };\n    ChatBot.prototype.lexResponseHandler = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var interactionsMessage, response;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!Interactions || typeof Interactions.send !== 'function') {\n                            throw new Error('No Interactions module found, please ensure @aws-amplify/interactions is imported');\n                        }\n                        if (!this.state.continueConversation) {\n                            return [2 /*return*/];\n                        }\n                        interactionsMessage = {\n                            content: this.state.audioInput,\n                            options: {\n                                messageType: 'voice',\n                            },\n                        };\n                        return [4 /*yield*/, Interactions.send(this.props.botName, interactionsMessage)];\n                    case 1:\n                        response = _a.sent();\n                        this.setState({\n                            lexResponse: response,\n                            currentVoiceState: STATES.SPEAKING,\n                            micText: STATES.SPEAKING.ICON,\n                            micButtonDisabled: true,\n                            dialog: __spreadArrays(this.state.dialog, [\n                                // @ts-ignore\n                                { message: response.inputTranscript, from: 'me' },\n                                // @ts-ignore\n                                response && { from: 'bot', message: response.message },\n                            ]),\n                            inputText: '',\n                        }, function () {\n                            _this.doneSpeakingHandler();\n                        });\n                        this.listItemsRef.current.scrollTop = this.listItemsRef.current.scrollHeight;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ChatBot.prototype.doneSpeakingHandler = function () {\n        var _this = this;\n        if (!this.state.continueConversation) {\n            return;\n        }\n        if (this.state.lexResponse.contentType === 'audio/mpeg') {\n            audioControl.play(this.state.lexResponse.audioStream, function () {\n                if (_this.state.lexResponse.dialogState === 'ReadyForFulfillment' ||\n                    _this.state.lexResponse.dialogState === 'Fulfilled' ||\n                    _this.state.lexResponse.dialogState === 'Failed' ||\n                    !_this.props.conversationModeOn) {\n                    _this.setState({\n                        inputDisabled: false,\n                        currentVoiceState: STATES.INITIAL,\n                        micText: STATES.INITIAL.ICON,\n                        micButtonDisabled: false,\n                        continueConversation: false,\n                    });\n                }\n                else {\n                    _this.setState({\n                        currentVoiceState: STATES.LISTENING,\n                        micText: STATES.LISTENING.ICON,\n                        micButtonDisabled: false,\n                    }, function () {\n                        audioControl.startRecording(_this.onSilenceHandler, null, _this.props.voiceConfig.silenceDetectionConfig);\n                    });\n                }\n            });\n        }\n        else {\n            this.setState({\n                inputDisabled: false,\n                currentVoiceState: STATES.INITIAL,\n                micText: STATES.INITIAL.ICON,\n                micButtonDisabled: false,\n                continueConversation: false,\n            });\n        }\n    };\n    ChatBot.prototype.reset = function () {\n        this.setState({\n            inputText: '',\n            currentVoiceState: STATES.INITIAL,\n            inputDisabled: false,\n            micText: STATES.INITIAL.ICON,\n            continueConversation: false,\n            micButtonDisabled: false,\n        }, function () {\n            audioControl.clear();\n        });\n    };\n    ChatBot.prototype.listItems = function () {\n        return this.state.dialog.map(function (m, i) {\n            if (m.from === 'me') {\n                return (React.createElement(\"div\", { key: i, style: styles.itemMe }, m.message));\n            }\n            else if (m.from === 'system') {\n                return (React.createElement(\"div\", { key: i, style: styles.itemBot }, m.message));\n            }\n            else {\n                return (React.createElement(\"div\", { key: i, style: styles.itemBot }, m.message));\n            }\n        });\n    };\n    ChatBot.prototype.submit = function (e) {\n        return __awaiter(this, void 0, void 0, function () {\n            var response;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        e.preventDefault();\n                        if (!this.state.inputText) {\n                            return [2 /*return*/];\n                        }\n                        return [4 /*yield*/, new Promise(function (resolve) {\n                                return _this.setState({\n                                    dialog: __spreadArrays(_this.state.dialog, [\n                                        { message: _this.state.inputText, from: 'me' },\n                                    ]),\n                                }, resolve);\n                            })];\n                    case 1:\n                        _a.sent();\n                        if (!Interactions || typeof Interactions.send !== 'function') {\n                            throw new Error('No Interactions module found, please ensure @aws-amplify/interactions is imported');\n                        }\n                        return [4 /*yield*/, Interactions.send(this.props.botName, this.state.inputText)];\n                    case 2:\n                        response = _a.sent();\n                        this.setState({\n                            // @ts-ignore\n                            dialog: __spreadArrays(this.state.dialog, [\n                                // @ts-ignore\n                                response && { from: 'bot', message: response.message },\n                            ]),\n                            inputText: '',\n                        });\n                        this.listItemsRef.current.scrollTop = this.listItemsRef.current.scrollHeight;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ChatBot.prototype.changeInputText = function (event) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.setState({ inputText: event.target.value })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ChatBot.prototype.getOnComplete = function (fn) {\n        var _this = this;\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var clearOnComplete = _this.props.clearOnComplete;\n            var message = fn.apply(void 0, args);\n            _this.setState({\n                dialog: __spreadArrays((clearOnComplete ? [] : _this.state.dialog), [\n                    message && { from: 'bot', message: message },\n                ]).filter(Boolean),\n            }, function () {\n                _this.listItemsRef.current.scrollTop = _this.listItemsRef.current.scrollHeight;\n            });\n        };\n    };\n    ChatBot.prototype.componentDidMount = function () {\n        var _a = this.props, onComplete = _a.onComplete, botName = _a.botName;\n        if (onComplete && botName) {\n            if (!Interactions || typeof Interactions.onComplete !== 'function') {\n                throw new Error('No Interactions module found, please ensure @aws-amplify/interactions is imported');\n            }\n            // @ts-ignore\n            Interactions.onComplete(botName, this.getOnComplete(onComplete, this));\n        }\n    };\n    ChatBot.prototype.componentDidUpdate = function (prevProps) {\n        var _a = this.props, onComplete = _a.onComplete, botName = _a.botName;\n        if (botName && this.props.onComplete !== prevProps.onComplete) {\n            if (!Interactions || typeof Interactions.onComplete !== 'function') {\n                throw new Error('No Interactions module found, please ensure @aws-amplify/interactions is imported');\n            }\n            // @ts-ignore\n            Interactions.onComplete(botName, this.getOnComplete(onComplete, this));\n        }\n    };\n    ChatBot.prototype.render = function () {\n        var _a = this.props, title = _a.title, theme = _a.theme, onComplete = _a.onComplete;\n        return (React.createElement(FormSection, { theme: theme },\n            title && (React.createElement(SectionHeader, { theme: theme }, I18n.get(title))),\n            React.createElement(SectionBody, { theme: theme },\n                React.createElement(\"div\", { ref: this.listItemsRef, style: styles.list }, this.listItems())),\n            React.createElement(SectionFooter, { theme: theme },\n                React.createElement(ChatBotInputs, { micText: this.state.micText, voiceEnabled: this.props.voiceEnabled, textEnabled: this.props.textEnabled, styles: styles, onChange: this.changeInputText, inputText: this.state.inputText, onSubmit: this.submit, inputDisabled: this.state.inputDisabled, micButtonDisabled: this.state.micButtonDisabled, handleMicButton: this.micButtonHandler, currentVoiceState: this.state.currentVoiceState }))));\n    };\n    return ChatBot;\n}(Component));\nexport { ChatBot };\nfunction ChatBotTextInput(props) {\n    var styles = props.styles;\n    var onChange = props.onChange;\n    var inputText = props.inputText;\n    var inputDisabled = props.inputDisabled;\n    var currentVoiceState = props.currentVoiceState;\n    return (React.createElement(\"input\", { style: styles.textInput, type: \"text\", placeholder: I18n.get(currentVoiceState.MESSAGE), onChange: onChange, value: inputText, disabled: inputDisabled }));\n}\nfunction ChatBotMicButton(props) {\n    var voiceEnabled = props.voiceEnabled;\n    var styles = props.styles;\n    var micButtonDisabled = props.micButtonDisabled;\n    var handleMicButton = props.handleMicButton;\n    var micText = props.micText;\n    if (!voiceEnabled) {\n        return null;\n    }\n    return (React.createElement(\"button\", { style: styles.mic, disabled: micButtonDisabled, onClick: handleMicButton }, micText));\n}\nfunction ChatBotTextButton(props) {\n    var textEnabled = props.textEnabled;\n    var styles = props.styles;\n    var inputDisabled = props.inputDisabled;\n    if (!textEnabled) {\n        return null;\n    }\n    return (React.createElement(\"button\", { type: \"submit\", style: styles.button, disabled: inputDisabled }, I18n.get('Send')));\n}\nfunction ChatBotInputs(props) {\n    var voiceEnabled = props.voiceEnabled;\n    var textEnabled = props.textEnabled;\n    var styles = props.styles;\n    var onChange = props.onChange;\n    var inputDisabled = props.inputDisabled;\n    var micButtonDisabled = props.micButtonDisabled;\n    var inputText = props.inputText;\n    var onSubmit = props.onSubmit;\n    var handleMicButton = props.handleMicButton;\n    var micText = props.micText;\n    var currentVoiceState = props.currentVoiceState;\n    if (voiceEnabled && !textEnabled) {\n        inputDisabled = true;\n    }\n    if (!voiceEnabled && !textEnabled) {\n        return (React.createElement(\"div\", null,\n            \"No Chatbot inputs enabled. Set at least one of voiceEnabled or textEnabled in the props.\",\n            ' '));\n    }\n    return (React.createElement(\"form\", { onSubmit: onSubmit },\n        React.createElement(ChatBotTextInput, { onSubmit: onSubmit, styles: styles, type: \"text\", currentVoiceState: currentVoiceState, onChange: onChange, inputText: inputText, inputDisabled: inputDisabled }),\n        React.createElement(ChatBotTextButton, { onSubmit: onSubmit, type: \"submit\", styles: styles, inputDisabled: inputDisabled, textEnabled: textEnabled }),\n        React.createElement(ChatBotMicButton, { styles: styles, micButtonDisabled: micButtonDisabled, handleMicButton: handleMicButton, micText: micText, voiceEnabled: voiceEnabled })));\n}\n// @ts-ignore\nChatBot.defaultProps = {\n    title: '',\n    botName: '',\n    onComplete: undefined,\n    clearOnComplete: false,\n    voiceConfig: defaultVoiceConfig,\n    conversationModeOn: false,\n    voiceEnabled: false,\n    textEnabled: true,\n};\nexport default ChatBot;\n//# sourceMappingURL=ChatBot.js.map"]},"metadata":{},"sourceType":"module"}