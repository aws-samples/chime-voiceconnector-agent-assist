{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport { GraphQLError } from '../../error/GraphQLError';\nexport function duplicateOperationNameMessage(operationName) {\n  return \"There can be only one operation named \\\"\".concat(operationName, \"\\\".\");\n}\n/**\n * Unique operation names\n *\n * A GraphQL document is only valid if all defined operations have unique names.\n */\n\nexport function UniqueOperationNames(context) {\n  var knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      var operationName = node.name;\n\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(new GraphQLError(duplicateOperationNameMessage(operationName.value), [knownOperationNames[operationName.value], operationName]));\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition() {\n      return false;\n    }\n  };\n}","map":{"version":3,"sources":["/home/ec2-user/chime-voiceconnector-agent-assist/node_modules/graphql/validation/rules/UniqueOperationNames.mjs"],"names":["GraphQLError","duplicateOperationNameMessage","operationName","concat","UniqueOperationNames","context","knownOperationNames","Object","create","OperationDefinition","node","name","value","reportError","FragmentDefinition"],"mappings":"AAAA;;;;;;;;AAQA,SAASA,YAAT,QAA6B,0BAA7B;AACA,OAAO,SAASC,6BAAT,CAAuCC,aAAvC,EAAsD;AAC3D,SAAO,2CAA2CC,MAA3C,CAAkDD,aAAlD,EAAiE,KAAjE,CAAP;AACD;AACD;;;;;;AAMA,OAAO,SAASE,oBAAT,CAA8BC,OAA9B,EAAuC;AAC5C,MAAIC,mBAAmB,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAA1B;AACA,SAAO;AACLC,IAAAA,mBAAmB,EAAE,SAASA,mBAAT,CAA6BC,IAA7B,EAAmC;AACtD,UAAIR,aAAa,GAAGQ,IAAI,CAACC,IAAzB;;AAEA,UAAIT,aAAJ,EAAmB;AACjB,YAAII,mBAAmB,CAACJ,aAAa,CAACU,KAAf,CAAvB,EAA8C;AAC5CP,UAAAA,OAAO,CAACQ,WAAR,CAAoB,IAAIb,YAAJ,CAAiBC,6BAA6B,CAACC,aAAa,CAACU,KAAf,CAA9C,EAAqE,CAACN,mBAAmB,CAACJ,aAAa,CAACU,KAAf,CAApB,EAA2CV,aAA3C,CAArE,CAApB;AACD,SAFD,MAEO;AACLI,UAAAA,mBAAmB,CAACJ,aAAa,CAACU,KAAf,CAAnB,GAA2CV,aAA3C;AACD;AACF;;AAED,aAAO,KAAP;AACD,KAbI;AAcLY,IAAAA,kBAAkB,EAAE,SAASA,kBAAT,GAA8B;AAChD,aAAO,KAAP;AACD;AAhBI,GAAP;AAkBD","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport { GraphQLError } from '../../error/GraphQLError';\nexport function duplicateOperationNameMessage(operationName) {\n  return \"There can be only one operation named \\\"\".concat(operationName, \"\\\".\");\n}\n/**\n * Unique operation names\n *\n * A GraphQL document is only valid if all defined operations have unique names.\n */\n\nexport function UniqueOperationNames(context) {\n  var knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition(node) {\n      var operationName = node.name;\n\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(new GraphQLError(duplicateOperationNameMessage(operationName.value), [knownOperationNames[operationName.value], operationName]));\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n\n      return false;\n    },\n    FragmentDefinition: function FragmentDefinition() {\n      return false;\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}