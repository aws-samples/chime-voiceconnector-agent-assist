{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport isNullish from '../jsutils/isNullish';\nimport isInvalid from '../jsutils/isInvalid';\nimport objectValues from '../jsutils/objectValues';\nimport { astFromValue } from '../utilities/astFromValue';\nimport { print } from '../language/printer';\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType } from '../type/definition';\nimport { GraphQLString, isSpecifiedScalarType } from '../type/scalars';\nimport { GraphQLDirective, DEFAULT_DEPRECATION_REASON, isSpecifiedDirective } from '../type/directives';\nimport { isIntrospectionType } from '../type/introspection';\n/**\n * Accepts options as a second argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\n\nexport function printSchema(schema, options) {\n  return printFilteredSchema(schema, function (n) {\n    return !isSpecifiedDirective(n);\n  }, isDefinedType, options);\n}\nexport function printIntrospectionSchema(schema, options) {\n  return printFilteredSchema(schema, isSpecifiedDirective, isIntrospectionType, options);\n}\n\nfunction isDefinedType(type) {\n  return !isSpecifiedScalarType(type) && !isIntrospectionType(type);\n}\n\nfunction printFilteredSchema(schema, directiveFilter, typeFilter, options) {\n  var directives = schema.getDirectives().filter(directiveFilter);\n  var typeMap = schema.getTypeMap();\n  var types = objectValues(typeMap).sort(function (type1, type2) {\n    return type1.name.localeCompare(type2.name);\n  }).filter(typeFilter);\n  return [printSchemaDefinition(schema)].concat(directives.map(function (directive) {\n    return printDirective(directive, options);\n  }), types.map(function (type) {\n    return printType(type, options);\n  })).filter(Boolean).join('\\n\\n') + '\\n';\n}\n\nfunction printSchemaDefinition(schema) {\n  if (isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  var operationTypes = [];\n  var queryType = schema.getQueryType();\n\n  if (queryType) {\n    operationTypes.push(\"  query: \".concat(queryType.name));\n  }\n\n  var mutationType = schema.getMutationType();\n\n  if (mutationType) {\n    operationTypes.push(\"  mutation: \".concat(mutationType.name));\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType) {\n    operationTypes.push(\"  subscription: \".concat(subscriptionType.name));\n  }\n\n  return \"schema {\\n\".concat(operationTypes.join('\\n'), \"\\n}\");\n}\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *   }\n *\n * When using this naming convention, the schema description can be omitted.\n */\n\n\nfunction isSchemaOfCommonNames(schema) {\n  var queryType = schema.getQueryType();\n\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  var mutationType = schema.getMutationType();\n\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nexport function printType(type, options) {\n  if (isScalarType(type)) {\n    return printScalar(type, options);\n  } else if (isObjectType(type)) {\n    return printObject(type, options);\n  } else if (isInterfaceType(type)) {\n    return printInterface(type, options);\n  } else if (isUnionType(type)) {\n    return printUnion(type, options);\n  } else if (isEnumType(type)) {\n    return printEnum(type, options);\n  } else if (isInputObjectType(type)) {\n    return printInputObject(type, options);\n  }\n  /* istanbul ignore next */\n\n\n  throw new Error(\"Unknown type: \".concat(type, \".\"));\n}\n\nfunction printScalar(type, options) {\n  return printDescription(options, type) + \"scalar \".concat(type.name);\n}\n\nfunction printObject(type, options) {\n  var interfaces = type.getInterfaces();\n  var implementedInterfaces = interfaces.length ? ' implements ' + interfaces.map(function (i) {\n    return i.name;\n  }).join(' & ') : '';\n  return printDescription(options, type) + \"type \".concat(type.name).concat(implementedInterfaces, \" {\\n\") + printFields(options, type) + '\\n' + '}';\n}\n\nfunction printInterface(type, options) {\n  return printDescription(options, type) + \"interface \".concat(type.name, \" {\\n\") + printFields(options, type) + '\\n' + '}';\n}\n\nfunction printUnion(type, options) {\n  return printDescription(options, type) + \"union \".concat(type.name, \" = \").concat(type.getTypes().join(' | '));\n}\n\nfunction printEnum(type, options) {\n  return printDescription(options, type) + \"enum \".concat(type.name, \" {\\n\") + printEnumValues(type.getValues(), options) + '\\n' + '}';\n}\n\nfunction printEnumValues(values, options) {\n  return values.map(function (value, i) {\n    return printDescription(options, value, '  ', !i) + '  ' + value.name + printDeprecated(value);\n  }).join('\\n');\n}\n\nfunction printInputObject(type, options) {\n  var fields = objectValues(type.getFields());\n  return printDescription(options, type) + \"input \".concat(type.name, \" {\\n\") + fields.map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + printInputValue(f);\n  }).join('\\n') + '\\n' + '}';\n}\n\nfunction printFields(options, type) {\n  var fields = objectValues(type.getFields());\n  return fields.map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + f.name + printArgs(options, f.args, '  ') + ': ' + String(f.type) + printDeprecated(f);\n  }).join('\\n');\n}\n\nfunction printArgs(options, args) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  if (args.length === 0) {\n    return '';\n  } // If every arg does not have a description, print them on one line.\n\n\n  if (args.every(function (arg) {\n    return !arg.description;\n  })) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return '(\\n' + args.map(function (arg, i) {\n    return printDescription(options, arg, '  ' + indentation, !i) + '  ' + indentation + printInputValue(arg);\n  }).join('\\n') + '\\n' + indentation + ')';\n}\n\nfunction printInputValue(arg) {\n  var argDecl = arg.name + ': ' + String(arg.type);\n\n  if (!isInvalid(arg.defaultValue)) {\n    argDecl += \" = \".concat(print(astFromValue(arg.defaultValue, arg.type)));\n  }\n\n  return argDecl;\n}\n\nfunction printDirective(directive, options) {\n  return printDescription(options, directive) + 'directive @' + directive.name + printArgs(options, directive.args) + ' on ' + directive.locations.join(' | ');\n}\n\nfunction printDeprecated(fieldOrEnumVal) {\n  if (!fieldOrEnumVal.isDeprecated) {\n    return '';\n  }\n\n  var reason = fieldOrEnumVal.deprecationReason;\n\n  if (isNullish(reason) || reason === '' || reason === DEFAULT_DEPRECATION_REASON) {\n    return ' @deprecated';\n  }\n\n  return ' @deprecated(reason: ' + print(astFromValue(reason, GraphQLString)) + ')';\n}\n\nfunction printDescription(options, def) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var firstInBlock = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n  if (!def.description) {\n    return '';\n  }\n\n  var lines = descriptionLines(def.description, 120 - indentation.length);\n\n  if (options && options.commentDescriptions) {\n    return printDescriptionWithComments(lines, indentation, firstInBlock);\n  }\n\n  var description = indentation && !firstInBlock ? '\\n' + indentation + '\"\"\"' : indentation + '\"\"\"'; // In some circumstances, a single line can be used for the description.\n\n  if (lines.length === 1 && lines[0].length < 70 && lines[0][lines[0].length - 1] !== '\"') {\n    return description + escapeQuote(lines[0]) + '\"\"\"\\n';\n  } // Format a multi-line block quote to account for leading space.\n\n\n  var hasLeadingSpace = lines[0][0] === ' ' || lines[0][0] === '\\t';\n\n  if (!hasLeadingSpace) {\n    description += '\\n';\n  }\n\n  for (var i = 0; i < lines.length; i++) {\n    if (i !== 0 || !hasLeadingSpace) {\n      description += indentation;\n    }\n\n    description += escapeQuote(lines[i]) + '\\n';\n  }\n\n  description += indentation + '\"\"\"\\n';\n  return description;\n}\n\nfunction escapeQuote(line) {\n  return line.replace(/\"\"\"/g, '\\\\\"\"\"');\n}\n\nfunction printDescriptionWithComments(lines, indentation, firstInBlock) {\n  var description = indentation && !firstInBlock ? '\\n' : '';\n\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i] === '') {\n      description += indentation + '#\\n';\n    } else {\n      description += indentation + '# ' + lines[i] + '\\n';\n    }\n  }\n\n  return description;\n}\n\nfunction descriptionLines(description, maxLen) {\n  var lines = [];\n  var rawLines = description.split('\\n');\n\n  for (var i = 0; i < rawLines.length; i++) {\n    if (rawLines[i] === '') {\n      lines.push(rawLines[i]);\n    } else {\n      // For > 120 character long lines, cut at space boundaries into sublines\n      // of ~80 chars.\n      var sublines = breakLine(rawLines[i], maxLen);\n\n      for (var j = 0; j < sublines.length; j++) {\n        lines.push(sublines[j]);\n      }\n    }\n  }\n\n  return lines;\n}\n\nfunction breakLine(line, maxLen) {\n  if (line.length < maxLen + 5) {\n    return [line];\n  }\n\n  var parts = line.split(new RegExp(\"((?: |^).{15,\".concat(maxLen - 40, \"}(?= |$))\")));\n\n  if (parts.length < 4) {\n    return [line];\n  }\n\n  var sublines = [parts[0] + parts[1] + parts[2]];\n\n  for (var i = 3; i < parts.length; i += 2) {\n    sublines.push(parts[i].slice(1) + parts[i + 1]);\n  }\n\n  return sublines;\n}","map":{"version":3,"sources":["/home/ec2-user/chime-voiceconnector-agent-assist/node_modules/graphql/utilities/schemaPrinter.mjs"],"names":["isNullish","isInvalid","objectValues","astFromValue","print","isScalarType","isObjectType","isInterfaceType","isUnionType","isEnumType","isInputObjectType","GraphQLString","isSpecifiedScalarType","GraphQLDirective","DEFAULT_DEPRECATION_REASON","isSpecifiedDirective","isIntrospectionType","printSchema","schema","options","printFilteredSchema","n","isDefinedType","printIntrospectionSchema","type","directiveFilter","typeFilter","directives","getDirectives","filter","typeMap","getTypeMap","types","sort","type1","type2","name","localeCompare","printSchemaDefinition","concat","map","directive","printDirective","printType","Boolean","join","isSchemaOfCommonNames","operationTypes","queryType","getQueryType","push","mutationType","getMutationType","subscriptionType","getSubscriptionType","printScalar","printObject","printInterface","printUnion","printEnum","printInputObject","Error","printDescription","interfaces","getInterfaces","implementedInterfaces","length","i","printFields","getTypes","printEnumValues","getValues","values","value","printDeprecated","fields","getFields","f","printInputValue","printArgs","args","String","indentation","arguments","undefined","every","arg","description","argDecl","defaultValue","locations","fieldOrEnumVal","isDeprecated","reason","deprecationReason","def","firstInBlock","lines","descriptionLines","commentDescriptions","printDescriptionWithComments","escapeQuote","hasLeadingSpace","line","replace","maxLen","rawLines","split","sublines","breakLine","j","parts","RegExp","slice"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport isNullish from '../jsutils/isNullish';\nimport isInvalid from '../jsutils/isInvalid';\nimport objectValues from '../jsutils/objectValues';\nimport { astFromValue } from '../utilities/astFromValue';\nimport { print } from '../language/printer';\nimport { isScalarType, isObjectType, isInterfaceType, isUnionType, isEnumType, isInputObjectType } from '../type/definition';\nimport { GraphQLString, isSpecifiedScalarType } from '../type/scalars';\nimport { GraphQLDirective, DEFAULT_DEPRECATION_REASON, isSpecifiedDirective } from '../type/directives';\nimport { isIntrospectionType } from '../type/introspection';\n\n/**\n * Accepts options as a second argument:\n *\n *    - commentDescriptions:\n *        Provide true to use preceding comments as the description.\n *\n */\nexport function printSchema(schema, options) {\n  return printFilteredSchema(schema, function (n) {\n    return !isSpecifiedDirective(n);\n  }, isDefinedType, options);\n}\nexport function printIntrospectionSchema(schema, options) {\n  return printFilteredSchema(schema, isSpecifiedDirective, isIntrospectionType, options);\n}\n\nfunction isDefinedType(type) {\n  return !isSpecifiedScalarType(type) && !isIntrospectionType(type);\n}\n\nfunction printFilteredSchema(schema, directiveFilter, typeFilter, options) {\n  var directives = schema.getDirectives().filter(directiveFilter);\n  var typeMap = schema.getTypeMap();\n  var types = objectValues(typeMap).sort(function (type1, type2) {\n    return type1.name.localeCompare(type2.name);\n  }).filter(typeFilter);\n  return [printSchemaDefinition(schema)].concat(directives.map(function (directive) {\n    return printDirective(directive, options);\n  }), types.map(function (type) {\n    return printType(type, options);\n  })).filter(Boolean).join('\\n\\n') + '\\n';\n}\n\nfunction printSchemaDefinition(schema) {\n  if (isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  var operationTypes = [];\n  var queryType = schema.getQueryType();\n\n  if (queryType) {\n    operationTypes.push(\"  query: \".concat(queryType.name));\n  }\n\n  var mutationType = schema.getMutationType();\n\n  if (mutationType) {\n    operationTypes.push(\"  mutation: \".concat(mutationType.name));\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType) {\n    operationTypes.push(\"  subscription: \".concat(subscriptionType.name));\n  }\n\n  return \"schema {\\n\".concat(operationTypes.join('\\n'), \"\\n}\");\n}\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *   }\n *\n * When using this naming convention, the schema description can be omitted.\n */\n\n\nfunction isSchemaOfCommonNames(schema) {\n  var queryType = schema.getQueryType();\n\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  var mutationType = schema.getMutationType();\n\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  var subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nexport function printType(type, options) {\n  if (isScalarType(type)) {\n    return printScalar(type, options);\n  } else if (isObjectType(type)) {\n    return printObject(type, options);\n  } else if (isInterfaceType(type)) {\n    return printInterface(type, options);\n  } else if (isUnionType(type)) {\n    return printUnion(type, options);\n  } else if (isEnumType(type)) {\n    return printEnum(type, options);\n  } else if (isInputObjectType(type)) {\n    return printInputObject(type, options);\n  }\n  /* istanbul ignore next */\n\n\n  throw new Error(\"Unknown type: \".concat(type, \".\"));\n}\n\nfunction printScalar(type, options) {\n  return printDescription(options, type) + \"scalar \".concat(type.name);\n}\n\nfunction printObject(type, options) {\n  var interfaces = type.getInterfaces();\n  var implementedInterfaces = interfaces.length ? ' implements ' + interfaces.map(function (i) {\n    return i.name;\n  }).join(' & ') : '';\n  return printDescription(options, type) + \"type \".concat(type.name).concat(implementedInterfaces, \" {\\n\") + printFields(options, type) + '\\n' + '}';\n}\n\nfunction printInterface(type, options) {\n  return printDescription(options, type) + \"interface \".concat(type.name, \" {\\n\") + printFields(options, type) + '\\n' + '}';\n}\n\nfunction printUnion(type, options) {\n  return printDescription(options, type) + \"union \".concat(type.name, \" = \").concat(type.getTypes().join(' | '));\n}\n\nfunction printEnum(type, options) {\n  return printDescription(options, type) + \"enum \".concat(type.name, \" {\\n\") + printEnumValues(type.getValues(), options) + '\\n' + '}';\n}\n\nfunction printEnumValues(values, options) {\n  return values.map(function (value, i) {\n    return printDescription(options, value, '  ', !i) + '  ' + value.name + printDeprecated(value);\n  }).join('\\n');\n}\n\nfunction printInputObject(type, options) {\n  var fields = objectValues(type.getFields());\n  return printDescription(options, type) + \"input \".concat(type.name, \" {\\n\") + fields.map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + printInputValue(f);\n  }).join('\\n') + '\\n' + '}';\n}\n\nfunction printFields(options, type) {\n  var fields = objectValues(type.getFields());\n  return fields.map(function (f, i) {\n    return printDescription(options, f, '  ', !i) + '  ' + f.name + printArgs(options, f.args, '  ') + ': ' + String(f.type) + printDeprecated(f);\n  }).join('\\n');\n}\n\nfunction printArgs(options, args) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  if (args.length === 0) {\n    return '';\n  } // If every arg does not have a description, print them on one line.\n\n\n  if (args.every(function (arg) {\n    return !arg.description;\n  })) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return '(\\n' + args.map(function (arg, i) {\n    return printDescription(options, arg, '  ' + indentation, !i) + '  ' + indentation + printInputValue(arg);\n  }).join('\\n') + '\\n' + indentation + ')';\n}\n\nfunction printInputValue(arg) {\n  var argDecl = arg.name + ': ' + String(arg.type);\n\n  if (!isInvalid(arg.defaultValue)) {\n    argDecl += \" = \".concat(print(astFromValue(arg.defaultValue, arg.type)));\n  }\n\n  return argDecl;\n}\n\nfunction printDirective(directive, options) {\n  return printDescription(options, directive) + 'directive @' + directive.name + printArgs(options, directive.args) + ' on ' + directive.locations.join(' | ');\n}\n\nfunction printDeprecated(fieldOrEnumVal) {\n  if (!fieldOrEnumVal.isDeprecated) {\n    return '';\n  }\n\n  var reason = fieldOrEnumVal.deprecationReason;\n\n  if (isNullish(reason) || reason === '' || reason === DEFAULT_DEPRECATION_REASON) {\n    return ' @deprecated';\n  }\n\n  return ' @deprecated(reason: ' + print(astFromValue(reason, GraphQLString)) + ')';\n}\n\nfunction printDescription(options, def) {\n  var indentation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var firstInBlock = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n  if (!def.description) {\n    return '';\n  }\n\n  var lines = descriptionLines(def.description, 120 - indentation.length);\n\n  if (options && options.commentDescriptions) {\n    return printDescriptionWithComments(lines, indentation, firstInBlock);\n  }\n\n  var description = indentation && !firstInBlock ? '\\n' + indentation + '\"\"\"' : indentation + '\"\"\"'; // In some circumstances, a single line can be used for the description.\n\n  if (lines.length === 1 && lines[0].length < 70 && lines[0][lines[0].length - 1] !== '\"') {\n    return description + escapeQuote(lines[0]) + '\"\"\"\\n';\n  } // Format a multi-line block quote to account for leading space.\n\n\n  var hasLeadingSpace = lines[0][0] === ' ' || lines[0][0] === '\\t';\n\n  if (!hasLeadingSpace) {\n    description += '\\n';\n  }\n\n  for (var i = 0; i < lines.length; i++) {\n    if (i !== 0 || !hasLeadingSpace) {\n      description += indentation;\n    }\n\n    description += escapeQuote(lines[i]) + '\\n';\n  }\n\n  description += indentation + '\"\"\"\\n';\n  return description;\n}\n\nfunction escapeQuote(line) {\n  return line.replace(/\"\"\"/g, '\\\\\"\"\"');\n}\n\nfunction printDescriptionWithComments(lines, indentation, firstInBlock) {\n  var description = indentation && !firstInBlock ? '\\n' : '';\n\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i] === '') {\n      description += indentation + '#\\n';\n    } else {\n      description += indentation + '# ' + lines[i] + '\\n';\n    }\n  }\n\n  return description;\n}\n\nfunction descriptionLines(description, maxLen) {\n  var lines = [];\n  var rawLines = description.split('\\n');\n\n  for (var i = 0; i < rawLines.length; i++) {\n    if (rawLines[i] === '') {\n      lines.push(rawLines[i]);\n    } else {\n      // For > 120 character long lines, cut at space boundaries into sublines\n      // of ~80 chars.\n      var sublines = breakLine(rawLines[i], maxLen);\n\n      for (var j = 0; j < sublines.length; j++) {\n        lines.push(sublines[j]);\n      }\n    }\n  }\n\n  return lines;\n}\n\nfunction breakLine(line, maxLen) {\n  if (line.length < maxLen + 5) {\n    return [line];\n  }\n\n  var parts = line.split(new RegExp(\"((?: |^).{15,\".concat(maxLen - 40, \"}(?= |$))\")));\n\n  if (parts.length < 4) {\n    return [line];\n  }\n\n  var sublines = [parts[0] + parts[1] + parts[2]];\n\n  for (var i = 3; i < parts.length; i += 2) {\n    sublines.push(parts[i].slice(1) + parts[i + 1]);\n  }\n\n  return sublines;\n}"]},"metadata":{},"sourceType":"module"}