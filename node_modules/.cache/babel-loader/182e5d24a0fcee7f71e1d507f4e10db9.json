{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT-0\nimport React from'react';import ExpansionPanel from'@material-ui/core/ExpansionPanel';import ExpansionPanelSummary from'@material-ui/core/ExpansionPanelSummary';import ExpansionPanelDetails from'@material-ui/core/ExpansionPanelDetails';import Typography from'@material-ui/core/Typography';import ExpandMoreIcon from'@material-ui/icons/ExpandMore';import Avatar from'@material-ui/core/Avatar';import CallReceivedIcon from'@material-ui/icons/CallReceived';import CallMadeIcon from'@material-ui/icons/CallMade';import FormControlLabel from'@material-ui/core/FormControlLabel';import Switch from'@material-ui/core/Switch';import moment from'moment/moment';import{getSignedUrl,retrieveBucketAndKey,retrieveTranscriptForTransactionId}from'../utils/elasticsearch';import{mergeTranscript}from'../utils/transcript';import{getMergedAudioURL}from'../utils/audio';import'../styles/StreamingRecord.css';class StreamingRecord extends React.Component{constructor(props){super(props);this.onExpand=(event,expanded)=>{if(expanded===true&&(this.state.agentLegAudioUrl===undefined||this.state.callerLegAudioUrl===undefined)){retrieveBucketAndKey(this.state.metadata.TransactionId).then(pairs=>{if(pairs.length===0){return;}const urlPromise=pairs.map(pair=>{if(pair.Bucket===undefined||pair.Key===undefined||pair.Time===undefined){return undefined;}return getSignedUrl(pair.Bucket,pair.Key);});Promise.all(urlPromise).then(urls=>{this.setState({callerLegAudioUrl:urls[0],agentLegAudioUrl:urls[1]});});if(this.state.mergedAudioUrl===undefined){const bucket=pairs[0].Bucket,oneAudioObject=pairs[0],otherAudioObject=pairs[1];getMergedAudioURL(bucket,oneAudioObject,otherAudioObject,this.state.metadata.TransactionId).then(url=>{this.setState({mergedAudioUrl:url});});}});}};this.onSwitchChange=event=>{this.setState({requireMerged:event.target.checked});};this.state={metadata:this.props.metadata,transcript:[],requireMerged:false,keyword:this.props.keyword};}updateTranscript(){retrieveTranscriptForTransactionId(this.state.metadata.TransactionId).then(segments=>{this.setState({transcript:mergeTranscript(segments)});});}componentDidMount(){this.updateTranscript();}render(){const getSubContent=()=>{if(this.state.transcript===undefined){return'(waiting for transcript retrivement...)';}else if(this.state.transcript.length===0){return'Cannot translate the streaming audio';}else{return this.state.transcript[0].Transcript+' (click for more)';}};const highlightTranscript=(speaker,lines,keywords)=>{const style={backgroundColor:'wheat'};return/*#__PURE__*/React.createElement(Typography,null,' ',speaker==='spk_0'?'Caller: ':'Agent: ',lines.split(' ').map(word=>{const match=keywords.split(' ').map(keyword=>{if(keyword===''){return false;}// keyword only allows number, letter(lowercase and upper).\nconst matchedKeyword=new RegExp(\"[0-9a-zA-Z,?.' ]+\",'i').exec(keyword)[0];// i.e. keyword is apple, 'apple.', 'apple', 'Apple' are allowed.\nconst regex=new RegExp(matchedKeyword+'[,.?]?$','i');if(regex.test(word)){return true;}return false;}).reduce((e1,e2)=>e1||e2);if(match===true){return/*#__PURE__*/React.createElement(\"span\",{style:style},word,\" \");}else{return word+' ';}}));};const getDetail=()=>{if(this.state.transcript===undefined){return/*#__PURE__*/React.createElement(Typography,null,\" (Retrieving transcripts ...) \");}else if(this.state.transcript.length===0){return/*#__PURE__*/React.createElement(\"div\",{className:\"transcript\"},/*#__PURE__*/React.createElement(Typography,null,\"Transcript is not applicable\"));}else{return/*#__PURE__*/React.createElement(\"div\",{className:\"transcript\"},this.state.transcript.map(tr=>{return highlightTranscript(tr.Speaker,tr.Transcript,this.state.keyword);}));}};const getDateAndDuration=()=>{const formatDuration=diffSeconds=>{const duration=moment.duration(diffSeconds,'seconds');let formatString='H[h] m[m] s[s]';if(duration.asSeconds()<3600){formatString='m[m] s[s]';}return moment.utc(duration.asMilliseconds()).format(formatString);};if(this.state.metadata.EndTimeEpochSeconds===undefined){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,{className:\"third-heading\"},\"In Call\"));}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,{className:\"third-heading\"},moment.unix(this.state.metadata.StartTimeEpochSeconds).fromNow())),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Typography,{className:\"third-heading\"},formatDuration(this.state.metadata.EndTimeEpochSeconds-this.state.metadata.StartTimeEpochSeconds))));};const getMergedSwitch=()=>{return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(FormControlLabel,{control:/*#__PURE__*/React.createElement(Switch,{size:\"small\",checked:this.state.requireMerged,onChange:this.onSwitchChange}),label:\"Merge audio?\"}));};const getAudio=()=>{if(!this.state.requireMerged){return/*#__PURE__*/React.createElement(\"div\",{className:\"audio\"},/*#__PURE__*/React.createElement(\"div\",{className:\"caller-leg\"},/*#__PURE__*/React.createElement(\"p\",null,\"Caller leg\"),this.state.callerLegAudioUrl!==undefined?/*#__PURE__*/React.createElement(\"audio\",{controls:true,volume:\"0.1\",id:\"audio\",className:\"stream-audio\",src:this.state.callerLegAudioUrl}):/*#__PURE__*/React.createElement(Typography,null,\" Caller streaming audio is not applicable\")),/*#__PURE__*/React.createElement(\"div\",{className:\"agent-leg\"},/*#__PURE__*/React.createElement(\"p\",null,\"Agent leg\"),this.state.agentLegAudioUrl!==undefined?/*#__PURE__*/React.createElement(\"audio\",{controls:true,volume:\"0.1\",id:\"audio\",className:\"stream-audio\",src:this.state.agentLegAudioUrl}):/*#__PURE__*/React.createElement(Typography,null,\" Agent streaming audio is not applicable\")));}else{return/*#__PURE__*/React.createElement(\"div\",{className:\"audio\"},/*#__PURE__*/React.createElement(\"div\",{className:\"merged-audio\"},/*#__PURE__*/React.createElement(\"p\",null,\"Merged Audio\"),this.state.mergedAudioUrl!==undefined?/*#__PURE__*/React.createElement(\"audio\",{controls:true,volume:\"0.1\",id:\"audio\",className:\"stream-audio\",src:this.state.mergedAudioUrl}):/*#__PURE__*/React.createElement(Typography,null,\" Merged streaming audio is not applicable\")));}};return/*#__PURE__*/React.createElement(\"div\",{className:\"root\"},/*#__PURE__*/React.createElement(ExpansionPanel,{onChange:this.onExpand},/*#__PURE__*/React.createElement(ExpansionPanelSummary,{expandIcon:/*#__PURE__*/React.createElement(ExpandMoreIcon,null),\"aria-controls\":\"panel1a-content\",id:\"panel1a-header\"},/*#__PURE__*/React.createElement(\"div\",{className:\"avater-col\"},/*#__PURE__*/React.createElement(Avatar,null,this.state.metadata.Direction==='Inbound'?/*#__PURE__*/React.createElement(CallReceivedIcon,null):/*#__PURE__*/React.createElement(CallMadeIcon,null))),/*#__PURE__*/React.createElement(\"div\",{className:\"main-col\"},/*#__PURE__*/React.createElement(\"div\",{className:\"number-header-row\"},/*#__PURE__*/React.createElement(Typography,{className:\"number-header\"},\"From: \",this.state.metadata.SourcePhoneNumber)),/*#__PURE__*/React.createElement(\"div\",{className:\"sub-content-row\"},/*#__PURE__*/React.createElement(Typography,{className:\"sub-content\"},getSubContent()))),/*#__PURE__*/React.createElement(\"div\",{className:\"right-col\"},getDateAndDuration())),/*#__PURE__*/React.createElement(ExpansionPanelDetails,null,/*#__PURE__*/React.createElement(\"div\",{className:\"panel-detail\"},getDetail(),getMergedSwitch(),getAudio()))));}}export default StreamingRecord;","map":{"version":3,"sources":["/home/ec2-user/chime-voiceconnector-agent-assist/src/search/StreamingRecord.js"],"names":["React","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","Typography","ExpandMoreIcon","Avatar","CallReceivedIcon","CallMadeIcon","FormControlLabel","Switch","moment","getSignedUrl","retrieveBucketAndKey","retrieveTranscriptForTransactionId","mergeTranscript","getMergedAudioURL","StreamingRecord","Component","constructor","props","onExpand","event","expanded","state","agentLegAudioUrl","undefined","callerLegAudioUrl","metadata","TransactionId","then","pairs","length","urlPromise","map","pair","Bucket","Key","Time","Promise","all","urls","setState","mergedAudioUrl","bucket","oneAudioObject","otherAudioObject","url","onSwitchChange","requireMerged","target","checked","transcript","keyword","updateTranscript","segments","componentDidMount","render","getSubContent","Transcript","highlightTranscript","speaker","lines","keywords","style","backgroundColor","split","word","match","matchedKeyword","RegExp","exec","regex","test","reduce","e1","e2","getDetail","tr","Speaker","getDateAndDuration","formatDuration","diffSeconds","duration","formatString","asSeconds","utc","asMilliseconds","format","EndTimeEpochSeconds","unix","StartTimeEpochSeconds","fromNow","getMergedSwitch","getAudio","Direction","SourcePhoneNumber"],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT-0\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Avatar from '@material-ui/core/Avatar';\nimport CallReceivedIcon from '@material-ui/icons/CallReceived';\nimport CallMadeIcon from '@material-ui/icons/CallMade';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport moment from 'moment/moment';\n\nimport {\n  getSignedUrl,\n  retrieveBucketAndKey,\n  retrieveTranscriptForTransactionId,\n} from '../utils/elasticsearch';\nimport { mergeTranscript } from '../utils/transcript';\nimport { getMergedAudioURL } from '../utils/audio';\nimport '../styles/StreamingRecord.css';\n\nclass StreamingRecord extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      metadata: this.props.metadata,\n      transcript: [],\n      requireMerged: false,\n      keyword: this.props.keyword,\n    };\n  }\n\n  updateTranscript() {\n    retrieveTranscriptForTransactionId(this.state.metadata.TransactionId).then(segments => {\n      this.setState({ transcript: mergeTranscript(segments) });\n    });\n  }\n\n  componentDidMount() {\n    this.updateTranscript();\n  }\n\n  onExpand = (event, expanded) => {\n    if (\n      expanded === true &&\n      (this.state.agentLegAudioUrl === undefined || this.state.callerLegAudioUrl === undefined)\n    ) {\n      retrieveBucketAndKey(this.state.metadata.TransactionId).then(pairs => {\n        if (pairs.length === 0) {\n          return;\n        }\n\n        const urlPromise = pairs.map(pair => {\n          if (pair.Bucket === undefined || pair.Key === undefined || pair.Time === undefined) {\n            return undefined;\n          }\n\n          return getSignedUrl(pair.Bucket, pair.Key);\n        });\n\n        Promise.all(urlPromise).then(urls => {\n          this.setState({ callerLegAudioUrl: urls[0], agentLegAudioUrl: urls[1] });\n        });\n\n        if (this.state.mergedAudioUrl === undefined) {\n          const bucket = pairs[0].Bucket,\n            oneAudioObject = pairs[0],\n            otherAudioObject = pairs[1];\n          getMergedAudioURL(\n            bucket,\n            oneAudioObject,\n            otherAudioObject,\n            this.state.metadata.TransactionId\n          ).then(url => {\n            this.setState({ mergedAudioUrl: url });\n          });\n        }\n      });\n    }\n  };\n\n  onSwitchChange = event => {\n    this.setState({ requireMerged: event.target.checked });\n  };\n\n  render() {\n    const getSubContent = () => {\n      if (this.state.transcript === undefined) {\n        return '(waiting for transcript retrivement...)';\n      } else if (this.state.transcript.length === 0) {\n        return 'Cannot translate the streaming audio';\n      } else {\n        return this.state.transcript[0].Transcript + ' (click for more)';\n      }\n    };\n\n    const highlightTranscript = (speaker, lines, keywords) => {\n      const style = {\n        backgroundColor: 'wheat',\n      };\n      return (\n        <Typography>\n          {' '}\n          {speaker === 'spk_0' ? 'Caller: ' : 'Agent: '}\n          {lines.split(' ').map(word => {\n            const match = keywords\n              .split(' ')\n              .map(keyword => {\n                if (keyword === '') {\n                  return false;\n                }\n\n                // keyword only allows number, letter(lowercase and upper).\n                const matchedKeyword = new RegExp(\"[0-9a-zA-Z,?.' ]+\", 'i').exec(keyword)[0];\n\n                // i.e. keyword is apple, 'apple.', 'apple', 'Apple' are allowed.\n                const regex = new RegExp(matchedKeyword + '[,.?]?$', 'i');\n                if (regex.test(word)) {\n                  return true;\n                }\n                return false;\n              })\n              .reduce((e1, e2) => e1 || e2);\n\n            if (match === true) {\n              return <span style={style}>{word} </span>;\n            } else {\n              return word + ' ';\n            }\n          })}\n        </Typography>\n      );\n    };\n\n    const getDetail = () => {\n      if (this.state.transcript === undefined) {\n        return <Typography> (Retrieving transcripts ...) </Typography>;\n      } else if (this.state.transcript.length === 0) {\n        return (\n          <div className=\"transcript\">\n            <Typography>Transcript is not applicable</Typography>\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"transcript\">\n            {this.state.transcript.map(tr => {\n              return highlightTranscript(tr.Speaker, tr.Transcript, this.state.keyword);\n            })}\n          </div>\n        );\n      }\n    };\n\n    const getDateAndDuration = () => {\n      const formatDuration = diffSeconds => {\n        const duration = moment.duration(diffSeconds, 'seconds');\n        let formatString = 'H[h] m[m] s[s]';\n        if (duration.asSeconds() < 3600) {\n          formatString = 'm[m] s[s]';\n        }\n        return moment.utc(duration.asMilliseconds()).format(formatString);\n      };\n\n      if (this.state.metadata.EndTimeEpochSeconds === undefined) {\n        return (\n          <div>\n            <Typography className=\"third-heading\">In Call</Typography>\n          </div>\n        );\n      }\n\n      return (\n        <div>\n          <div>\n            <Typography className=\"third-heading\">\n              {moment.unix(this.state.metadata.StartTimeEpochSeconds).fromNow()}\n            </Typography>\n          </div>\n          <div>\n            <Typography className=\"third-heading\">\n              {formatDuration(\n                this.state.metadata.EndTimeEpochSeconds - this.state.metadata.StartTimeEpochSeconds\n              )}\n            </Typography>\n          </div>\n        </div>\n      );\n    };\n\n    const getMergedSwitch = () => {\n      return (\n        <div>\n          <FormControlLabel\n            control={\n              <Switch\n                size=\"small\"\n                checked={this.state.requireMerged}\n                onChange={this.onSwitchChange}\n              />\n            }\n            label=\"Merge audio?\"\n          />\n        </div>\n      );\n    };\n\n    const getAudio = () => {\n      if (!this.state.requireMerged) {\n        return (\n          <div className=\"audio\">\n            <div className=\"caller-leg\">\n              <p>Caller leg</p>\n              {this.state.callerLegAudioUrl !== undefined ? (\n                <audio\n                  controls\n                  volume=\"0.1\"\n                  id=\"audio\"\n                  className=\"stream-audio\"\n                  src={this.state.callerLegAudioUrl}\n                />\n              ) : (\n                <Typography> Caller streaming audio is not applicable</Typography>\n              )}\n            </div>\n            <div className=\"agent-leg\">\n              <p>Agent leg</p>\n              {this.state.agentLegAudioUrl !== undefined ? (\n                <audio\n                  controls\n                  volume=\"0.1\"\n                  id=\"audio\"\n                  className=\"stream-audio\"\n                  src={this.state.agentLegAudioUrl}\n                />\n              ) : (\n                <Typography> Agent streaming audio is not applicable</Typography>\n              )}\n            </div>\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"audio\">\n            <div className=\"merged-audio\">\n              <p>Merged Audio</p>\n              {this.state.mergedAudioUrl !== undefined ? (\n                <audio\n                  controls\n                  volume=\"0.1\"\n                  id=\"audio\"\n                  className=\"stream-audio\"\n                  src={this.state.mergedAudioUrl}\n                />\n              ) : (\n                <Typography> Merged streaming audio is not applicable</Typography>\n              )}\n            </div>\n          </div>\n        );\n      }\n    };\n\n    return (\n      <div className=\"root\">\n        <ExpansionPanel onChange={this.onExpand}>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <div className=\"avater-col\">\n              <Avatar>\n                {this.state.metadata.Direction === 'Inbound' ? (\n                  <CallReceivedIcon />\n                ) : (\n                  <CallMadeIcon />\n                )}\n              </Avatar>\n            </div>\n            <div className=\"main-col\">\n              <div className=\"number-header-row\">\n                <Typography className=\"number-header\">\n                  From: {this.state.metadata.SourcePhoneNumber}\n                </Typography>\n              </div>\n              <div className=\"sub-content-row\">\n                <Typography className=\"sub-content\">{getSubContent()}</Typography>\n              </div>\n            </div>\n            <div className=\"right-col\">{getDateAndDuration()}</div>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <div className=\"panel-detail\">\n              {getDetail()}\n              {getMergedSwitch()}\n              {getAudio()}\n            </div>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </div>\n    );\n  }\n}\n\nStreamingRecord.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default StreamingRecord;\n"]},"metadata":{},"sourceType":"module"}