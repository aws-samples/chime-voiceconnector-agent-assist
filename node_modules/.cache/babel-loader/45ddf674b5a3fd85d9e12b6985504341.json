{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar LinkedListNode =\n/** @class */\nfunction () {\n  function LinkedListNode(key, value) {\n    this.key = key;\n    this.value = value;\n  }\n\n  return LinkedListNode;\n}();\n\nvar LRUCache =\n/** @class */\nfunction () {\n  function LRUCache(size) {\n    this.nodeMap = {};\n    this.size = 0;\n\n    if (typeof size !== 'number' || size < 1) {\n      throw new Error('Cache size can only be positive number');\n    }\n\n    this.sizeLimit = size;\n  }\n\n  Object.defineProperty(LRUCache.prototype, \"length\", {\n    get: function get() {\n      return this.size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  LRUCache.prototype.prependToList = function (node) {\n    if (!this.headerNode) {\n      this.tailNode = node;\n    } else {\n      this.headerNode.prev = node;\n      node.next = this.headerNode;\n    }\n\n    this.headerNode = node;\n    this.size++;\n  };\n\n  LRUCache.prototype.removeFromTail = function () {\n    if (!this.tailNode) {\n      return undefined;\n    }\n\n    var node = this.tailNode;\n    var prevNode = node.prev;\n\n    if (prevNode) {\n      prevNode.next = undefined;\n    }\n\n    node.prev = undefined;\n    this.tailNode = prevNode;\n    this.size--;\n    return node;\n  };\n\n  LRUCache.prototype.detachFromList = function (node) {\n    if (this.headerNode === node) {\n      this.headerNode = node.next;\n    }\n\n    if (this.tailNode === node) {\n      this.tailNode = node.prev;\n    }\n\n    if (node.prev) {\n      node.prev.next = node.next;\n    }\n\n    if (node.next) {\n      node.next.prev = node.prev;\n    }\n\n    node.next = undefined;\n    node.prev = undefined;\n    this.size--;\n  };\n\n  LRUCache.prototype.get = function (key) {\n    if (this.nodeMap[key]) {\n      var node = this.nodeMap[key];\n      this.detachFromList(node);\n      this.prependToList(node);\n      return node.value;\n    }\n  };\n\n  LRUCache.prototype.remove = function (key) {\n    if (this.nodeMap[key]) {\n      var node = this.nodeMap[key];\n      this.detachFromList(node);\n      delete this.nodeMap[key];\n    }\n  };\n\n  LRUCache.prototype.put = function (key, value) {\n    if (this.nodeMap[key]) {\n      this.remove(key);\n    } else if (this.size === this.sizeLimit) {\n      var tailNode = this.removeFromTail();\n      var key_1 = tailNode.key;\n      delete this.nodeMap[key_1];\n    }\n\n    var newNode = new LinkedListNode(key, value);\n    this.nodeMap[key] = newNode;\n    this.prependToList(newNode);\n  };\n\n  LRUCache.prototype.empty = function () {\n    var keys = Object.keys(this.nodeMap);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var node = this.nodeMap[key];\n      this.detachFromList(node);\n      delete this.nodeMap[key];\n    }\n  };\n\n  return LRUCache;\n}();\n\nexports.LRUCache = LRUCache;","map":{"version":3,"sources":["/home/ec2-user/chime-voiceconnector-agent-assist/node_modules/aws-sdk/vendor/endpoint-cache/utils/LRU.js"],"names":["Object","defineProperty","exports","value","LinkedListNode","key","LRUCache","size","nodeMap","Error","sizeLimit","prototype","get","enumerable","configurable","prependToList","node","headerNode","tailNode","prev","next","removeFromTail","undefined","prevNode","detachFromList","remove","put","key_1","newNode","empty","keys","i","length"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LinkedListNode = /** @class */ (function () {\n    function LinkedListNode(key, value) {\n        this.key = key;\n        this.value = value;\n    }\n    return LinkedListNode;\n}());\nvar LRUCache = /** @class */ (function () {\n    function LRUCache(size) {\n        this.nodeMap = {};\n        this.size = 0;\n        if (typeof size !== 'number' || size < 1) {\n            throw new Error('Cache size can only be positive number');\n        }\n        this.sizeLimit = size;\n    }\n    Object.defineProperty(LRUCache.prototype, \"length\", {\n        get: function () {\n            return this.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LRUCache.prototype.prependToList = function (node) {\n        if (!this.headerNode) {\n            this.tailNode = node;\n        }\n        else {\n            this.headerNode.prev = node;\n            node.next = this.headerNode;\n        }\n        this.headerNode = node;\n        this.size++;\n    };\n    LRUCache.prototype.removeFromTail = function () {\n        if (!this.tailNode) {\n            return undefined;\n        }\n        var node = this.tailNode;\n        var prevNode = node.prev;\n        if (prevNode) {\n            prevNode.next = undefined;\n        }\n        node.prev = undefined;\n        this.tailNode = prevNode;\n        this.size--;\n        return node;\n    };\n    LRUCache.prototype.detachFromList = function (node) {\n        if (this.headerNode === node) {\n            this.headerNode = node.next;\n        }\n        if (this.tailNode === node) {\n            this.tailNode = node.prev;\n        }\n        if (node.prev) {\n            node.prev.next = node.next;\n        }\n        if (node.next) {\n            node.next.prev = node.prev;\n        }\n        node.next = undefined;\n        node.prev = undefined;\n        this.size--;\n    };\n    LRUCache.prototype.get = function (key) {\n        if (this.nodeMap[key]) {\n            var node = this.nodeMap[key];\n            this.detachFromList(node);\n            this.prependToList(node);\n            return node.value;\n        }\n    };\n    LRUCache.prototype.remove = function (key) {\n        if (this.nodeMap[key]) {\n            var node = this.nodeMap[key];\n            this.detachFromList(node);\n            delete this.nodeMap[key];\n        }\n    };\n    LRUCache.prototype.put = function (key, value) {\n        if (this.nodeMap[key]) {\n            this.remove(key);\n        }\n        else if (this.size === this.sizeLimit) {\n            var tailNode = this.removeFromTail();\n            var key_1 = tailNode.key;\n            delete this.nodeMap[key_1];\n        }\n        var newNode = new LinkedListNode(key, value);\n        this.nodeMap[key] = newNode;\n        this.prependToList(newNode);\n    };\n    LRUCache.prototype.empty = function () {\n        var keys = Object.keys(this.nodeMap);\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var node = this.nodeMap[key];\n            this.detachFromList(node);\n            delete this.nodeMap[key];\n        }\n    };\n    return LRUCache;\n}());\nexports.LRUCache = LRUCache;"]},"metadata":{},"sourceType":"script"}