{"ast":null,"code":"var util = require('../util');\n\nvar populateHostPrefix = require('./helpers').populateHostPrefix;\n\nfunction populateMethod(req) {\n  req.httpRequest.method = req.service.api.operations[req.operation].httpMethod;\n}\n\nfunction generateURI(endpointPath, operationPath, input, params) {\n  var uri = [endpointPath, operationPath].join('/');\n  uri = uri.replace(/\\/+/g, '/');\n  var queryString = {},\n      queryStringSet = false;\n  util.each(input.members, function (name, member) {\n    var paramValue = params[name];\n    if (paramValue === null || paramValue === undefined) return;\n\n    if (member.location === 'uri') {\n      var regex = new RegExp('\\\\{' + member.name + '(\\\\+)?\\\\}');\n      uri = uri.replace(regex, function (_, plus) {\n        var fn = plus ? util.uriEscapePath : util.uriEscape;\n        return fn(String(paramValue));\n      });\n    } else if (member.location === 'querystring') {\n      queryStringSet = true;\n\n      if (member.type === 'list') {\n        queryString[member.name] = paramValue.map(function (val) {\n          return util.uriEscape(member.member.toWireFormat(val).toString());\n        });\n      } else if (member.type === 'map') {\n        util.each(paramValue, function (key, value) {\n          if (Array.isArray(value)) {\n            queryString[key] = value.map(function (val) {\n              return util.uriEscape(String(val));\n            });\n          } else {\n            queryString[key] = util.uriEscape(String(value));\n          }\n        });\n      } else {\n        queryString[member.name] = util.uriEscape(member.toWireFormat(paramValue).toString());\n      }\n    }\n  });\n\n  if (queryStringSet) {\n    uri += uri.indexOf('?') >= 0 ? '&' : '?';\n    var parts = [];\n    util.arrayEach(Object.keys(queryString).sort(), function (key) {\n      if (!Array.isArray(queryString[key])) {\n        queryString[key] = [queryString[key]];\n      }\n\n      for (var i = 0; i < queryString[key].length; i++) {\n        parts.push(util.uriEscape(String(key)) + '=' + queryString[key][i]);\n      }\n    });\n    uri += parts.join('&');\n  }\n\n  return uri;\n}\n\nfunction populateURI(req) {\n  var operation = req.service.api.operations[req.operation];\n  var input = operation.input;\n  var uri = generateURI(req.httpRequest.endpoint.path, operation.httpPath, input, req.params);\n  req.httpRequest.path = uri;\n}\n\nfunction populateHeaders(req) {\n  var operation = req.service.api.operations[req.operation];\n  util.each(operation.input.members, function (name, member) {\n    var value = req.params[name];\n    if (value === null || value === undefined) return;\n\n    if (member.location === 'headers' && member.type === 'map') {\n      util.each(value, function (key, memberValue) {\n        req.httpRequest.headers[member.name + key] = memberValue;\n      });\n    } else if (member.location === 'header') {\n      value = member.toWireFormat(value).toString();\n\n      if (member.isJsonValue) {\n        value = util.base64.encode(value);\n      }\n\n      req.httpRequest.headers[member.name] = value;\n    }\n  });\n}\n\nfunction buildRequest(req) {\n  populateMethod(req);\n  populateURI(req);\n  populateHeaders(req);\n  populateHostPrefix(req);\n}\n\nfunction extractError() {}\n\nfunction extractData(resp) {\n  var req = resp.request;\n  var data = {};\n  var r = resp.httpResponse;\n  var operation = req.service.api.operations[req.operation];\n  var output = operation.output; // normalize headers names to lower-cased keys for matching\n\n  var headers = {};\n  util.each(r.headers, function (k, v) {\n    headers[k.toLowerCase()] = v;\n  });\n  util.each(output.members, function (name, member) {\n    var header = (member.name || name).toLowerCase();\n\n    if (member.location === 'headers' && member.type === 'map') {\n      data[name] = {};\n      var location = member.isLocationName ? member.name : '';\n      var pattern = new RegExp('^' + location + '(.+)', 'i');\n      util.each(r.headers, function (k, v) {\n        var result = k.match(pattern);\n\n        if (result !== null) {\n          data[name][result[1]] = v;\n        }\n      });\n    } else if (member.location === 'header') {\n      if (headers[header] !== undefined) {\n        var value = member.isJsonValue ? util.base64.decode(headers[header]) : headers[header];\n        data[name] = member.toType(value);\n      }\n    } else if (member.location === 'statusCode') {\n      data[name] = parseInt(r.statusCode, 10);\n    }\n  });\n  resp.data = data;\n}\n/**\n * @api private\n */\n\n\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData,\n  generateURI: generateURI\n};","map":{"version":3,"sources":["/home/ec2-user/chime-voiceconnector-agent-assist/node_modules/aws-sdk/lib/protocol/rest.js"],"names":["util","require","populateHostPrefix","populateMethod","req","httpRequest","method","service","api","operations","operation","httpMethod","generateURI","endpointPath","operationPath","input","params","uri","join","replace","queryString","queryStringSet","each","members","name","member","paramValue","undefined","location","regex","RegExp","_","plus","fn","uriEscapePath","uriEscape","String","type","map","val","toWireFormat","toString","key","value","Array","isArray","indexOf","parts","arrayEach","Object","keys","sort","i","length","push","populateURI","endpoint","path","httpPath","populateHeaders","memberValue","headers","isJsonValue","base64","encode","buildRequest","extractError","extractData","resp","request","data","r","httpResponse","output","k","v","toLowerCase","header","isLocationName","pattern","result","match","decode","toType","parseInt","statusCode","module","exports"],"mappings":"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","sourcesContent":["var util = require('../util');\nvar populateHostPrefix = require('./helpers').populateHostPrefix;\n\nfunction populateMethod(req) {\n  req.httpRequest.method = req.service.api.operations[req.operation].httpMethod;\n}\n\nfunction generateURI(endpointPath, operationPath, input, params) {\n  var uri = [endpointPath, operationPath].join('/');\n  uri = uri.replace(/\\/+/g, '/');\n\n  var queryString = {}, queryStringSet = false;\n  util.each(input.members, function (name, member) {\n    var paramValue = params[name];\n    if (paramValue === null || paramValue === undefined) return;\n    if (member.location === 'uri') {\n      var regex = new RegExp('\\\\{' + member.name + '(\\\\+)?\\\\}');\n      uri = uri.replace(regex, function(_, plus) {\n        var fn = plus ? util.uriEscapePath : util.uriEscape;\n        return fn(String(paramValue));\n      });\n    } else if (member.location === 'querystring') {\n      queryStringSet = true;\n\n      if (member.type === 'list') {\n        queryString[member.name] = paramValue.map(function(val) {\n          return util.uriEscape(member.member.toWireFormat(val).toString());\n        });\n      } else if (member.type === 'map') {\n        util.each(paramValue, function(key, value) {\n          if (Array.isArray(value)) {\n            queryString[key] = value.map(function(val) {\n              return util.uriEscape(String(val));\n            });\n          } else {\n            queryString[key] = util.uriEscape(String(value));\n          }\n        });\n      } else {\n        queryString[member.name] = util.uriEscape(member.toWireFormat(paramValue).toString());\n      }\n    }\n  });\n\n  if (queryStringSet) {\n    uri += (uri.indexOf('?') >= 0 ? '&' : '?');\n    var parts = [];\n    util.arrayEach(Object.keys(queryString).sort(), function(key) {\n      if (!Array.isArray(queryString[key])) {\n        queryString[key] = [queryString[key]];\n      }\n      for (var i = 0; i < queryString[key].length; i++) {\n        parts.push(util.uriEscape(String(key)) + '=' + queryString[key][i]);\n      }\n    });\n    uri += parts.join('&');\n  }\n\n  return uri;\n}\n\nfunction populateURI(req) {\n  var operation = req.service.api.operations[req.operation];\n  var input = operation.input;\n\n  var uri = generateURI(req.httpRequest.endpoint.path, operation.httpPath, input, req.params);\n  req.httpRequest.path = uri;\n}\n\nfunction populateHeaders(req) {\n  var operation = req.service.api.operations[req.operation];\n  util.each(operation.input.members, function (name, member) {\n    var value = req.params[name];\n    if (value === null || value === undefined) return;\n\n    if (member.location === 'headers' && member.type === 'map') {\n      util.each(value, function(key, memberValue) {\n        req.httpRequest.headers[member.name + key] = memberValue;\n      });\n    } else if (member.location === 'header') {\n      value = member.toWireFormat(value).toString();\n      if (member.isJsonValue) {\n        value = util.base64.encode(value);\n      }\n      req.httpRequest.headers[member.name] = value;\n    }\n  });\n}\n\nfunction buildRequest(req) {\n  populateMethod(req);\n  populateURI(req);\n  populateHeaders(req);\n  populateHostPrefix(req);\n}\n\nfunction extractError() {\n}\n\nfunction extractData(resp) {\n  var req = resp.request;\n  var data = {};\n  var r = resp.httpResponse;\n  var operation = req.service.api.operations[req.operation];\n  var output = operation.output;\n\n  // normalize headers names to lower-cased keys for matching\n  var headers = {};\n  util.each(r.headers, function (k, v) {\n    headers[k.toLowerCase()] = v;\n  });\n\n  util.each(output.members, function(name, member) {\n    var header = (member.name || name).toLowerCase();\n    if (member.location === 'headers' && member.type === 'map') {\n      data[name] = {};\n      var location = member.isLocationName ? member.name : '';\n      var pattern = new RegExp('^' + location + '(.+)', 'i');\n      util.each(r.headers, function (k, v) {\n        var result = k.match(pattern);\n        if (result !== null) {\n          data[name][result[1]] = v;\n        }\n      });\n    } else if (member.location === 'header') {\n      if (headers[header] !== undefined) {\n        var value = member.isJsonValue ?\n          util.base64.decode(headers[header]) :\n          headers[header];\n        data[name] = member.toType(value);\n      }\n    } else if (member.location === 'statusCode') {\n      data[name] = parseInt(r.statusCode, 10);\n    }\n  });\n\n  resp.data = data;\n}\n\n/**\n * @api private\n */\nmodule.exports = {\n  buildRequest: buildRequest,\n  extractError: extractError,\n  extractData: extractData,\n  generateURI: generateURI\n};\n"]},"metadata":{},"sourceType":"script"}