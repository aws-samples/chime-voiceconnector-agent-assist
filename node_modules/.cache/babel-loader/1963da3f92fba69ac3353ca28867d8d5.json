{"ast":null,"code":"var AWS = require('./core');\n/**\n * @api private\n */\n\n\nAWS.ParamValidator = AWS.util.inherit({\n  /**\n   * Create a new validator object.\n   *\n   * @param validation [Boolean|map] whether input parameters should be\n   *     validated against the operation description before sending the\n   *     request. Pass a map to enable any of the following specific\n   *     validation features:\n   *\n   *     * **min** [Boolean] &mdash; Validates that a value meets the min\n   *       constraint. This is enabled by default when paramValidation is set\n   *       to `true`.\n   *     * **max** [Boolean] &mdash; Validates that a value meets the max\n   *       constraint.\n   *     * **pattern** [Boolean] &mdash; Validates that a string value matches a\n   *       regular expression.\n   *     * **enum** [Boolean] &mdash; Validates that a string value matches one\n   *       of the allowable enum values.\n   */\n  constructor: function ParamValidator(validation) {\n    if (validation === true || validation === undefined) {\n      validation = {\n        'min': true\n      };\n    }\n\n    this.validation = validation;\n  },\n  validate: function validate(shape, params, context) {\n    this.errors = [];\n    this.validateMember(shape, params || {}, context || 'params');\n\n    if (this.errors.length > 1) {\n      var msg = this.errors.join('\\n* ');\n      msg = 'There were ' + this.errors.length + ' validation errors:\\n* ' + msg;\n      throw AWS.util.error(new Error(msg), {\n        code: 'MultipleValidationErrors',\n        errors: this.errors\n      });\n    } else if (this.errors.length === 1) {\n      throw this.errors[0];\n    } else {\n      return true;\n    }\n  },\n  fail: function fail(code, message) {\n    this.errors.push(AWS.util.error(new Error(message), {\n      code: code\n    }));\n  },\n  validateStructure: function validateStructure(shape, params, context) {\n    this.validateType(params, context, ['object'], 'structure');\n    var paramName;\n\n    for (var i = 0; shape.required && i < shape.required.length; i++) {\n      paramName = shape.required[i];\n      var value = params[paramName];\n\n      if (value === undefined || value === null) {\n        this.fail('MissingRequiredParameter', 'Missing required key \\'' + paramName + '\\' in ' + context);\n      }\n    } // validate hash members\n\n\n    for (paramName in params) {\n      if (!Object.prototype.hasOwnProperty.call(params, paramName)) continue;\n      var paramValue = params[paramName],\n          memberShape = shape.members[paramName];\n\n      if (memberShape !== undefined) {\n        var memberContext = [context, paramName].join('.');\n        this.validateMember(memberShape, paramValue, memberContext);\n      } else {\n        this.fail('UnexpectedParameter', 'Unexpected key \\'' + paramName + '\\' found in ' + context);\n      }\n    }\n\n    return true;\n  },\n  validateMember: function validateMember(shape, param, context) {\n    switch (shape.type) {\n      case 'structure':\n        return this.validateStructure(shape, param, context);\n\n      case 'list':\n        return this.validateList(shape, param, context);\n\n      case 'map':\n        return this.validateMap(shape, param, context);\n\n      default:\n        return this.validateScalar(shape, param, context);\n    }\n  },\n  validateList: function validateList(shape, params, context) {\n    if (this.validateType(params, context, [Array])) {\n      this.validateRange(shape, params.length, context, 'list member count'); // validate array members\n\n      for (var i = 0; i < params.length; i++) {\n        this.validateMember(shape.member, params[i], context + '[' + i + ']');\n      }\n    }\n  },\n  validateMap: function validateMap(shape, params, context) {\n    if (this.validateType(params, context, ['object'], 'map')) {\n      // Build up a count of map members to validate range traits.\n      var mapCount = 0;\n\n      for (var param in params) {\n        if (!Object.prototype.hasOwnProperty.call(params, param)) continue; // Validate any map key trait constraints\n\n        this.validateMember(shape.key, param, context + '[key=\\'' + param + '\\']');\n        this.validateMember(shape.value, params[param], context + '[\\'' + param + '\\']');\n        mapCount++;\n      }\n\n      this.validateRange(shape, mapCount, context, 'map member count');\n    }\n  },\n  validateScalar: function validateScalar(shape, value, context) {\n    switch (shape.type) {\n      case null:\n      case undefined:\n      case 'string':\n        return this.validateString(shape, value, context);\n\n      case 'base64':\n      case 'binary':\n        return this.validatePayload(value, context);\n\n      case 'integer':\n      case 'float':\n        return this.validateNumber(shape, value, context);\n\n      case 'boolean':\n        return this.validateType(value, context, ['boolean']);\n\n      case 'timestamp':\n        return this.validateType(value, context, [Date, /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z$/, 'number'], 'Date object, ISO-8601 string, or a UNIX timestamp');\n\n      default:\n        return this.fail('UnkownType', 'Unhandled type ' + shape.type + ' for ' + context);\n    }\n  },\n  validateString: function validateString(shape, value, context) {\n    var validTypes = ['string'];\n\n    if (shape.isJsonValue) {\n      validTypes = validTypes.concat(['number', 'object', 'boolean']);\n    }\n\n    if (value !== null && this.validateType(value, context, validTypes)) {\n      this.validateEnum(shape, value, context);\n      this.validateRange(shape, value.length, context, 'string length');\n      this.validatePattern(shape, value, context);\n      this.validateUri(shape, value, context);\n    }\n  },\n  validateUri: function validateUri(shape, value, context) {\n    if (shape['location'] === 'uri') {\n      if (value.length === 0) {\n        this.fail('UriParameterError', 'Expected uri parameter to have length >= 1,' + ' but found \"' + value + '\" for ' + context);\n      }\n    }\n  },\n  validatePattern: function validatePattern(shape, value, context) {\n    if (this.validation['pattern'] && shape['pattern'] !== undefined) {\n      if (!new RegExp(shape['pattern']).test(value)) {\n        this.fail('PatternMatchError', 'Provided value \"' + value + '\" ' + 'does not match regex pattern /' + shape['pattern'] + '/ for ' + context);\n      }\n    }\n  },\n  validateRange: function validateRange(shape, value, context, descriptor) {\n    if (this.validation['min']) {\n      if (shape['min'] !== undefined && value < shape['min']) {\n        this.fail('MinRangeError', 'Expected ' + descriptor + ' >= ' + shape['min'] + ', but found ' + value + ' for ' + context);\n      }\n    }\n\n    if (this.validation['max']) {\n      if (shape['max'] !== undefined && value > shape['max']) {\n        this.fail('MaxRangeError', 'Expected ' + descriptor + ' <= ' + shape['max'] + ', but found ' + value + ' for ' + context);\n      }\n    }\n  },\n  validateEnum: function validateRange(shape, value, context) {\n    if (this.validation['enum'] && shape['enum'] !== undefined) {\n      // Fail if the string value is not present in the enum list\n      if (shape['enum'].indexOf(value) === -1) {\n        this.fail('EnumError', 'Found string value of ' + value + ', but ' + 'expected ' + shape['enum'].join('|') + ' for ' + context);\n      }\n    }\n  },\n  validateType: function validateType(value, context, acceptedTypes, type) {\n    // We will not log an error for null or undefined, but we will return\n    // false so that callers know that the expected type was not strictly met.\n    if (value === null || value === undefined) return false;\n    var foundInvalidType = false;\n\n    for (var i = 0; i < acceptedTypes.length; i++) {\n      if (typeof acceptedTypes[i] === 'string') {\n        if (typeof value === acceptedTypes[i]) return true;\n      } else if (acceptedTypes[i] instanceof RegExp) {\n        if ((value || '').toString().match(acceptedTypes[i])) return true;\n      } else {\n        if (value instanceof acceptedTypes[i]) return true;\n        if (AWS.util.isType(value, acceptedTypes[i])) return true;\n        if (!type && !foundInvalidType) acceptedTypes = acceptedTypes.slice();\n        acceptedTypes[i] = AWS.util.typeName(acceptedTypes[i]);\n      }\n\n      foundInvalidType = true;\n    }\n\n    var acceptedType = type;\n\n    if (!acceptedType) {\n      acceptedType = acceptedTypes.join(', ').replace(/,([^,]+)$/, ', or$1');\n    }\n\n    var vowel = acceptedType.match(/^[aeiou]/i) ? 'n' : '';\n    this.fail('InvalidParameterType', 'Expected ' + context + ' to be a' + vowel + ' ' + acceptedType);\n    return false;\n  },\n  validateNumber: function validateNumber(shape, value, context) {\n    if (value === null || value === undefined) return;\n\n    if (typeof value === 'string') {\n      var castedValue = parseFloat(value);\n      if (castedValue.toString() === value) value = castedValue;\n    }\n\n    if (this.validateType(value, context, ['number'])) {\n      this.validateRange(shape, value, context, 'numeric value');\n    }\n  },\n  validatePayload: function validatePayload(value, context) {\n    if (value === null || value === undefined) return;\n    if (typeof value === 'string') return;\n    if (value && typeof value.byteLength === 'number') return; // typed arrays\n\n    if (AWS.util.isNode()) {\n      // special check for buffer/stream in Node.js\n      var Stream = AWS.util.stream.Stream;\n      if (AWS.util.Buffer.isBuffer(value) || value instanceof Stream) return;\n    } else {\n      if (typeof Blob !== void 0 && value instanceof Blob) return;\n    }\n\n    var types = ['Buffer', 'Stream', 'File', 'Blob', 'ArrayBuffer', 'DataView'];\n\n    if (value) {\n      for (var i = 0; i < types.length; i++) {\n        if (AWS.util.isType(value, types[i])) return;\n        if (AWS.util.typeName(value.constructor) === types[i]) return;\n      }\n    }\n\n    this.fail('InvalidParameterType', 'Expected ' + context + ' to be a ' + 'string, Buffer, Stream, Blob, or typed array object');\n  }\n});","map":{"version":3,"sources":["/home/ec2-user/chime-voiceconnector-agent-assist/node_modules/@aws-amplify/core/node_modules/aws-sdk/lib/param_validator.js"],"names":["AWS","require","ParamValidator","util","inherit","constructor","validation","undefined","validate","shape","params","context","errors","validateMember","length","msg","join","error","Error","code","fail","message","push","validateStructure","validateType","paramName","i","required","value","Object","prototype","hasOwnProperty","call","paramValue","memberShape","members","memberContext","param","type","validateList","validateMap","validateScalar","Array","validateRange","member","mapCount","key","validateString","validatePayload","validateNumber","Date","validTypes","isJsonValue","concat","validateEnum","validatePattern","validateUri","RegExp","test","descriptor","indexOf","acceptedTypes","foundInvalidType","toString","match","isType","slice","typeName","acceptedType","replace","vowel","castedValue","parseFloat","byteLength","isNode","Stream","stream","Buffer","isBuffer","Blob","types"],"mappings":"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","sourcesContent":["var AWS = require('./core');\n\n/**\n * @api private\n */\nAWS.ParamValidator = AWS.util.inherit({\n  /**\n   * Create a new validator object.\n   *\n   * @param validation [Boolean|map] whether input parameters should be\n   *     validated against the operation description before sending the\n   *     request. Pass a map to enable any of the following specific\n   *     validation features:\n   *\n   *     * **min** [Boolean] &mdash; Validates that a value meets the min\n   *       constraint. This is enabled by default when paramValidation is set\n   *       to `true`.\n   *     * **max** [Boolean] &mdash; Validates that a value meets the max\n   *       constraint.\n   *     * **pattern** [Boolean] &mdash; Validates that a string value matches a\n   *       regular expression.\n   *     * **enum** [Boolean] &mdash; Validates that a string value matches one\n   *       of the allowable enum values.\n   */\n  constructor: function ParamValidator(validation) {\n    if (validation === true || validation === undefined) {\n      validation = {'min': true};\n    }\n    this.validation = validation;\n  },\n\n  validate: function validate(shape, params, context) {\n    this.errors = [];\n    this.validateMember(shape, params || {}, context || 'params');\n\n    if (this.errors.length > 1) {\n      var msg = this.errors.join('\\n* ');\n      msg = 'There were ' + this.errors.length +\n        ' validation errors:\\n* ' + msg;\n      throw AWS.util.error(new Error(msg),\n        {code: 'MultipleValidationErrors', errors: this.errors});\n    } else if (this.errors.length === 1) {\n      throw this.errors[0];\n    } else {\n      return true;\n    }\n  },\n\n  fail: function fail(code, message) {\n    this.errors.push(AWS.util.error(new Error(message), {code: code}));\n  },\n\n  validateStructure: function validateStructure(shape, params, context) {\n    this.validateType(params, context, ['object'], 'structure');\n\n    var paramName;\n    for (var i = 0; shape.required && i < shape.required.length; i++) {\n      paramName = shape.required[i];\n      var value = params[paramName];\n      if (value === undefined || value === null) {\n        this.fail('MissingRequiredParameter',\n          'Missing required key \\'' + paramName + '\\' in ' + context);\n      }\n    }\n\n    // validate hash members\n    for (paramName in params) {\n      if (!Object.prototype.hasOwnProperty.call(params, paramName)) continue;\n\n      var paramValue = params[paramName],\n          memberShape = shape.members[paramName];\n\n      if (memberShape !== undefined) {\n        var memberContext = [context, paramName].join('.');\n        this.validateMember(memberShape, paramValue, memberContext);\n      } else {\n        this.fail('UnexpectedParameter',\n          'Unexpected key \\'' + paramName + '\\' found in ' + context);\n      }\n    }\n\n    return true;\n  },\n\n  validateMember: function validateMember(shape, param, context) {\n    switch (shape.type) {\n      case 'structure':\n        return this.validateStructure(shape, param, context);\n      case 'list':\n        return this.validateList(shape, param, context);\n      case 'map':\n        return this.validateMap(shape, param, context);\n      default:\n        return this.validateScalar(shape, param, context);\n    }\n  },\n\n  validateList: function validateList(shape, params, context) {\n    if (this.validateType(params, context, [Array])) {\n      this.validateRange(shape, params.length, context, 'list member count');\n      // validate array members\n      for (var i = 0; i < params.length; i++) {\n        this.validateMember(shape.member, params[i], context + '[' + i + ']');\n      }\n    }\n  },\n\n  validateMap: function validateMap(shape, params, context) {\n    if (this.validateType(params, context, ['object'], 'map')) {\n      // Build up a count of map members to validate range traits.\n      var mapCount = 0;\n      for (var param in params) {\n        if (!Object.prototype.hasOwnProperty.call(params, param)) continue;\n        // Validate any map key trait constraints\n        this.validateMember(shape.key, param,\n                            context + '[key=\\'' + param + '\\']');\n        this.validateMember(shape.value, params[param],\n                            context + '[\\'' + param + '\\']');\n        mapCount++;\n      }\n      this.validateRange(shape, mapCount, context, 'map member count');\n    }\n  },\n\n  validateScalar: function validateScalar(shape, value, context) {\n    switch (shape.type) {\n      case null:\n      case undefined:\n      case 'string':\n        return this.validateString(shape, value, context);\n      case 'base64':\n      case 'binary':\n        return this.validatePayload(value, context);\n      case 'integer':\n      case 'float':\n        return this.validateNumber(shape, value, context);\n      case 'boolean':\n        return this.validateType(value, context, ['boolean']);\n      case 'timestamp':\n        return this.validateType(value, context, [Date,\n          /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z$/, 'number'],\n          'Date object, ISO-8601 string, or a UNIX timestamp');\n      default:\n        return this.fail('UnkownType', 'Unhandled type ' +\n                         shape.type + ' for ' + context);\n    }\n  },\n\n  validateString: function validateString(shape, value, context) {\n    var validTypes = ['string'];\n    if (shape.isJsonValue) {\n      validTypes = validTypes.concat(['number', 'object', 'boolean']);\n    }\n    if (value !== null && this.validateType(value, context, validTypes)) {\n      this.validateEnum(shape, value, context);\n      this.validateRange(shape, value.length, context, 'string length');\n      this.validatePattern(shape, value, context);\n      this.validateUri(shape, value, context);\n    }\n  },\n\n  validateUri: function validateUri(shape, value, context) {\n    if (shape['location'] === 'uri') {\n      if (value.length === 0) {\n        this.fail('UriParameterError', 'Expected uri parameter to have length >= 1,'\n          + ' but found \"' + value +'\" for ' + context);\n      }\n    }\n  },\n\n  validatePattern: function validatePattern(shape, value, context) {\n    if (this.validation['pattern'] && shape['pattern'] !== undefined) {\n      if (!(new RegExp(shape['pattern'])).test(value)) {\n        this.fail('PatternMatchError', 'Provided value \"' + value + '\" '\n          + 'does not match regex pattern /' + shape['pattern'] + '/ for '\n          + context);\n      }\n    }\n  },\n\n  validateRange: function validateRange(shape, value, context, descriptor) {\n    if (this.validation['min']) {\n      if (shape['min'] !== undefined && value < shape['min']) {\n        this.fail('MinRangeError', 'Expected ' + descriptor + ' >= '\n          + shape['min'] + ', but found ' + value + ' for ' + context);\n      }\n    }\n    if (this.validation['max']) {\n      if (shape['max'] !== undefined && value > shape['max']) {\n        this.fail('MaxRangeError', 'Expected ' + descriptor + ' <= '\n          + shape['max'] + ', but found ' + value + ' for ' + context);\n      }\n    }\n  },\n\n  validateEnum: function validateRange(shape, value, context) {\n    if (this.validation['enum'] && shape['enum'] !== undefined) {\n      // Fail if the string value is not present in the enum list\n      if (shape['enum'].indexOf(value) === -1) {\n        this.fail('EnumError', 'Found string value of ' + value + ', but '\n          + 'expected ' + shape['enum'].join('|') + ' for ' + context);\n      }\n    }\n  },\n\n  validateType: function validateType(value, context, acceptedTypes, type) {\n    // We will not log an error for null or undefined, but we will return\n    // false so that callers know that the expected type was not strictly met.\n    if (value === null || value === undefined) return false;\n\n    var foundInvalidType = false;\n    for (var i = 0; i < acceptedTypes.length; i++) {\n      if (typeof acceptedTypes[i] === 'string') {\n        if (typeof value === acceptedTypes[i]) return true;\n      } else if (acceptedTypes[i] instanceof RegExp) {\n        if ((value || '').toString().match(acceptedTypes[i])) return true;\n      } else {\n        if (value instanceof acceptedTypes[i]) return true;\n        if (AWS.util.isType(value, acceptedTypes[i])) return true;\n        if (!type && !foundInvalidType) acceptedTypes = acceptedTypes.slice();\n        acceptedTypes[i] = AWS.util.typeName(acceptedTypes[i]);\n      }\n      foundInvalidType = true;\n    }\n\n    var acceptedType = type;\n    if (!acceptedType) {\n      acceptedType = acceptedTypes.join(', ').replace(/,([^,]+)$/, ', or$1');\n    }\n\n    var vowel = acceptedType.match(/^[aeiou]/i) ? 'n' : '';\n    this.fail('InvalidParameterType', 'Expected ' + context + ' to be a' +\n              vowel + ' ' + acceptedType);\n    return false;\n  },\n\n  validateNumber: function validateNumber(shape, value, context) {\n    if (value === null || value === undefined) return;\n    if (typeof value === 'string') {\n      var castedValue = parseFloat(value);\n      if (castedValue.toString() === value) value = castedValue;\n    }\n    if (this.validateType(value, context, ['number'])) {\n      this.validateRange(shape, value, context, 'numeric value');\n    }\n  },\n\n  validatePayload: function validatePayload(value, context) {\n    if (value === null || value === undefined) return;\n    if (typeof value === 'string') return;\n    if (value && typeof value.byteLength === 'number') return; // typed arrays\n    if (AWS.util.isNode()) { // special check for buffer/stream in Node.js\n      var Stream = AWS.util.stream.Stream;\n      if (AWS.util.Buffer.isBuffer(value) || value instanceof Stream) return;\n    } else {\n      if (typeof Blob !== void 0 && value instanceof Blob) return;\n    }\n\n    var types = ['Buffer', 'Stream', 'File', 'Blob', 'ArrayBuffer', 'DataView'];\n    if (value) {\n      for (var i = 0; i < types.length; i++) {\n        if (AWS.util.isType(value, types[i])) return;\n        if (AWS.util.typeName(value.constructor) === types[i]) return;\n      }\n    }\n\n    this.fail('InvalidParameterType', 'Expected ' + context + ' to be a ' +\n      'string, Buffer, Stream, Blob, or typed array object');\n  }\n});\n"]},"metadata":{},"sourceType":"script"}