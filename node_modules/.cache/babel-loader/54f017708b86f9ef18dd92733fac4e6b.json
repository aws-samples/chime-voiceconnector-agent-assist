{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger } from '../Logger';\nvar logger = new Logger('I18n');\n/**\n * Language transition class\n */\n\nvar I18n =\n/** @class */\nfunction () {\n  /**\n   * @constructor\n   * Initialize with configurations\n   * @param {Object} options\n   */\n  function I18n(options) {\n    /**\n     * @private\n     */\n    this._options = null;\n    /**\n     * @private\n     */\n\n    this._lang = null;\n    /**\n     * @private\n     */\n\n    this._dict = {};\n    this._options = Object.assign({}, options);\n    this._lang = this._options.language;\n\n    if (!this._lang && typeof window !== 'undefined' && window && window.navigator) {\n      this._lang = window.navigator.language;\n    }\n\n    logger.debug(this._lang);\n  }\n  /**\n   * @method\n   * Explicitly setting language\n   * @param {String} lang\n   */\n\n\n  I18n.prototype.setLanguage = function (lang) {\n    this._lang = lang;\n  };\n  /**\n   * @method\n   * Get value\n   * @param {String} key\n   * @param {String} defVal - Default value\n   */\n\n\n  I18n.prototype.get = function (key, defVal) {\n    if (defVal === void 0) {\n      defVal = undefined;\n    }\n\n    if (!this._lang) {\n      return typeof defVal !== 'undefined' ? defVal : key;\n    }\n\n    var lang = this._lang;\n    var val = this.getByLanguage(key, lang);\n\n    if (val) {\n      return val;\n    }\n\n    if (lang.indexOf('-') > 0) {\n      val = this.getByLanguage(key, lang.split('-')[0]);\n    }\n\n    if (val) {\n      return val;\n    }\n\n    return typeof defVal !== 'undefined' ? defVal : key;\n  };\n  /**\n   * @method\n   * Get value according to specified language\n   * @param {String} key\n   * @param {String} language - Specified langurage to be used\n   * @param {String} defVal - Default value\n   */\n\n\n  I18n.prototype.getByLanguage = function (key, language, defVal) {\n    if (defVal === void 0) {\n      defVal = null;\n    }\n\n    if (!language) {\n      return defVal;\n    }\n\n    var lang_dict = this._dict[language];\n\n    if (!lang_dict) {\n      return defVal;\n    }\n\n    return lang_dict[key];\n  };\n  /**\n   * @method\n   * Add vocabularies for one language\n   * @param {String} langurage - Language of the dictionary\n   * @param {Object} vocabularies - Object that has key-value as dictionary entry\n   */\n\n\n  I18n.prototype.putVocabulariesForLanguage = function (language, vocabularies) {\n    var lang_dict = this._dict[language];\n\n    if (!lang_dict) {\n      lang_dict = this._dict[language] = {};\n    }\n\n    Object.assign(lang_dict, vocabularies);\n  };\n  /**\n   * @method\n   * Add vocabularies for one language\n   * @param {Object} vocabularies - Object that has language as key,\n   *                                vocabularies of each language as value\n   */\n\n\n  I18n.prototype.putVocabularies = function (vocabularies) {\n    var _this = this;\n\n    Object.keys(vocabularies).map(function (key) {\n      _this.putVocabulariesForLanguage(key, vocabularies[key]);\n    });\n  };\n\n  return I18n;\n}();\n\nexport { I18n };","map":{"version":3,"sources":["../../src/I18n/I18n.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger } from '../Logger';\nvar logger = new Logger('I18n');\n/**\n * Language transition class\n */\nvar I18n = /** @class */ (function () {\n    /**\n     * @constructor\n     * Initialize with configurations\n     * @param {Object} options\n     */\n    function I18n(options) {\n        /**\n         * @private\n         */\n        this._options = null;\n        /**\n         * @private\n         */\n        this._lang = null;\n        /**\n         * @private\n         */\n        this._dict = {};\n        this._options = Object.assign({}, options);\n        this._lang = this._options.language;\n        if (!this._lang &&\n            typeof window !== 'undefined' &&\n            window &&\n            window.navigator) {\n            this._lang = window.navigator.language;\n        }\n        logger.debug(this._lang);\n    }\n    /**\n     * @method\n     * Explicitly setting language\n     * @param {String} lang\n     */\n    I18n.prototype.setLanguage = function (lang) {\n        this._lang = lang;\n    };\n    /**\n     * @method\n     * Get value\n     * @param {String} key\n     * @param {String} defVal - Default value\n     */\n    I18n.prototype.get = function (key, defVal) {\n        if (defVal === void 0) { defVal = undefined; }\n        if (!this._lang) {\n            return typeof defVal !== 'undefined' ? defVal : key;\n        }\n        var lang = this._lang;\n        var val = this.getByLanguage(key, lang);\n        if (val) {\n            return val;\n        }\n        if (lang.indexOf('-') > 0) {\n            val = this.getByLanguage(key, lang.split('-')[0]);\n        }\n        if (val) {\n            return val;\n        }\n        return typeof defVal !== 'undefined' ? defVal : key;\n    };\n    /**\n     * @method\n     * Get value according to specified language\n     * @param {String} key\n     * @param {String} language - Specified langurage to be used\n     * @param {String} defVal - Default value\n     */\n    I18n.prototype.getByLanguage = function (key, language, defVal) {\n        if (defVal === void 0) { defVal = null; }\n        if (!language) {\n            return defVal;\n        }\n        var lang_dict = this._dict[language];\n        if (!lang_dict) {\n            return defVal;\n        }\n        return lang_dict[key];\n    };\n    /**\n     * @method\n     * Add vocabularies for one language\n     * @param {String} langurage - Language of the dictionary\n     * @param {Object} vocabularies - Object that has key-value as dictionary entry\n     */\n    I18n.prototype.putVocabulariesForLanguage = function (language, vocabularies) {\n        var lang_dict = this._dict[language];\n        if (!lang_dict) {\n            lang_dict = this._dict[language] = {};\n        }\n        Object.assign(lang_dict, vocabularies);\n    };\n    /**\n     * @method\n     * Add vocabularies for one language\n     * @param {Object} vocabularies - Object that has language as key,\n     *                                vocabularies of each language as value\n     */\n    I18n.prototype.putVocabularies = function (vocabularies) {\n        var _this = this;\n        Object.keys(vocabularies).map(function (key) {\n            _this.putVocabulariesForLanguage(key, vocabularies[key]);\n        });\n    };\n    return I18n;\n}());\nexport { I18n };\n//# sourceMappingURL=I18n.js.map"]},"metadata":{},"sourceType":"module"}