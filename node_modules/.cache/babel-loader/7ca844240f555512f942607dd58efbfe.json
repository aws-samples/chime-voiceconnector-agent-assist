{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n/**\n * Provided a collection of ASTs, presumably each from different files,\n * concatenate the ASTs together into batched AST, useful for validating many\n * GraphQL source files which together represent one conceptual application.\n */\nexport function concatAST(asts) {\n  var batchDefinitions = [];\n\n  for (var i = 0; i < asts.length; i++) {\n    var definitions = asts[i].definitions;\n\n    for (var j = 0; j < definitions.length; j++) {\n      batchDefinitions.push(definitions[j]);\n    }\n  }\n\n  return {\n    kind: 'Document',\n    definitions: batchDefinitions\n  };\n}","map":{"version":3,"sources":["/home/ec2-user/chime-voiceconnector-agent-assist/node_modules/graphql/utilities/concatAST.mjs"],"names":["concatAST","asts","batchDefinitions","i","length","definitions","j","push","kind"],"mappings":"AAAA;;;;;;;;;AASA;;;;;AAKA,OAAO,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;AAC9B,MAAIC,gBAAgB,GAAG,EAAvB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,QAAIE,WAAW,GAAGJ,IAAI,CAACE,CAAD,CAAJ,CAAQE,WAA1B;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,WAAW,CAACD,MAAhC,EAAwCE,CAAC,EAAzC,EAA6C;AAC3CJ,MAAAA,gBAAgB,CAACK,IAAjB,CAAsBF,WAAW,CAACC,CAAD,CAAjC;AACD;AACF;;AAED,SAAO;AACLE,IAAAA,IAAI,EAAE,UADD;AAELH,IAAAA,WAAW,EAAEH;AAFR,GAAP;AAID","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\n\n/**\n * Provided a collection of ASTs, presumably each from different files,\n * concatenate the ASTs together into batched AST, useful for validating many\n * GraphQL source files which together represent one conceptual application.\n */\nexport function concatAST(asts) {\n  var batchDefinitions = [];\n\n  for (var i = 0; i < asts.length; i++) {\n    var definitions = asts[i].definitions;\n\n    for (var j = 0; j < definitions.length; j++) {\n      batchDefinitions.push(definitions[j]);\n    }\n  }\n\n  return {\n    kind: 'Document',\n    definitions: batchDefinitions\n  };\n}"]},"metadata":{},"sourceType":"module"}