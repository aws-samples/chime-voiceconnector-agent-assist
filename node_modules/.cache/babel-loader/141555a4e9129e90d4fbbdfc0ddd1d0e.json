{"ast":null,"code":"/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { AWSKinesisProvider } from './index';\nimport * as Firehose from 'aws-sdk/clients/firehose';\nvar logger = new Logger('AWSKineisFirehoseProvider');\n\nvar AWSKinesisFirehoseProvider =\n/** @class */\nfunction (_super) {\n  __extends(AWSKinesisFirehoseProvider, _super);\n\n  function AWSKinesisFirehoseProvider(config) {\n    return _super.call(this, config) || this;\n  }\n  /**\n   * get provider name of the plugin\n   */\n\n\n  AWSKinesisFirehoseProvider.prototype.getProviderName = function () {\n    return 'AWSKinesisFirehose';\n  };\n\n  AWSKinesisFirehoseProvider.prototype._sendEvents = function (group) {\n    var _this = this;\n\n    if (group.length === 0) {\n      return;\n    }\n\n    var _a = group[0],\n        config = _a.config,\n        credentials = _a.credentials;\n\n    var initClients = this._init(config, credentials);\n\n    if (!initClients) return false;\n    var records = {};\n    group.map(function (params) {\n      // spit by streamName\n      var evt = params.event;\n      var streamName = evt.streamName;\n\n      if (records[streamName] === undefined) {\n        records[streamName] = [];\n      }\n\n      var PartitionKey = evt.partitionKey || \"partition-\" + credentials.identityId;\n      Object.assign(evt.data, {\n        PartitionKey: PartitionKey\n      });\n      var Data = JSON.stringify(evt.data);\n      var record = {\n        Data: Data\n      };\n      records[streamName].push(record);\n    });\n    Object.keys(records).map(function (streamName) {\n      logger.debug('putting records to kinesis', streamName, 'with records', records[streamName]);\n\n      _this._kinesisFirehose.putRecordBatch({\n        Records: records[streamName],\n        DeliveryStreamName: streamName\n      }, function (err) {\n        if (err) logger.debug('Failed to upload records to Kinesis', err);else logger.debug('Upload records to stream', streamName);\n      });\n    });\n  };\n\n  AWSKinesisFirehoseProvider.prototype._init = function (config, credentials) {\n    logger.debug('init clients');\n\n    if (this._kinesisFirehose && this._config.credentials && this._config.credentials.sessionToken === credentials.sessionToken && this._config.credentials.identityId === credentials.identityId) {\n      logger.debug('no change for analytics config, directly return from init');\n      return true;\n    }\n\n    this._config.credentials = credentials;\n    var region = config.region;\n    return this._initFirehose(region, credentials);\n  };\n\n  AWSKinesisFirehoseProvider.prototype._initFirehose = function (region, credentials) {\n    logger.debug('initialize kinesis firehose with credentials', credentials);\n    this._kinesisFirehose = new Firehose({\n      apiVersion: '2015-08-04',\n      region: region,\n      credentials: credentials\n    });\n    return true;\n  };\n\n  return AWSKinesisFirehoseProvider;\n}(AWSKinesisProvider);\n\nexport default AWSKinesisFirehoseProvider;","map":{"version":3,"sources":["../../src/Providers/AWSKinesisFirehoseProvider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { AWSKinesisProvider } from './index';\nimport * as Firehose from 'aws-sdk/clients/firehose';\nvar logger = new Logger('AWSKineisFirehoseProvider');\nvar AWSKinesisFirehoseProvider = /** @class */ (function (_super) {\n    __extends(AWSKinesisFirehoseProvider, _super);\n    function AWSKinesisFirehoseProvider(config) {\n        return _super.call(this, config) || this;\n    }\n    /**\n     * get provider name of the plugin\n     */\n    AWSKinesisFirehoseProvider.prototype.getProviderName = function () {\n        return 'AWSKinesisFirehose';\n    };\n    AWSKinesisFirehoseProvider.prototype._sendEvents = function (group) {\n        var _this = this;\n        if (group.length === 0) {\n            return;\n        }\n        var _a = group[0], config = _a.config, credentials = _a.credentials;\n        var initClients = this._init(config, credentials);\n        if (!initClients)\n            return false;\n        var records = {};\n        group.map(function (params) {\n            // spit by streamName\n            var evt = params.event;\n            var streamName = evt.streamName;\n            if (records[streamName] === undefined) {\n                records[streamName] = [];\n            }\n            var PartitionKey = evt.partitionKey || \"partition-\" + credentials.identityId;\n            Object.assign(evt.data, { PartitionKey: PartitionKey });\n            var Data = JSON.stringify(evt.data);\n            var record = { Data: Data };\n            records[streamName].push(record);\n        });\n        Object.keys(records).map(function (streamName) {\n            logger.debug('putting records to kinesis', streamName, 'with records', records[streamName]);\n            _this._kinesisFirehose.putRecordBatch({\n                Records: records[streamName],\n                DeliveryStreamName: streamName,\n            }, function (err) {\n                if (err)\n                    logger.debug('Failed to upload records to Kinesis', err);\n                else\n                    logger.debug('Upload records to stream', streamName);\n            });\n        });\n    };\n    AWSKinesisFirehoseProvider.prototype._init = function (config, credentials) {\n        logger.debug('init clients');\n        if (this._kinesisFirehose &&\n            this._config.credentials &&\n            this._config.credentials.sessionToken === credentials.sessionToken &&\n            this._config.credentials.identityId === credentials.identityId) {\n            logger.debug('no change for analytics config, directly return from init');\n            return true;\n        }\n        this._config.credentials = credentials;\n        var region = config.region;\n        return this._initFirehose(region, credentials);\n    };\n    AWSKinesisFirehoseProvider.prototype._initFirehose = function (region, credentials) {\n        logger.debug('initialize kinesis firehose with credentials', credentials);\n        this._kinesisFirehose = new Firehose({\n            apiVersion: '2015-08-04',\n            region: region,\n            credentials: credentials,\n        });\n        return true;\n    };\n    return AWSKinesisFirehoseProvider;\n}(AWSKinesisProvider));\nexport default AWSKinesisFirehoseProvider;\n//# sourceMappingURL=AWSKinesisFirehoseProvider.js.map"]},"metadata":{},"sourceType":"module"}