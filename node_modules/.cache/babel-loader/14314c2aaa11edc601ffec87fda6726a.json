{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport { Component } from 'react';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport AmplifyTheme from '../AmplifyTheme';\nimport Picker from './Picker';\nvar Container = {};\nvar PickerPreview = {\n  maxWidth: '100%'\n};\nvar logger = new Logger('TextPicker');\n\nvar TextPicker =\n/** @class */\nfunction (_super) {\n  __extends(TextPicker, _super);\n\n  function TextPicker(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.handlePick = _this.handlePick.bind(_this);\n    _this.state = {\n      previewText: props.previewText\n    };\n    return _this;\n  }\n\n  TextPicker.prototype.handlePick = function (data) {\n    var that = this;\n    var file = data.file,\n        name = data.name,\n        size = data.size,\n        type = data.type;\n    var _a = this.props,\n        preview = _a.preview,\n        onPick = _a.onPick,\n        onLoad = _a.onLoad;\n\n    if (onPick) {\n      onPick(data);\n    }\n\n    if (preview) {\n      var reader = new FileReader();\n\n      reader.onload = function (e) {\n        var text = e.target.result; // @ts-ignore\n\n        that.setState({\n          previewText: text\n        });\n\n        if (onLoad) {\n          onLoad(text);\n        }\n      };\n\n      reader.readAsText(file);\n    }\n  };\n\n  TextPicker.prototype.render = function () {\n    var preview = this.props.preview;\n    var previewText = this.state.previewText;\n    var title = this.props.title || 'Pick a File';\n    var theme = this.props.theme || AmplifyTheme;\n    var containerStyle = Object.assign({}, Container, theme.picker);\n    var previewStyle = Object.assign({}, PickerPreview, theme.pickerPreview, theme.halfHeight, preview && preview !== 'hidden' ? {} : AmplifyTheme.hidden);\n    return React.createElement(\"div\", {\n      style: containerStyle\n    }, previewText ? React.createElement(\"div\", {\n      style: previewStyle\n    }, React.createElement(\"pre\", {\n      style: theme.pre\n    }, previewText)) : null, React.createElement(Picker, {\n      title: title,\n      accept: \"text/*\",\n      theme: theme,\n      onPick: this.handlePick\n    }));\n  };\n\n  return TextPicker;\n}(Component);\n\nexport default TextPicker;","map":{"version":3,"sources":["../../src/Widget/TextPicker.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as React from 'react';\nimport { Component } from 'react';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport AmplifyTheme from '../AmplifyTheme';\nimport Picker from './Picker';\nvar Container = {};\nvar PickerPreview = {\n    maxWidth: '100%',\n};\nvar logger = new Logger('TextPicker');\nvar TextPicker = /** @class */ (function (_super) {\n    __extends(TextPicker, _super);\n    function TextPicker(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handlePick = _this.handlePick.bind(_this);\n        _this.state = {\n            previewText: props.previewText,\n        };\n        return _this;\n    }\n    TextPicker.prototype.handlePick = function (data) {\n        var that = this;\n        var file = data.file, name = data.name, size = data.size, type = data.type;\n        var _a = this.props, preview = _a.preview, onPick = _a.onPick, onLoad = _a.onLoad;\n        if (onPick) {\n            onPick(data);\n        }\n        if (preview) {\n            var reader = new FileReader();\n            reader.onload = function (e) {\n                var text = e.target.result;\n                // @ts-ignore\n                that.setState({ previewText: text });\n                if (onLoad) {\n                    onLoad(text);\n                }\n            };\n            reader.readAsText(file);\n        }\n    };\n    TextPicker.prototype.render = function () {\n        var preview = this.props.preview;\n        var previewText = this.state.previewText;\n        var title = this.props.title || 'Pick a File';\n        var theme = this.props.theme || AmplifyTheme;\n        var containerStyle = Object.assign({}, Container, theme.picker);\n        var previewStyle = Object.assign({}, PickerPreview, theme.pickerPreview, theme.halfHeight, preview && preview !== 'hidden' ? {} : AmplifyTheme.hidden);\n        return (React.createElement(\"div\", { style: containerStyle },\n            previewText ? (React.createElement(\"div\", { style: previewStyle },\n                React.createElement(\"pre\", { style: theme.pre }, previewText))) : null,\n            React.createElement(Picker, { title: title, accept: \"text/*\", theme: theme, onPick: this.handlePick })));\n    };\n    return TextPicker;\n}(Component));\nexport default TextPicker;\n//# sourceMappingURL=TextPicker.js.map"]},"metadata":{},"sourceType":"module"}