{"ast":null,"code":"function AcceptorStateMachine(states, state) {\n  this.currentState = state || null;\n  this.states = states || {};\n}\n\nAcceptorStateMachine.prototype.runTo = function runTo(finalState, done, bindObject, inputError) {\n  if (typeof finalState === 'function') {\n    inputError = bindObject;\n    bindObject = done;\n    done = finalState;\n    finalState = null;\n  }\n\n  var self = this;\n  var state = self.states[self.currentState];\n  state.fn.call(bindObject || self, inputError, function (err) {\n    if (err) {\n      if (state.fail) self.currentState = state.fail;else return done ? done.call(bindObject, err) : null;\n    } else {\n      if (state.accept) self.currentState = state.accept;else return done ? done.call(bindObject) : null;\n    }\n\n    if (self.currentState === finalState) {\n      return done ? done.call(bindObject, err) : null;\n    }\n\n    self.runTo(finalState, done, bindObject, err);\n  });\n};\n\nAcceptorStateMachine.prototype.addState = function addState(name, acceptState, failState, fn) {\n  if (typeof acceptState === 'function') {\n    fn = acceptState;\n    acceptState = null;\n    failState = null;\n  } else if (typeof failState === 'function') {\n    fn = failState;\n    failState = null;\n  }\n\n  if (!this.currentState) this.currentState = name;\n  this.states[name] = {\n    accept: acceptState,\n    fail: failState,\n    fn: fn\n  };\n  return this;\n};\n/**\n * @api private\n */\n\n\nmodule.exports = AcceptorStateMachine;","map":{"version":3,"sources":["/home/ec2-user/chime-voiceconnector-agent-assist/node_modules/@aws-amplify/core/node_modules/aws-sdk/lib/state_machine.js"],"names":["AcceptorStateMachine","states","state","currentState","prototype","runTo","finalState","done","bindObject","inputError","self","fn","call","err","fail","accept","addState","name","acceptState","failState","module","exports"],"mappings":"AAAA,SAASA,oBAAT,CAA8BC,MAA9B,EAAsCC,KAAtC,EAA6C;AAC3C,OAAKC,YAAL,GAAoBD,KAAK,IAAI,IAA7B;AACA,OAAKD,MAAL,GAAcA,MAAM,IAAI,EAAxB;AACD;;AAEDD,oBAAoB,CAACI,SAArB,CAA+BC,KAA/B,GAAuC,SAASA,KAAT,CAAeC,UAAf,EAA2BC,IAA3B,EAAiCC,UAAjC,EAA6CC,UAA7C,EAAyD;AAC9F,MAAI,OAAOH,UAAP,KAAsB,UAA1B,EAAsC;AACpCG,IAAAA,UAAU,GAAGD,UAAb;AAAyBA,IAAAA,UAAU,GAAGD,IAAb;AACzBA,IAAAA,IAAI,GAAGD,UAAP;AAAmBA,IAAAA,UAAU,GAAG,IAAb;AACpB;;AAED,MAAII,IAAI,GAAG,IAAX;AACA,MAAIR,KAAK,GAAGQ,IAAI,CAACT,MAAL,CAAYS,IAAI,CAACP,YAAjB,CAAZ;AACAD,EAAAA,KAAK,CAACS,EAAN,CAASC,IAAT,CAAcJ,UAAU,IAAIE,IAA5B,EAAkCD,UAAlC,EAA8C,UAASI,GAAT,EAAc;AAC1D,QAAIA,GAAJ,EAAS;AACP,UAAIX,KAAK,CAACY,IAAV,EAAgBJ,IAAI,CAACP,YAAL,GAAoBD,KAAK,CAACY,IAA1B,CAAhB,KACK,OAAOP,IAAI,GAAGA,IAAI,CAACK,IAAL,CAAUJ,UAAV,EAAsBK,GAAtB,CAAH,GAAgC,IAA3C;AACN,KAHD,MAGO;AACL,UAAIX,KAAK,CAACa,MAAV,EAAkBL,IAAI,CAACP,YAAL,GAAoBD,KAAK,CAACa,MAA1B,CAAlB,KACK,OAAOR,IAAI,GAAGA,IAAI,CAACK,IAAL,CAAUJ,UAAV,CAAH,GAA2B,IAAtC;AACN;;AACD,QAAIE,IAAI,CAACP,YAAL,KAAsBG,UAA1B,EAAsC;AACpC,aAAOC,IAAI,GAAGA,IAAI,CAACK,IAAL,CAAUJ,UAAV,EAAsBK,GAAtB,CAAH,GAAgC,IAA3C;AACD;;AAEDH,IAAAA,IAAI,CAACL,KAAL,CAAWC,UAAX,EAAuBC,IAAvB,EAA6BC,UAA7B,EAAyCK,GAAzC;AACD,GAbD;AAcD,CAtBD;;AAwBAb,oBAAoB,CAACI,SAArB,CAA+BY,QAA/B,GAA0C,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDR,EAAhD,EAAoD;AAC5F,MAAI,OAAOO,WAAP,KAAuB,UAA3B,EAAuC;AACrCP,IAAAA,EAAE,GAAGO,WAAL;AAAkBA,IAAAA,WAAW,GAAG,IAAd;AAAoBC,IAAAA,SAAS,GAAG,IAAZ;AACvC,GAFD,MAEO,IAAI,OAAOA,SAAP,KAAqB,UAAzB,EAAqC;AAC1CR,IAAAA,EAAE,GAAGQ,SAAL;AAAgBA,IAAAA,SAAS,GAAG,IAAZ;AACjB;;AAED,MAAI,CAAC,KAAKhB,YAAV,EAAwB,KAAKA,YAAL,GAAoBc,IAApB;AACxB,OAAKhB,MAAL,CAAYgB,IAAZ,IAAoB;AAAEF,IAAAA,MAAM,EAAEG,WAAV;AAAuBJ,IAAAA,IAAI,EAAEK,SAA7B;AAAwCR,IAAAA,EAAE,EAAEA;AAA5C,GAApB;AACA,SAAO,IAAP;AACD,CAVD;AAYA;;;;;AAGAS,MAAM,CAACC,OAAP,GAAiBrB,oBAAjB","sourcesContent":["function AcceptorStateMachine(states, state) {\n  this.currentState = state || null;\n  this.states = states || {};\n}\n\nAcceptorStateMachine.prototype.runTo = function runTo(finalState, done, bindObject, inputError) {\n  if (typeof finalState === 'function') {\n    inputError = bindObject; bindObject = done;\n    done = finalState; finalState = null;\n  }\n\n  var self = this;\n  var state = self.states[self.currentState];\n  state.fn.call(bindObject || self, inputError, function(err) {\n    if (err) {\n      if (state.fail) self.currentState = state.fail;\n      else return done ? done.call(bindObject, err) : null;\n    } else {\n      if (state.accept) self.currentState = state.accept;\n      else return done ? done.call(bindObject) : null;\n    }\n    if (self.currentState === finalState) {\n      return done ? done.call(bindObject, err) : null;\n    }\n\n    self.runTo(finalState, done, bindObject, err);\n  });\n};\n\nAcceptorStateMachine.prototype.addState = function addState(name, acceptState, failState, fn) {\n  if (typeof acceptState === 'function') {\n    fn = acceptState; acceptState = null; failState = null;\n  } else if (typeof failState === 'function') {\n    fn = failState; failState = null;\n  }\n\n  if (!this.currentState) this.currentState = name;\n  this.states[name] = { accept: acceptState, fail: failState, fn: fn };\n  return this;\n};\n\n/**\n * @api private\n */\nmodule.exports = AcceptorStateMachine;\n"]},"metadata":{},"sourceType":"script"}