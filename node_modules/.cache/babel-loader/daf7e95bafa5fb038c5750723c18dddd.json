{"ast":null,"code":"var util = require('../core').util;\n\nvar convert = require('./converter');\n\nvar Translator = function Translator(options) {\n  options = options || {};\n  this.attrValue = options.attrValue;\n  this.convertEmptyValues = Boolean(options.convertEmptyValues);\n  this.wrapNumbers = Boolean(options.wrapNumbers);\n};\n\nTranslator.prototype.translateInput = function (value, shape) {\n  this.mode = 'input';\n  return this.translate(value, shape);\n};\n\nTranslator.prototype.translateOutput = function (value, shape) {\n  this.mode = 'output';\n  return this.translate(value, shape);\n};\n\nTranslator.prototype.translate = function (value, shape) {\n  var self = this;\n  if (!shape || value === undefined) return undefined;\n\n  if (shape.shape === self.attrValue) {\n    return convert[self.mode](value, {\n      convertEmptyValues: self.convertEmptyValues,\n      wrapNumbers: self.wrapNumbers\n    });\n  }\n\n  switch (shape.type) {\n    case 'structure':\n      return self.translateStructure(value, shape);\n\n    case 'map':\n      return self.translateMap(value, shape);\n\n    case 'list':\n      return self.translateList(value, shape);\n\n    default:\n      return self.translateScalar(value, shape);\n  }\n};\n\nTranslator.prototype.translateStructure = function (structure, shape) {\n  var self = this;\n  if (structure == null) return undefined;\n  var struct = {};\n  util.each(structure, function (name, value) {\n    var memberShape = shape.members[name];\n\n    if (memberShape) {\n      var result = self.translate(value, memberShape);\n      if (result !== undefined) struct[name] = result;\n    }\n  });\n  return struct;\n};\n\nTranslator.prototype.translateList = function (list, shape) {\n  var self = this;\n  if (list == null) return undefined;\n  var out = [];\n  util.arrayEach(list, function (value) {\n    var result = self.translate(value, shape.member);\n    if (result === undefined) out.push(null);else out.push(result);\n  });\n  return out;\n};\n\nTranslator.prototype.translateMap = function (map, shape) {\n  var self = this;\n  if (map == null) return undefined;\n  var out = {};\n  util.each(map, function (key, value) {\n    var result = self.translate(value, shape.value);\n    if (result === undefined) out[key] = null;else out[key] = result;\n  });\n  return out;\n};\n\nTranslator.prototype.translateScalar = function (value, shape) {\n  return shape.toType(value);\n};\n/**\n * @api private\n */\n\n\nmodule.exports = Translator;","map":{"version":3,"sources":["/home/ec2-user/chime-voiceconnector-agent-assist/node_modules/aws-sdk/lib/dynamodb/translator.js"],"names":["util","require","convert","Translator","options","attrValue","convertEmptyValues","Boolean","wrapNumbers","prototype","translateInput","value","shape","mode","translate","translateOutput","self","undefined","type","translateStructure","translateMap","translateList","translateScalar","structure","struct","each","name","memberShape","members","result","list","out","arrayEach","member","push","map","key","toType","module","exports"],"mappings":"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","sourcesContent":["var util = require('../core').util;\nvar convert = require('./converter');\n\nvar Translator = function(options) {\n  options = options || {};\n  this.attrValue = options.attrValue;\n  this.convertEmptyValues = Boolean(options.convertEmptyValues);\n  this.wrapNumbers = Boolean(options.wrapNumbers);\n};\n\nTranslator.prototype.translateInput = function(value, shape) {\n  this.mode = 'input';\n  return this.translate(value, shape);\n};\n\nTranslator.prototype.translateOutput = function(value, shape) {\n  this.mode = 'output';\n  return this.translate(value, shape);\n};\n\nTranslator.prototype.translate = function(value, shape) {\n  var self = this;\n  if (!shape || value === undefined) return undefined;\n\n  if (shape.shape === self.attrValue) {\n    return convert[self.mode](value, {\n      convertEmptyValues: self.convertEmptyValues,\n      wrapNumbers: self.wrapNumbers,\n    });\n  }\n  switch (shape.type) {\n    case 'structure': return self.translateStructure(value, shape);\n    case 'map': return self.translateMap(value, shape);\n    case 'list': return self.translateList(value, shape);\n    default: return self.translateScalar(value, shape);\n  }\n};\n\nTranslator.prototype.translateStructure = function(structure, shape) {\n  var self = this;\n  if (structure == null) return undefined;\n\n  var struct = {};\n  util.each(structure, function(name, value) {\n    var memberShape = shape.members[name];\n    if (memberShape) {\n      var result = self.translate(value, memberShape);\n      if (result !== undefined) struct[name] = result;\n    }\n  });\n  return struct;\n};\n\nTranslator.prototype.translateList = function(list, shape) {\n  var self = this;\n  if (list == null) return undefined;\n\n  var out = [];\n  util.arrayEach(list, function(value) {\n    var result = self.translate(value, shape.member);\n    if (result === undefined) out.push(null);\n    else out.push(result);\n  });\n  return out;\n};\n\nTranslator.prototype.translateMap = function(map, shape) {\n  var self = this;\n  if (map == null) return undefined;\n\n  var out = {};\n  util.each(map, function(key, value) {\n    var result = self.translate(value, shape.value);\n    if (result === undefined) out[key] = null;\n    else out[key] = result;\n  });\n  return out;\n};\n\nTranslator.prototype.translateScalar = function(value, shape) {\n  return shape.toType(value);\n};\n\n/**\n * @api private\n */\nmodule.exports = Translator;\n"]},"metadata":{},"sourceType":"script"}