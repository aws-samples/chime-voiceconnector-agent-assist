{"ast":null,"code":"/**\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\n */\n\n/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {!Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nexport default function getAttributes(element) {\n  var attrs = {}; // Validate input.\n\n  if (!(element && element.nodeType === 1)) return attrs; // Return an empty object if there are no attributes.\n\n  var map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (var i = 0, attr = void 0; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n\n  return attrs;\n}","map":{"version":3,"sources":["../../../src/vendor/dom-utils/get-attributes.ts"],"names":[],"mappings":"AAAA;;;;AAIA;;;;;;;AAOA,eAAc,SAAU,aAAV,CAAwB,OAAxB,EAA+B;AAC5C,MAAM,KAAK,GAAG,EAAd,CAD4C,CAG5C;;AACA,MAAI,EAAE,OAAO,IAAI,OAAO,CAAC,QAAR,KAAqB,CAAlC,CAAJ,EAA0C,OAAO,KAAP,CAJE,CAM5C;;AACA,MAAM,GAAG,GAAG,OAAO,CAAC,UAApB;AACA,MAAI,GAAG,CAAC,MAAJ,KAAe,CAAnB,EAAsB,OAAO,EAAP;;AAEtB,OAAK,IAAI,CAAC,GAAG,CAAR,EAAW,IAAI,GAAA,KAAA,CAApB,EAAuB,IAAI,GAAG,GAAG,CAAC,CAAD,CAAjC,EAAuC,CAAC,EAAxC,EAA4C;AAC3C,IAAA,KAAK,CAAC,IAAI,CAAC,IAAN,CAAL,GAAmB,IAAI,CAAC,KAAxB;AACA;;AACD,SAAO,KAAP;AACA","sourceRoot":"","sourcesContent":["/**\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\n */\n/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {!Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nexport default function getAttributes(element) {\n    var attrs = {};\n    // Validate input.\n    if (!(element && element.nodeType === 1))\n        return attrs;\n    // Return an empty object if there are no attributes.\n    var map = element.attributes;\n    if (map.length === 0)\n        return {};\n    for (var i = 0, attr = void 0; (attr = map[i]); i++) {\n        attrs[attr.name] = attr.value;\n    }\n    return attrs;\n}\n//# sourceMappingURL=get-attributes.js.map"]},"metadata":{},"sourceType":"module"}