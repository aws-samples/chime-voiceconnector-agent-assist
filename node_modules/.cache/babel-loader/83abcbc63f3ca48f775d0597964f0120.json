{"ast":null,"code":"/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport { getLocation } from '../language/location';\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\nexport function printError(error) {\n  var printedLocations = [];\n\n  if (error.nodes) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = error.nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var node = _step.value;\n\n        if (node.loc) {\n          printedLocations.push(highlightSourceAtLocation(node.loc.source, getLocation(node.loc.source, node.loc.start)));\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  } else if (error.source && error.locations) {\n    var source = error.source;\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = error.locations[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var location = _step2.value;\n        printedLocations.push(highlightSourceAtLocation(source, location));\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n  }\n\n  return printedLocations.length === 0 ? error.message : [error.message].concat(printedLocations).join('\\n\\n') + '\\n';\n}\n/**\n * Render a helpful description of the location of the error in the GraphQL\n * Source document.\n */\n\nfunction highlightSourceAtLocation(source, location) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = location.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = location.line + lineOffset;\n  var columnOffset = location.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = location.column + columnOffset;\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  return \"\".concat(source.name, \" (\").concat(lineNum, \":\").concat(columnNum, \")\\n\") + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1, \": \"), lines[lineIndex - 1]], [\"\".concat(lineNum, \": \"), lines[lineIndex]], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1, \": \"), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = 0;\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = existingLines[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var _ref4 = _step3.value;\n      var prefix = _ref4[0];\n      padLen = Math.max(padLen, prefix.length);\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return lpad(padLen, prefix) + line;\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction lpad(len, str) {\n  return whitespace(len - str.length) + str;\n}","map":{"version":3,"sources":["/home/ec2-user/chime-voiceconnector-agent-assist/node_modules/graphql/error/printError.mjs"],"names":["getLocation","printError","error","printedLocations","nodes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","next","done","node","value","loc","push","highlightSourceAtLocation","source","start","err","return","locations","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","location","length","message","concat","join","firstLineColumnOffset","locationOffset","column","body","whitespace","lineIndex","line","lineOffset","lineNum","columnOffset","columnNum","lines","split","name","printPrefixedLines","existingLines","filter","_ref","_","padLen","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_ref4","prefix","Math","max","map","_ref3","lpad","len","Array","str"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *  strict\n */\nimport { getLocation } from '../language/location';\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\nexport function printError(error) {\n  var printedLocations = [];\n\n  if (error.nodes) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = error.nodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var node = _step.value;\n\n        if (node.loc) {\n          printedLocations.push(highlightSourceAtLocation(node.loc.source, getLocation(node.loc.source, node.loc.start)));\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  } else if (error.source && error.locations) {\n    var source = error.source;\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = error.locations[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var location = _step2.value;\n        printedLocations.push(highlightSourceAtLocation(source, location));\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n  }\n\n  return printedLocations.length === 0 ? error.message : [error.message].concat(printedLocations).join('\\n\\n') + '\\n';\n}\n/**\n * Render a helpful description of the location of the error in the GraphQL\n * Source document.\n */\n\nfunction highlightSourceAtLocation(source, location) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = location.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = location.line + lineOffset;\n  var columnOffset = location.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = location.column + columnOffset;\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  return \"\".concat(source.name, \" (\").concat(lineNum, \":\").concat(columnNum, \")\\n\") + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1, \": \"), lines[lineIndex - 1]], [\"\".concat(lineNum, \": \"), lines[lineIndex]], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1, \": \"), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = 0;\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = existingLines[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var _ref4 = _step3.value;\n      var prefix = _ref4[0];\n      padLen = Math.max(padLen, prefix.length);\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return lpad(padLen, prefix) + line;\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction lpad(len, str) {\n  return whitespace(len - str.length) + str;\n}"]},"metadata":{},"sourceType":"module"}