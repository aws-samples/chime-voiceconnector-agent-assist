import { Transformer, TransformerContext } from 'graphql-transformer-core';
import { ObjectTypeDefinitionNode, DirectiveNode } from 'graphql';
export declare class KeyTransformer extends Transformer {
    constructor();
    object: (definition: ObjectTypeDefinitionNode, directive: DirectiveNode, ctx: TransformerContext) => void;
    private updateIndexStructures;
    private updateSchema;
    private updateResolvers;
    private addKeyConditionInputs;
    private updateQueryFields;
    private updateGetField;
    private updateListField;
    private ensureQueryField;
    private generateModelXConnectionType;
    private updateInputObjects;
    private setKeySnippet;
    private validateKeyArgumentSnippet;
    private validate;
    isPrimaryKey: (directive: DirectiveNode) => boolean;
    replacePrimaryKey: (definition: ObjectTypeDefinitionNode, directive: DirectiveNode, ctx: TransformerContext) => void;
    appendSecondaryIndex: (definition: ObjectTypeDefinitionNode, directive: DirectiveNode, ctx: TransformerContext) => void;
    private updateMutationConditionInput;
    private typeExist;
}
//# sourceMappingURL=KeyTransformer.d.ts.map