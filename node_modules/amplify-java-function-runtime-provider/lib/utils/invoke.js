"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const execa_1 = __importDefault(require("execa"));
const path_1 = __importDefault(require("path"));
const constants_1 = require("./constants");
const build_1 = require("./build");
exports.invokeResource = async (request, context) => {
    await build_1.buildResource({
        env: request.env,
        runtime: request.runtime,
        srcRoot: request.srcRoot,
        lastBuildTimestamp: request.lastBuildTimestamp,
    });
    const [handlerClassName, handlerMethodName] = request.handler.split('::');
    const childProcess = execa_1.default('java', ['-jar', constants_1.shimJarPath, path_1.default.join(request.srcRoot, 'build', 'libs', 'latest_build.jar'), handlerClassName, handlerMethodName], {
        input: request.event,
    });
    childProcess.stdout.pipe(process.stdout);
    const { stdout, exitCode } = await childProcess;
    if (exitCode !== 0) {
        throw new Error(`java failed, exit code was ${exitCode}`);
    }
    const lines = stdout.split('\n');
    const lastLine = lines[lines.length - 1];
    let result = lastLine;
    try {
        result = JSON.parse(lastLine);
    }
    catch (err) {
        context.print.warning('Could not parse function output as JSON. Using raw output.');
    }
    return result;
};
//# sourceMappingURL=invoke.js.map